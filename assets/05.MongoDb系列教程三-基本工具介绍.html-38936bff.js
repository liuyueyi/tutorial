import{_ as a,V as e,W as s,X as n,Y as o,a1 as r}from"./framework-094145d2.js";const i="/tutorial/imgs/200325/00.jpg",t="/tutorial/imgs/200325/01.jpg",d="/tutorial/imgs/200325/02.jpg",l={},p=o("p",null,"mongodb服务器安装完毕之后，提供了一些配套的操作工具，接下来我们有必要认识一下它们，并了解基本用法",-1),c=r(`<h3 id="_0-mongod" tabindex="-1"><a class="header-anchor" href="#_0-mongod" aria-hidden="true">#</a> 0. mongod</h3><p>启动mongodb实例的主要命令，常见的使用姿势如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongod <span class="token parameter variable">--dbpath</span><span class="token operator">=</span>/data/mongodb/data <span class="token parameter variable">--logpath</span><span class="token operator">=</span>/data/mongodb/logs <span class="token parameter variable">--logappend</span> <span class="token parameter variable">--auth</span>  <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">27017</span> <span class="token parameter variable">--fork</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_1-mongo-命令行使用" tabindex="-1"><a class="header-anchor" href="#_1-mongo-命令行使用" aria-hidden="true">#</a> 1. mongo 命令行使用</h3><p>mongodb安装完毕之后，会自带一个终端命令行工具，通过它可以连接mongodb，并执行相关命令</p><h4 id="a-连接" tabindex="-1"><a class="header-anchor" href="#a-连接" aria-hidden="true">#</a> a. 连接</h4><p>介绍三种连接mongodb的姿势</p><p><strong>case1</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo <span class="token parameter variable">--host</span> 目标主机 <span class="token parameter variable">--port</span> 端口号 <span class="token parameter variable">-u</span> 用户名 <span class="token parameter variable">-p</span> 密码 <span class="token parameter variable">--authenticationDatabase</span> admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>case2</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo mongodb://root:root@127.0.0.1:27017/admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>case3</strong></p><p>上面两种姿势虽然简单，但是用户名密码有暴露的风险，推荐使用下面这种方式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo <span class="token parameter variable">--host</span> 目标主机 <span class="token parameter variable">--port</span> 端口号

use admin
db.auth<span class="token punctuation">(</span><span class="token string">&#39;用户名&#39;</span>, <span class="token string">&#39;密码&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-操作" tabindex="-1"><a class="header-anchor" href="#b-操作" aria-hidden="true">#</a> b. 操作</h4><p>连接上mongodb服务器之后，就可以执行mongo命令，查看数据库，管理文档，比如下面给几个常见的操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看所有database</span>
show dbs

<span class="token comment"># 选择数据库(不存在时，创建）</span>
use basic

<span class="token comment"># 显示所有集合</span>
show collections

<span class="token comment"># 查看文档</span>
db.demo.findOne<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-mongoimport-mongoexport" tabindex="-1"><a class="header-anchor" href="#_2-mongoimport-mongoexport" aria-hidden="true">#</a> 2. mongoimport/mongoexport</h3><p>用于导入导出数据，如</p><p>将库<code>database</code>中的集合<code>collection</code>导出到json文件<code>out.json</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/mongoexport <span class="token parameter variable">-h</span> localhost:27107 <span class="token parameter variable">-u</span> user <span class="token parameter variable">-p</span> <span class="token builtin class-name">pwd</span> <span class="token parameter variable">-d</span> database <span class="token parameter variable">-c</span> collection <span class="token parameter variable">-o</span> out.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>从json文件导入到目标集合<code>new_collection</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>bin/mongoimport <span class="token parameter variable">-h</span> localhost:27107 <span class="token parameter variable">-u</span> user <span class="token parameter variable">-p</span> <span class="token builtin class-name">pwd</span> <span class="token parameter variable">-d</span> database <span class="token parameter variable">-c</span> new_collection ./out.json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-mongodump-mongorestore" tabindex="-1"><a class="header-anchor" href="#_3-mongodump-mongorestore" aria-hidden="true">#</a> 3. mongodump/mongorestore</h3><p>使用mongodump命令来备份MongoDB数据, 将数据库<code>basic</code>的所有集合备份到目录 <code>/tmp/outDir</code>下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongodump <span class="token parameter variable">-d</span> basic <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> root <span class="token parameter variable">--authenticationDatabase</span> admin <span class="token parameter variable">-o</span> /tmp/outDir
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用mongorestore恢复，如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># --drop 表示先删除当前数据，然后再恢复，可以不指定</span>
mongorestore <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> root <span class="token parameter variable">--authenticationDatabase</span> admin <span class="token parameter variable">--drop</span> /tmp/outDir
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-mongostate" tabindex="-1"><a class="header-anchor" href="#_4-mongostate" aria-hidden="true">#</a> 4. mongostate</h3><p>mongostat是mongodb自带的状态检测工具，在命令行下使用。它会间隔固定时间获取mongodb的当前运行状态，并输出。如果你发现数据库突然变慢或者有其他问题的话，你第一手的操作就考虑采用mongostat来查看mongo的状态。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongostat <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> root <span class="token parameter variable">--authenticationDatabase</span> admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+t+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-mongotop" tabindex="-1"><a class="header-anchor" href="#_5-mongotop" aria-hidden="true">#</a> 5. mongotop</h3><p>mongotop提供每个集合的水平的统计数据，默认每s输出一次</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',36);function m(b,u){return e(),s("div",null,[p,n(" more "),c])}const v=a(l,[["render",m],["__file","05.MongoDb系列教程三-基本工具介绍.html.vue"]]);export{v as default};
