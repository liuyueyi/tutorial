import{_ as t,V as p,W as e,Y as n,Z as s,$ as o,a1 as c,F as i}from"./framework-094145d2.js";const l="/tutorial/imgs/column/quick-media/image/18180654_y9iv.gif",u="/tutorial/imgs/column/quick-media/image/18180717_MrRM.png",k={},d=c('<h1 id="java实现长图文生成" tabindex="-1"><a class="header-anchor" href="#java实现长图文生成" aria-hidden="true">#</a> Java实现长图文生成</h1><blockquote><p>很久很久以前，就觉得微博的长图文实现得非常有意思，将排版直接以最终的图片输出，收藏查看分享都很方便，现在则自己动手实现一个简单版本的</p></blockquote><h2 id="目标" tabindex="-1"><a class="header-anchor" href="#目标" aria-hidden="true">#</a> 目标</h2><p>首先定义下我们预期达到的目标：根据文字 + 图片生成长图文</p><h3 id="目标拆解" tabindex="-1"><a class="header-anchor" href="#目标拆解" aria-hidden="true">#</a> 目标拆解</h3><ul><li>支持大段文字生成图片</li><li>支持插入图片</li><li>支持上下左右边距设置</li><li>支持字体选择</li><li>支持字体颜色</li><li>支持左对齐，居中，右对齐</li></ul><h3 id="预期结果" tabindex="-1"><a class="header-anchor" href="#预期结果" aria-hidden="true">#</a> 预期结果</h3><p>我们将通过spring-boot搭建一个生成长图文的http接口，通过传入参数来指定各种配置信息，下面是一个最终调用的示意图</p><figure><img src="'+l+`" alt="演示图" tabindex="0" loading="lazy"><figcaption>演示图</figcaption></figure><h2 id="设计-实现" tabindex="-1"><a class="header-anchor" href="#设计-实现" aria-hidden="true">#</a> 设计&amp;实现</h2><blockquote><p>长图文的生成，采用awt进行文字绘制和图片绘制</p></blockquote><h3 id="_1-参数选项-imgcreateoptions" tabindex="-1"><a class="header-anchor" href="#_1-参数选项-imgcreateoptions" aria-hidden="true">#</a> 1. 参数选项 <code>ImgCreateOptions</code></h3><p>根据我们的预期目标，设定配置参数，基本上会包含以下参数</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span>
<span class="token annotation punctuation">@Setter</span>
<span class="token annotation punctuation">@ToString</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImgCreateOptions</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 绘制的背景图
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">BufferedImage</span> bgImg<span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * 生成图片的宽
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> imgW<span class="token punctuation">;</span>


    <span class="token keyword">private</span> <span class="token class-name">Font</span> font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">PLAIN</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 字体色
     */</span>
    <span class="token keyword">private</span> <span class="token class-name">Color</span> fontColor <span class="token operator">=</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">;</span>


    <span class="token doc-comment comment">/**
     * 两边边距
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> leftPadding<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 上边距
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> topPadding<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 底边距
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> bottomPadding<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 行距
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> linePadding<span class="token punctuation">;</span>


    <span class="token keyword">private</span> <span class="token class-name">AlignStyle</span> alignStyle<span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 对齐方式
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">AlignStyle</span> <span class="token punctuation">{</span>
        <span class="token constant">LEFT</span><span class="token punctuation">,</span>
        <span class="token constant">CENTER</span><span class="token punctuation">,</span>
        <span class="token constant">RIGHT</span><span class="token punctuation">;</span>


        <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">AlignStyle</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">static</span> <span class="token punctuation">{</span>
            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">AlignStyle</span> style<span class="token operator">:</span> <span class="token class-name">AlignStyle</span><span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>style<span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> style<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">AlignStyle</span> <span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            name <span class="token operator">=</span> name<span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>map<span class="token punctuation">.</span><span class="token function">containsKey</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token constant">LEFT</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-封装类-imagecreatewrapper" tabindex="-1"><a class="header-anchor" href="#_2-封装类-imagecreatewrapper" aria-hidden="true">#</a> 2. 封装类 <code>ImageCreateWrapper</code></h3><p>封装配置参数的设置，绘制文本，绘制图片的操作方式，输出样式等接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ImgCreateWrapper</span> <span class="token punctuation">{</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Builder</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Builder</span> <span class="token punctuation">{</span>
        <span class="token doc-comment comment">/**
         * 生成的图片创建参数
         */</span>
        <span class="token keyword">private</span> <span class="token class-name">ImgCreateOptions</span> options <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ImgCreateOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token doc-comment comment">/**
         * 输出的结果
         */</span>
        <span class="token keyword">private</span> <span class="token class-name">BufferedImage</span> result<span class="token punctuation">;</span>


        <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> addH <span class="token operator">=</span> <span class="token number">1000</span><span class="token punctuation">;</span>


        <span class="token doc-comment comment">/**
         * 实际填充的内容高度
         */</span>
        <span class="token keyword">private</span> <span class="token keyword">int</span> contentH<span class="token punctuation">;</span>


        <span class="token keyword">private</span> <span class="token class-name">Color</span> bgColor<span class="token punctuation">;</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setBgColor</span><span class="token punctuation">(</span><span class="token keyword">int</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">setBgColor</span><span class="token punctuation">(</span><span class="token class-name">ColorUtil</span><span class="token punctuation">.</span><span class="token function">int2color</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token doc-comment comment">/**
         * 设置背景图
         *
         * <span class="token keyword">@param</span> <span class="token parameter">bgColor</span>
         * <span class="token keyword">@return</span>
         */</span>
        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setBgColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span> bgColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">.</span>bgColor <span class="token operator">=</span> bgColor<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setBgImg</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> bgImg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setBgImg</span><span class="token punctuation">(</span>bgImg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setImgW</span><span class="token punctuation">(</span><span class="token keyword">int</span> w<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setImgW</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setFont</span><span class="token punctuation">(</span><span class="token class-name">Font</span> font<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token class-name">String</span> fontName<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Font</span> font <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span>fontName<span class="token punctuation">,</span> font<span class="token punctuation">.</span><span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> font<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setFontColor</span><span class="token punctuation">(</span><span class="token keyword">int</span> fontColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">setFontColor</span><span class="token punctuation">(</span><span class="token class-name">ColorUtil</span><span class="token punctuation">.</span><span class="token function">int2color</span><span class="token punctuation">(</span>fontColor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setFontColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span> fontColor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setFontColor</span><span class="token punctuation">(</span>fontColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> fontSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Font</span> font <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            options<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span>font<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> font<span class="token punctuation">.</span><span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setLeftPadding</span><span class="token punctuation">(</span><span class="token keyword">int</span> leftPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setLeftPadding</span><span class="token punctuation">(</span>leftPadding<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setTopPadding</span><span class="token punctuation">(</span><span class="token keyword">int</span> topPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setTopPadding</span><span class="token punctuation">(</span>topPadding<span class="token punctuation">)</span><span class="token punctuation">;</span>
            contentH <span class="token operator">=</span> topPadding<span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setBottomPadding</span><span class="token punctuation">(</span><span class="token keyword">int</span> bottomPadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setBottomPadding</span><span class="token punctuation">(</span>bottomPadding<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setLinePadding</span><span class="token punctuation">(</span><span class="token keyword">int</span> linePadding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setLinePadding</span><span class="token punctuation">(</span>linePadding<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setAlignStyle</span><span class="token punctuation">(</span><span class="token class-name">String</span> style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token function">setAlignStyle</span><span class="token punctuation">(</span><span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token function">getStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">setAlignStyle</span><span class="token punctuation">(</span><span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span> alignStyle<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            options<span class="token punctuation">.</span><span class="token function">setAlignStyle</span><span class="token punctuation">(</span>alignStyle<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">drawContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// xxx</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">String</span> img<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">BufferedImage</span> bfImg<span class="token punctuation">;</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                 bfImg <span class="token operator">=</span> <span class="token class-name">ImageUtil</span><span class="token punctuation">.</span><span class="token function">getImageByPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;load draw img error! img: {}, e:{}&quot;</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;load draw img error! img: &quot;</span> <span class="token operator">+</span> img<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token function">drawImage</span><span class="token punctuation">(</span>bfImg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> bufferedImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>

           <span class="token comment">// xxx</span>
           <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">BufferedImage</span> <span class="token function">asImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> realH <span class="token operator">=</span> contentH <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token class-name">BufferedImage</span> bf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> realH<span class="token punctuation">,</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">.</span><span class="token constant">TYPE_INT_ARGB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getBgImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>bgColor <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span> <span class="token operator">:</span> bgColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
                g2d<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> realH<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                g2d<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getBgImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> realH<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            g2d<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> bf<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>


        <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">asString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
            <span class="token class-name">BufferedImage</span> img <span class="token operator">=</span> <span class="token function">asImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token class-name">Base64Util</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面具体的文本和图片绘制实现没有，后面详细讲解，这里主要关注的是一个参数 <code>contentH</code>， 表示实际绘制的内容高度（包括上边距），因此最终生成图片的高度应该是</p><p><code>int realH = contentH + options.getBottomPadding();</code></p><p>其次简单说一下上面的图片输出方法：<code>com.hust.hui.quickmedia.common.image.ImgCreateWrapper.Builder#asImage</code></p><ul><li>计算最终生成图片的高度（宽度由输入参数指定）</li><li>绘制背景（如果没有背景图片，则用纯色填充）</li><li>绘制实体内容（即绘制的文本，图片）</li></ul><h3 id="_3-内容填充-graphicutil" tabindex="-1"><a class="header-anchor" href="#_3-内容填充-graphicutil" aria-hidden="true">#</a> 3. 内容填充 <code>GraphicUtil</code></h3><blockquote><p>具体的内容填充，区分为文本绘制和图片绘制</p></blockquote><h4 id="设计" tabindex="-1"><a class="header-anchor" href="#设计" aria-hidden="true">#</a> 设计</h4><ol><li><p>考虑到在填充的过程中，可以自由设置字体，颜色等，所以在我们的绘制方法中，直接实现掉内容的绘制填充，即 <code>drawXXX</code> 方法真正的实现了内容填充，执行完之后，内容已经填充到画布上了</p></li><li><p>图片绘制，考虑到图片本身大小和最终结果的大小可能有冲突，采用下面的规则</p></li></ol><ul><li>绘制图片宽度 &lt;=（指定生成图片宽 - 边距），全部填充</li><li>绘制图片宽度 &gt;（指定生成图片宽 - 边距），等比例缩放绘制图片</li></ul><ol start="3"><li>文本绘制，换行的问题</li></ol><ul><li>每一行允许的文本长度有限，超过时，需要自动换行处理</li></ul><h4 id="文本绘制" tabindex="-1"><a class="header-anchor" href="#文本绘制" aria-hidden="true">#</a> 文本绘制</h4><p>考虑基本的文本绘制，流程如下</p><ul><li>创建<code>BufferImage</code>对象</li><li>获取<code>Graphic2d</code>对象，操作绘制</li><li>设置基本配置信息</li><li>文本按换行进行拆分为字符串数组, 循环绘制单行内容 <ul><li>计算当行字符串，实际绘制的行数，然后进行拆分</li><li>依次绘制文本（需要注意y坐标的变化）</li></ul></li></ul><p>下面是具体的实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">drawContent</span><span class="token punctuation">(</span><span class="token class-name">Graphics2D</span> g2d<span class="token punctuation">,</span>
                                  <span class="token class-name">String</span> content<span class="token punctuation">,</span>
                                  <span class="token keyword">int</span> y<span class="token punctuation">,</span>
                                  <span class="token class-name">ImgCreateOptions</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">int</span> w <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> leftPadding <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> linePadding <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Font</span> font <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">// 一行容纳的字符个数</span>
    <span class="token keyword">int</span> lineNum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>w <span class="token operator">-</span> <span class="token punctuation">(</span>leftPadding <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> font<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 对长串字符串进行分割成多行进行绘制</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token function">splitStr</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> lineNum<span class="token punctuation">)</span><span class="token punctuation">;</span>

    g2d<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span>

    g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getFontColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> x<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> tmp <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x <span class="token operator">=</span> <span class="token function">calOffsetX</span><span class="token punctuation">(</span>leftPadding<span class="token punctuation">,</span> w<span class="token punctuation">,</span> tmp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> font<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getAlignStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token punctuation">(</span>linePadding <span class="token operator">+</span> font<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> index<span class="token punctuation">)</span><span class="token punctuation">;</span>
        index<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">return</span> y <span class="token operator">+</span> <span class="token punctuation">(</span>linePadding <span class="token operator">+</span> font<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 计算不同对其方式时，对应的x坐标
 *
 * <span class="token keyword">@param</span> <span class="token parameter">padding</span> 左右边距
 * <span class="token keyword">@param</span> <span class="token parameter">width</span>   图片总宽
 * <span class="token keyword">@param</span> <span class="token parameter">strSize</span> 字符串总长
 * <span class="token keyword">@param</span> <span class="token parameter">style</span>   对其方式
 * <span class="token keyword">@return</span> 返回计算后的x坐标
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">calOffsetX</span><span class="token punctuation">(</span><span class="token keyword">int</span> padding<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> width<span class="token punctuation">,</span>
                              <span class="token keyword">int</span> strSize<span class="token punctuation">,</span>
                              <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span> style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>style <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token constant">LEFT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> padding<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>style <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token constant">RIGHT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> width <span class="token operator">-</span> padding <span class="token operator">-</span> strSize<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>width <span class="token operator">-</span> strSize<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
 * 按照长度对字符串进行分割
 * <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>
 * fixme 包含emoj表情时，兼容一把
 *
 * <span class="token keyword">@param</span> <span class="token parameter">str</span>      原始字符串
 * <span class="token keyword">@param</span> <span class="token parameter">splitLen</span> 分割的长度
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">splitStr</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token keyword">int</span> splitLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> len <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>len <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> splitLen<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> end <span class="token operator">=</span> splitLen<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>start<span class="token punctuation">,</span> end <span class="token operator">&gt;</span> len <span class="token operator">?</span> len <span class="token operator">:</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
        start <span class="token operator">=</span> end<span class="token punctuation">;</span>
        end <span class="token operator">+=</span> splitLen<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的实现比较清晰了，图片的绘制则更加简单</p><h4 id="图片绘制" tabindex="-1"><a class="header-anchor" href="#图片绘制" aria-hidden="true">#</a> 图片绘制</h4><p>只需要重新计算下待绘制图片的宽高即可，具体实现如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 在原图上绘制图片
 *
 * <span class="token keyword">@param</span> <span class="token parameter">source</span>  原图
 * <span class="token keyword">@param</span> <span class="token parameter">dest</span>    待绘制图片
 * <span class="token keyword">@param</span> <span class="token parameter">y</span>       待绘制的y坐标
 * <span class="token keyword">@param</span> <span class="token parameter">options</span>
 * <span class="token keyword">@return</span> 绘制图片的高度
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> source<span class="token punctuation">,</span>
                            <span class="token class-name">BufferedImage</span> dest<span class="token punctuation">,</span>
                            <span class="token keyword">int</span> y<span class="token punctuation">,</span>
                            <span class="token class-name">ImgCreateOptions</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> <span class="token function">getG2d</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dest<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> w <span class="token operator">*</span> dest<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> dest<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token function">calOffsetX</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> w<span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getAlignStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 绘制图片</span>
    g2d<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span>
            x<span class="token punctuation">,</span>
            y <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            w<span class="token punctuation">,</span>
            h<span class="token punctuation">,</span>
            <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> h<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Graphics2D</span> <span class="token function">getG2d</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> bf<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_ALPHA_INTERPOLATION</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_ALPHA_INTERPOLATION_QUALITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_ANTIALIASING</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_ANTIALIAS_ON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_COLOR_RENDERING</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_COLOR_RENDER_QUALITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_DITHERING</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_DITHER_ENABLE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_FRACTIONALMETRICS</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_FRACTIONALMETRICS_ON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_INTERPOLATION</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_INTERPOLATION_BILINEAR</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_RENDERING</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_RENDER_QUALITY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_STROKE_CONTROL</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_STROKE_PURE</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> g2d<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-内容渲染" tabindex="-1"><a class="header-anchor" href="#_4-内容渲染" aria-hidden="true">#</a> 4. 内容渲染</h3><p>前面只是给出了单块内容（如一段文字，一张图片）的渲染，存在一些问题</p><ul><li>绘制的内容超过画布的高度如何处理</li><li>文本绘制要求传入的文本没有换行符，否则换行不生效</li><li>交叉绘制的场景，如何重新计算y坐标</li></ul><hr><p>解决这些问题则是在 <code>ImgCreateWrapper</code> 的具体绘制中进行了实现，先看文本的绘制</p><ul><li>根据换行符对字符串进行拆分</li><li>计算绘制内容最终转换为图片时，所占用的高度</li><li>重新生成画布 <code>BufferedImage result</code><ul><li>如果result为空，则直接生成</li><li>如果最终生成的高度，超过已有画布的高度，则生成一个更高的画布，并将原来的内容绘制上去</li></ul></li><li>迭代绘制单行内容</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">drawContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>strs<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// empty line</span>
        strs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> fontSize <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> lineNum <span class="token operator">=</span> <span class="token function">calLineNum</span><span class="token punctuation">(</span>strs<span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontSize<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 填写内容需要占用的高度</span>
    <span class="token keyword">int</span> height <span class="token operator">=</span> lineNum <span class="token operator">*</span> <span class="token punctuation">(</span>fontSize <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>height <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> contentH <span class="token operator">+</span> height <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 超过原来图片高度的上限, 则需要扩充图片长度</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                result<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>height <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// 绘制文字</span>
    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">drawContent</span><span class="token punctuation">(</span>g2d<span class="token punctuation">,</span> str<span class="token punctuation">,</span>
                contentH <span class="token operator">+</span> <span class="token punctuation">(</span>fontSize <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">++</span>index<span class="token punctuation">)</span>
                <span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    contentH <span class="token operator">+=</span> height<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
 * 计算总行数
 *
 * <span class="token keyword">@param</span> <span class="token parameter">strs</span>     字符串列表
 * <span class="token keyword">@param</span> <span class="token parameter">w</span>        生成图片的宽
 * <span class="token keyword">@param</span> <span class="token parameter">padding</span>  渲染内容的左右边距
 * <span class="token keyword">@param</span> <span class="token parameter">fontSize</span> 字体大小
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">int</span> <span class="token function">calLineNum</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs<span class="token punctuation">,</span> <span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> padding<span class="token punctuation">,</span> <span class="token keyword">int</span> fontSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 每行的字符数</span>
    <span class="token keyword">double</span> lineFontLen <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token punctuation">(</span>w <span class="token operator">-</span> <span class="token punctuation">(</span>padding <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">double</span><span class="token punctuation">)</span> fontSize<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">int</span> totalLine <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        totalLine <span class="token operator">+=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> lineFontLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> totalLine<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面需要注意的是画布的生成规则，特别是高度超过上限之后，重新计算图片高度时，需要额外注意新增的高度，应该为基本的增量与（绘制内容高度+下边距）的较大值</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>int realAddH = Math.max(bufferedImage.getHeight() + options.getBottomPadding() + options.getTopPadding(), BASE_ADD_H)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重新生成画布实现 <code>com.hust.hui.quickmedia.common.util.GraphicUtil#createImg</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">BufferedImage</span> <span class="token function">createImg</span><span class="token punctuation">(</span><span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token class-name">BufferedImage</span> img<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BufferedImage</span> bf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">.</span><span class="token constant">TYPE_INT_ARGB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>img <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        g2d<span class="token punctuation">.</span><span class="token function">setComposite</span><span class="token punctuation">(</span><span class="token class-name">AlphaComposite<span class="token punctuation">.</span>Src</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d<span class="token punctuation">.</span><span class="token function">setRenderingHint</span><span class="token punctuation">(</span><span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">KEY_ANTIALIASING</span><span class="token punctuation">,</span> <span class="token class-name">RenderingHints</span><span class="token punctuation">.</span><span class="token constant">VALUE_ANTIALIAS_ON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> bf<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面理解之后，绘制图片就比较简单了，基本上行没什么差别</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">String</span> img<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BufferedImage</span> bfImg<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        bfImg <span class="token operator">=</span> <span class="token class-name">ImageUtil</span><span class="token punctuation">.</span><span class="token function">getImageByPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;load draw img error! img: {}, e:{}&quot;</span><span class="token punctuation">,</span> img<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalStateException</span><span class="token punctuation">(</span><span class="token string">&quot;load draw img error! img: &quot;</span> <span class="token operator">+</span> img<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> <span class="token function">drawImage</span><span class="token punctuation">(</span>bfImg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">public</span> <span class="token class-name">Builder</span> <span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> bufferedImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> contentH <span class="token operator">+</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 超过阀值</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                result<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 更新实际高度</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span>
            bufferedImage<span class="token punctuation">,</span>
            contentH<span class="token punctuation">,</span>
            options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    contentH <span class="token operator">+=</span> h <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-http接口" tabindex="-1"><a class="header-anchor" href="#_5-http接口" aria-hidden="true">#</a> 5. http接口</h3><p>上面实现的生成图片的公共方法，在 <code>quick-media</code> 工程中，利用spring-boot搭建了一个web服务，提供了一个http接口，用于生成长图文，最终的成果就是我们开头的那个gif图的效果，相关代码就没啥好说的，有兴趣的可以直接查看工程源码，链接看最后</p><h2 id="测试验证" tabindex="-1"><a class="header-anchor" href="#测试验证" aria-hidden="true">#</a> 测试验证</h2><p>上面基本上完成了我们预期的目标，接下来则是进行验证，测试代码比较简单，先准备一段文本，这里拉了一首诗</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>招魂酹翁宾旸
郑起

君之在世帝敕下，君之谢世帝敕回。
魂之为变性原返，气之为物情本开。
於戏龙兮凤兮神气盛，噫嘻鬼兮归兮大块埃。
身可朽名不可朽，骨可灰神不可灰。
采石捉月李白非醉，耒阳避水子美非灾。
长孙王吉命不夭，玉川老子诗不徘。
新城罗隐在奇特，钱塘潘阆终崔嵬。
阴兮魄兮曷往，阳兮魄兮曷来。
君其归来，故交寥落更散漫。
君来归来，帝城绚烂可徘徊。
君其归来，东西南北不可去。
君其归来。
春秋霜露令人哀。
花之明吾无与笑，叶之陨吾实若摧。
晓猿啸吾闻泪堕，宵鹤立吾见心猜。
玉泉其清可鉴，西湖其甘可杯。
孤山暖梅香可嗅，花翁葬荐菊之隈。
君其归来，可伴逋仙之梅，去此又奚之哉。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>测试代码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGenImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token number">400</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> leftPadding <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> topPadding <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> bottomPadding <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> linePadding <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token class-name">Font</span> font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">&quot;宋体&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">PLAIN</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ImgCreateWrapper<span class="token punctuation">.</span>Builder</span> build <span class="token operator">=</span> <span class="token class-name">ImgCreateWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setImgW</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setLeftPadding</span><span class="token punctuation">(</span>leftPadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setTopPadding</span><span class="token punctuation">(</span>topPadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBottomPadding</span><span class="token punctuation">(</span>bottomPadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setLinePadding</span><span class="token punctuation">(</span>linePadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setAlignStyle</span><span class="token punctuation">(</span><span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span>
<span class="token comment">//                .setBgImg(ImageUtil.getImageByPath(&quot;qrbg.jpg&quot;))</span>
            <span class="token punctuation">.</span><span class="token function">setBgColor</span><span class="token punctuation">(</span><span class="token number">0xFFF7EED6</span><span class="token punctuation">)</span>
            <span class="token punctuation">;</span>


    <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token class-name">FileReadUtil</span><span class="token punctuation">.</span><span class="token function">createLineRead</span><span class="token punctuation">(</span><span class="token string">&quot;text/poem.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> line<span class="token punctuation">;</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        build<span class="token punctuation">.</span><span class="token function">drawContent</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">++</span>index <span class="token operator">==</span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            build<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token class-name">ImageUtil</span><span class="token punctuation">.</span><span class="token function">getImageByPath</span><span class="token punctuation">(</span><span class="token string">&quot;https://static.oschina.net/uploads/img/201708/12175633_sOfz.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">7</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            build<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">==</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            build<span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            build<span class="token punctuation">.</span><span class="token function">setFontColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">RED</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">BufferedImage</span> img <span class="token operator">=</span> build<span class="token punctuation">.</span><span class="token function">asImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> out <span class="token operator">=</span> <span class="token class-name">Base64Util</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;img src=\\&quot;data:image/png;base64,&quot;</span> <span class="token operator">+</span> out <span class="token operator">+</span> <span class="token string">&quot;\\&quot; /&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出图片</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2>',60),r={href:"https://github.com/liuyueyi/quick-media",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const a=i("ExternalLinkIcon");return p(),e("div",null,[d,n("p",null,[s("项目地址: "),n("a",r,[s("https://github.com/liuyueyi/quick-media"),o(a)])])])}const f=t(k,[["render",v],["__file","02.Java实现长图文合成.html.vue"]]);export{f as default};
