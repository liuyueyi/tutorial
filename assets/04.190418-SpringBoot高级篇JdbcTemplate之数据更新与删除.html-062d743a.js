import{_ as e,V as p,W as o,X as c,Y as n,Z as s,$ as t,a1 as l,F as i}from"./framework-094145d2.js";const u="/tutorial/imgs/190418/00.jpg",r="/tutorial/imgs/190418/01.gif",k="/tutorial/imgs/190418/02.jpg",d={},m=n("p",null,"前面介绍了JdbcTemplate的插入数据和查询数据，占用CURD中的两项，本文则将主要介绍数据更新和删除。从基本使用上来看，姿势和前面的没啥两样",-1),v=n("h2",{id:"i-环境准备",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#i-环境准备","aria-hidden":"true"},"#"),s(" I. 环境准备")],-1),b={href:"http://spring.hhui.blog/spring-blog/2019/04/07/190407-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87JdbcTemplate%E4%B9%8B%E6%95%B0%E6%8D%AE%E6%8F%92%E5%85%A5%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF%E8%AF%A6%E8%A7%A3/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/liuyueyi/spring-boot-demo/blob/master/spring-boot/101-jdbctemplate",target:"_blank",rel:"noopener noreferrer"},g=l('<p>我们查询所用数据，正是前面一篇插入的结果，如下图</p><figure><img src="'+u+`" alt="data" tabindex="0" loading="lazy"><figcaption>data</figcaption></figure><h2 id="ii-更新使用说明" tabindex="-1"><a class="header-anchor" href="#ii-更新使用说明" aria-hidden="true">#</a> II. 更新使用说明</h2><p>对于数据更新，这里会分为两种进行说明，单个和批量；这个单个并不是指只能一条记录，主要针对的是sql的数量而言</p><h3 id="_1-update-方式" tabindex="-1"><a class="header-anchor" href="#_1-update-方式" aria-hidden="true">#</a> 1. update 方式</h3><p>看过第一篇数据插入的童鞋，应该也能发现，新增数据也是用的这个方法，下面会介绍三种不同的使用姿势</p><p>先提供一个数据查询的转换方法，用于对比数据更新前后的结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">MoneyPO</span> <span class="token function">queryById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForObject</span><span class="token punctuation">(</span>
            <span class="token string">&quot;select id, \`name\`, money, is_deleted as isDeleted, unix_timestamp(create_at) as &quot;</span> <span class="token operator">+</span>
                    <span class="token string">&quot;created, unix_timestamp(update_at) as updated from money where id=?&quot;</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">BeanPropertyRowMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">MoneyPO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="a-纯sql更新" tabindex="-1"><a class="header-anchor" href="#a-纯sql更新" aria-hidden="true">#</a> a. 纯sql更新</h4><p>这个属于最基本的方式了，前面几篇博文中大量使用了，传入一条完整的sql，执行即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">int</span> id <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>

<span class="token comment">// 最基本的sql更新</span>
<span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;update money set money=money + 999 where id =&quot;</span> <span class="token operator">+</span> id<span class="token punctuation">;</span>
<span class="token keyword">int</span> ans <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;basic update: &quot;</span> <span class="token operator">+</span> ans <span class="token operator">+</span> <span class="token string">&quot; | db: &quot;</span> <span class="token operator">+</span> <span class="token function">queryById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-占位sql" tabindex="-1"><a class="header-anchor" href="#b-占位sql" aria-hidden="true">#</a> b. 占位sql</h4><p>问好占位，实际内容通过参数传递方式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 占位方式</span>
sql <span class="token operator">=</span> <span class="token string">&quot;update money set money=money + ? where id = ?&quot;</span><span class="token punctuation">;</span>
ans <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token number">888</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;placeholder update: &quot;</span> <span class="token operator">+</span> ans <span class="token operator">+</span> <span class="token string">&quot; | db: &quot;</span> <span class="token operator">+</span> <span class="token function">queryById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-statement" tabindex="-1"><a class="header-anchor" href="#c-statement" aria-hidden="true">#</a> c. statement</h4><p>从前面的几篇文章中可以看出，使用statement的方式，最大的好处有几点</p><ul><li>可以点对点的设置填充参数</li><li><code>PreparedStatementCreator</code> 方式可以获取db连接，主动设置各种参数</li></ul><p>下面给出两个常见的使用方式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 通过 PreparedStatementCreator 方式更新</span>
ans <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PreparedStatementCreator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">PreparedStatement</span> <span class="token function">createPreparedStatement</span><span class="token punctuation">(</span><span class="token class-name">Connection</span> connection<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 设置自动提交，设置100ms的超时，这种方式最大的好处是可以控制db连接的参数</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            connection<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            connection<span class="token punctuation">.</span><span class="token function">setNetworkTimeout</span><span class="token punctuation">(</span><span class="token class-name">Executors</span><span class="token punctuation">.</span><span class="token function">newSingleThreadExecutor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">PreparedStatement</span> statement <span class="token operator">=</span>
                    connection<span class="token punctuation">.</span><span class="token function">prepareStatement</span><span class="token punctuation">(</span><span class="token string">&quot;update money set money=money + ? where id &quot;</span> <span class="token operator">+</span> <span class="token string">&quot;= ?&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            statement<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">777</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            statement<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> statement<span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;statementCreator update: &quot;</span> <span class="token operator">+</span> ans <span class="token operator">+</span> <span class="token string">&quot; | db: &quot;</span> <span class="token operator">+</span> <span class="token function">queryById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// 通过 PreparedStatementSetter 来设置占位参数值</span>
ans <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">PreparedStatementSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setValues</span><span class="token punctuation">(</span><span class="token class-name">PreparedStatement</span> preparedStatement<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        preparedStatement<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;statementSetter update: &quot;</span> <span class="token operator">+</span> ans <span class="token operator">+</span> <span class="token string">&quot; | db: &quot;</span> <span class="token operator">+</span> <span class="token function">queryById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意下第一种调用中，设置了超时时间，下面给出一个动图，演示超时的使用姿势</p><figure><img src="`+r+`" alt="show" tabindex="0" loading="lazy"><figcaption>show</figcaption></figure><p>在上图中，</p><ul><li>首先是一个开启一个事物，并修改了一条记录，这个时候这条记录会加上写锁</li><li>然后JdbcTemplate中修改上面的这条记录，尝试加写锁，但是会失败，所以一直阻塞，当超时之后，抛出异常</li></ul><h3 id="_2-batchupdate-方式" tabindex="-1"><a class="header-anchor" href="#_2-batchupdate-方式" aria-hidden="true">#</a> 2. batchUpdate 方式</h3><p>批量方式，执行多个sql，从使用上看和前面没有太大的区别，先给出一个查询的通用方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MoneyPO</span><span class="token punctuation">&gt;</span></span> <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">StringBuilder</span> strIds <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Integer</span> id <span class="token operator">:</span> ids<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        strIds<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string">&quot;select id, \`name\`, money, is_deleted as isDeleted, unix_timestamp(create_at) as &quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;created, unix_timestamp(update_at) as updated from money where id in (&quot;</span> <span class="token operator">+</span>
            strIds<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> strIds<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;)&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BeanPropertyRowMapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">MoneyPO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="a-纯sql更新-1" tabindex="-1"><a class="header-anchor" href="#a-纯sql更新-1" aria-hidden="true">#</a> a. 纯sql更新</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 批量修改，</span>
<span class="token comment">// 执行多条sql的场景</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> jdbcTemplate
        <span class="token punctuation">.</span><span class="token function">batchUpdate</span><span class="token punctuation">(</span><span class="token string">&quot;update money set money=1300 where id =10&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;update money set money=1300 where id = 11&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;batch update by sql ans: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; | db: &quot;</span> <span class="token operator">+</span> <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-占位sql-1" tabindex="-1"><a class="header-anchor" href="#b-占位sql-1" aria-hidden="true">#</a> b. 占位sql</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 占位替换方式</span>
ans <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">batchUpdate</span><span class="token punctuation">(</span><span class="token string">&quot;update money set money=money + ? where id = ?&quot;</span><span class="token punctuation">,</span>
        <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;batch update by placeHolder ans: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; | db: &quot;</span> <span class="token operator">+</span>
        <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-statement-1" tabindex="-1"><a class="header-anchor" href="#c-statement-1" aria-hidden="true">#</a> c. statement</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 通过 statement</span>
ans <span class="token operator">=</span> jdbcTemplate
        <span class="token punctuation">.</span><span class="token function">batchUpdate</span><span class="token punctuation">(</span><span class="token string">&quot;update money set money=money + ? where id = ?&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BatchPreparedStatementSetter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setValues</span><span class="token punctuation">(</span><span class="token class-name">PreparedStatement</span> preparedStatement<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span> <span class="token punctuation">{</span>
                preparedStatement<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                preparedStatement<span class="token punctuation">.</span><span class="token function">setInt</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getBatchSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>
        <span class="token string">&quot;batch update by statement ans: &quot;</span> <span class="token operator">+</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; | db: &quot;</span> <span class="token operator">+</span> <span class="token function">queryByIds</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意下上面的方法中，<code>getBatchSize</code>返回实际的sql条数，<code>setValues</code>中的i从0开始</p><h3 id="_3-测试" tabindex="-1"><a class="header-anchor" href="#_3-测试" aria-hidden="true">#</a> 3. 测试</h3><p>原始数据中，money都是300，通过一系列的修改，输出如下</p><figure><img src="`+k+`" alt="test result" tabindex="0" loading="lazy"><figcaption>test result</figcaption></figure><h2 id="iii-数据删除" tabindex="-1"><a class="header-anchor" href="#iii-数据删除" aria-hidden="true">#</a> III. 数据删除</h2><p>删除的操作姿势和上面基本一样，也就是sql的写法不同罢了，因此没有太大的必要重新写一篇，下面给出一个简单的demo</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeleteService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">JdbcTemplate</span> jdbcTemplate<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> ans <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&quot;delete from money where id = 13&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;delete: &quot;</span> <span class="token operator">+</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iv-其他" tabindex="-1"><a class="header-anchor" href="#iv-其他" aria-hidden="true">#</a> IV. 其他</h2><p><strong>相关博文</strong></p>`,41),y={href:"http://spring.hhui.blog/spring-blog/2019/04/07/190407-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87JdbcTemplate%E4%B9%8B%E6%95%B0%E6%8D%AE%E6%8F%92%E5%85%A5%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF%E8%AF%A6%E8%A7%A3/",target:"_blank",rel:"noopener noreferrer"},f={href:"http://spring.hhui.top/spring-blog/2019/04/12/190412-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87JdbcTemplate%E4%B9%8B%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E4%B8%8A%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},q={href:"http://spring.hhui.top/spring-blog/2019/04/17/190417-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87JdbcTemplate%E4%B9%8B%E6%95%B0%E6%8D%AE%E6%9F%A5%E8%AF%A2%E4%B8%8B%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},_=n("h3",{id:"_0-项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-项目","aria-hidden":"true"},"#"),s(" 0. 项目")],-1),w={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},E={href:"https://github.com/liuyueyi/spring-boot-demo/blob/master/spring-boot/101-jdbctemplate",target:"_blank",rel:"noopener noreferrer"};function B(A,S){const a=i("ExternalLinkIcon");return p(),o("div",null,[m,c(" more "),v,n("p",null,[s("环境依然借助前面一篇的配置，链接如： "),n("a",b,[s("190407-SpringBoot高级篇JdbcTemplate之数据插入使用姿势详解"),t(a)])]),n("p",null,[s("或者直接查看项目源码： "),n("a",h,[s("https://github.com/liuyueyi/spring-boot-demo/blob/master/spring-boot/101-jdbctemplate"),t(a)])]),g,n("ul",null,[n("li",null,[n("a",y,[s("190407-SpringBoot高级篇JdbcTemplate之数据插入使用姿势详解"),t(a)])]),n("li",null,[n("a",f,[s("190412-SpringBoot高级篇JdbcTemplate之数据查询上篇"),t(a)])]),n("li",null,[n("a",q,[s("190417-SpringBoot高级篇JdbcTemplate之数据查询下篇"),t(a)])])]),_,n("ul",null,[n("li",null,[s("工程："),n("a",w,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("项目："),n("a",E,[s("https://github.com/liuyueyi/spring-boot-demo/blob/master/spring-boot/101-jdbctemplate"),t(a)])])])])}const x=e(d,[["render",B],["__file","04.190418-SpringBoot高级篇JdbcTemplate之数据更新与删除.html.vue"]]);export{x as default};
