import{_ as t,V as l,W as c,X as p,Y as n,Z as a,$ as e,a1 as i,F as o}from"./framework-094145d2.js";const d={},r=n("p",null,"最近换了个win10的笔记本，发布jar到中央仓库就得重新配置下了，特此记录一下，在win10的ubuntu终端界面下，如果我们希望实现发布jar包到中央仓库，需要的完整环境安装配置教程",-1),u=n("p",null,"主要内容与之前介绍的没有太大改动，因为账号相关的已经有了，这里将直接跳过；前文超链",-1),v={href:"https://blog.hhui.top/hexblog/2020/11/28/201128-Maven-%E4%B8%AD%E5%A4%AE%E4%BB%93%E5%BA%93%E6%8F%90%E4%BA%A4Jar%E5%8C%85%E5%85%A8%E7%A8%8B%E6%8C%87%E5%8D%97/",target:"_blank",rel:"noopener noreferrer"},m=i(`<h3 id="_1-maven环境安装" tabindex="-1"><a class="header-anchor" href="#_1-maven环境安装" aria-hidden="true">#</a> 1. maven环境安装</h3><p>既然是打包上传，那么maven环境得有，而maven则又需要借助jdk，所以第一步就是安装jdk</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> openjdk-8-jdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完毕之后，执行下<code>java</code>命令确认下是否安装准确</p><p>第二步就是安装maven了</p><p>直接到官网找对应得下载包</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 下载</span>
<span class="token function">wget</span> https://dlcdn.apache.org/maven/maven-3/3.8.5/binaries/apache-maven-3.8.5-bin.tar.gz
<span class="token comment"># 2. 解压</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> apache-maven-3.8.5-bin.tar.gz

<span class="token comment"># 3. 配置环境变量</span>
<span class="token function">vim</span> ~/.profile

<span class="token comment"># 注意下面得地址，根据实际的进行替换</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">MAVEN_HOME</span><span class="token operator">=</span><span class="token string">&quot;/home/yihui/soft/apache-maven-3.8.5/bin&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$MAVEN_HOME</span>

<span class="token comment">## 4. 让配置生效</span>
<span class="token builtin class-name">source</span> ~/.profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到此maven就算配置完成了，可以通过执行 <code>mvn</code> 命令来验证下是否ok</p><h3 id="_2-gpg配置" tabindex="-1"><a class="header-anchor" href="#_2-gpg配置" aria-hidden="true">#</a> 2. gpg配置</h3><p>相比于之前因为mac系统老旧安装这个折腾很久来说，这次安装可以说无比顺畅了，直接apt即可</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> gdb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装完之后，就是配置密钥了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成密钥对</span>
<span class="token comment"># 输入用户名 + 邮箱，请记住这个密码，后面上传jar包的时候会用到</span>
gpg --gen-key
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意：上面这个key的密钥非常重要，以后每次上传包进行签名的就是它</strong></p><p>查看本地密钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>gpg --list-keys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>正常返回结果如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>pub   rsa3072 2022-06-02 [SC] [expires: 2024-06-01]
      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx  （&lt;- 注意这个就是我们需要上传的公钥id）
uid                      yihuihui &lt;yihuihuiyi@gmail.com&gt;
sub   rsa3072 2022-06-02 [E] [expires: 2024-06-01]
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来就是上传公钥id到密钥服务器</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 上传公钥</span>
gpg <span class="token parameter variable">--keyserver</span> hkp://keyserver.ubuntu.com:11371 --send-keys 公钥ID

<span class="token comment">## 查看公钥上传情况</span>
gpg <span class="token parameter variable">--keyserver</span> hkp://keyserver.ubuntu.com:11371 --recv-keys 公钥ID
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上传成功之后，查看返回如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>gpg: key 274D20CF942E6787: &quot;yihuihui &lt;yihuihuiyi@gmail.com&gt;&quot; not changed
gpg: Total number processed: 1
gpg:              unchanged: 1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-配置-m2-setting-xml" tabindex="-1"><a class="header-anchor" href="#_4-配置-m2-setting-xml" aria-hidden="true">#</a> 4. 配置.m2/setting.xml</h3><p>最后剩下的配置就是mvn上传仓库的账号信息</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servers</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">&gt;</span></span> 
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>ossrh<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">&gt;</span></span>user<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">&gt;</span></span>password<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servers</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-上传" tabindex="-1"><a class="header-anchor" href="#_5-上传" aria-hidden="true">#</a> 5. 上传</h3>`,26),g={href:"https://github.com/liuyueyi/quick-media",target:"_blank",rel:"noopener noreferrer"},b=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 打包上传</span>
mvn clean deploy <span class="token parameter variable">-DskipTests</span><span class="token operator">=</span>true <span class="token parameter variable">-P</span> release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>执行上面打包上传之后，却发现没有提示输gpg密码的地方，果不其然最后的上传结果也是失败，提示信息如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>[ERROR] Failed to execute goal org.apache.maven.plugins:maven-gpg-plugin:1.6:sign (sign-artifacts) on project quick-media: Exit code: 2 -&gt; [Help 1]
[ERROR]
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR]
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然错误原因我们也能猜测到，但是怎么解决呢?</p>`,4),h={href:"https://stackoverflow.com/questions/32018765/failed-to-execute-goal-org-apache-maven-pluginsmaven-gpg-plugin",target:"_blank",rel:"noopener noreferrer"},k=n("p",null,"解决方法选的是第二个回答，执行下面这个命令",-1),x=n("div",{class:"language-text line-numbers-mode","data-ext":"text"},[n("pre",{class:"language-text"},[n("code",null,`export GPG_TTY=$(tty)
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),_=n("p",null,"再次执行上传，就没啥问题了",-1);function f(E,y){const s=o("ExternalLinkIcon");return l(),c("div",null,[r,p(" more "),u,n("ul",null,[n("li",null,[n("a",v,[a("201128-Maven 中央仓库提交Jar包全程指南 - 一灰灰Blog"),e(s)])])]),m,n("p",null,[a("到这里就可以愉快的发布包到maven中央仓库了，当然前提是对应的项目已经配置好了，这里以 "),n("a",g,[a("https://github.com/liuyueyi/quick-media"),e(s)]),a(" 为例（若希望知道具体的pom文件应该怎么配的，可以翻看文章头的博文，或者直接看左边这个项目的pom文件）")]),b,n("p",null,[a("stackoverflow 上有一个类似的提问其中一个回答可以解决这个问题 "),n("a",h,[a("failed to execute goal org.apache.maven.plugins:maven-gpg-plugin"),e(s)])]),k,x,_])}const w=t(d,[["render",f],["__file","220602-Ubuntu终端实现Maven中央仓库包上传.html.vue"]]);export{w as default};
