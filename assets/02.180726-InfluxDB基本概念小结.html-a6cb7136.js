import{_ as a,V as n,W as e,X as t,Y as s,Z as p,a1 as l}from"./framework-094145d2.js";const r={},i=s("h1",{id:"influxdb基本概念小结",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#influxdb基本概念小结","aria-hidden":"true"},"#"),p(" InfluxDB基本概念小结")],-1),o=s("p",null,"InfluxDB作为时序数据库，与传统的关系型数据库相比而言，还是有一些区别的，下面尽量以简单明了的方式介绍下相关的术语概念",-1),d=l(`<h2 id="i-基本概念" tabindex="-1"><a class="header-anchor" href="#i-基本概念" aria-hidden="true">#</a> I. 基本概念</h2><table><thead><tr><th>mysql</th><th>influxdb</th><th>说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>measurement</td><td>类似mysql中表的概念</td></tr><tr><td>record</td><td>tag + field + timestamp</td><td>传统表中的一行数据，映射到influxdb中，可以划分为三个</td></tr></tbody></table><h3 id="_1-database" tabindex="-1"><a class="header-anchor" href="#_1-database" aria-hidden="true">#</a> 1. database</h3><p>数据库，和mysql的数据库相比，没有太大的歧义</p><h3 id="_2-measurement" tabindex="-1"><a class="header-anchor" href="#_2-measurement" aria-hidden="true">#</a> 2. measurement</h3><p>对比的是mysql中的table，从实际体验来看，两个之间最明显的区别在于没有单独的创建measurement的方法，直接新增一条数据时，若measurement不存在，则直接创建并插入一条数据</p><h3 id="_3-point" tabindex="-1"><a class="header-anchor" href="#_3-point" aria-hidden="true">#</a> 3. Point</h3><p>这个对比的是mysql中的record，在influxDB中，表示每个表中，某个时刻，满足某个条件的filed数据（简单来说就是 timestamp + tag + filed)的组成一个point</p><ul><li>timestamp : 时间戳，ns单位，每个记录都必然有这个属性，没有显示添加时，默认给一个</li><li>tag: 标签，kv结构，在database中， tag + measurement 一起构建索引 <ul><li>参与索引创建，因此适合作为查询的过滤条件</li><li>tag的数据量不要太多，最好能有典型的辨别性（和mysql的建立索引的原则差不多）</li><li>value为String类型</li><li>tag是可选的，在measurement不设置tag也是ok的</li></ul></li><li>field：存储数据，kv结构 <ul><li>数据类型为: long, String, boolean, float</li></ul></li></ul><h3 id="_4-series" tabindex="-1"><a class="header-anchor" href="#_4-series" aria-hidden="true">#</a> 4. Series</h3><p>Series: tag key 与tag value的唯一组合</p><h2 id="ii-实例分析" tabindex="-1"><a class="header-anchor" href="#ii-实例分析" aria-hidden="true">#</a> II. 实例分析</h2><p>上面几个为基本的概念，单独的看起来印象不够深刻，下面结合实例进行说明：</p><p>建立一个measurement,保存某个应用的性能状况，包含以下指标, 每秒写一次数据到influxDB中</p><ul><li>服务机器: host=127.0.0.1</li><li>服务接口: service=app.service.index</li><li>qps: qps=1340</li><li>rt: 1313</li><li>cpu: 45.23</li><li>mem: 4154m</li><li>load: 1.21</li></ul><h3 id="_1-measurement创建" tabindex="-1"><a class="header-anchor" href="#_1-measurement创建" aria-hidden="true">#</a> 1. measurement创建</h3><p>上面有7个指标参数，第一步就是区分tag和field，前面说到tag会建索引，推荐用于可以区分类型，取值可以预估的字段，所以对上面进行如下区分</p><p><strong>tag</strong></p><ul><li>host</li><li>servie</li></ul><p><strong>field</strong></p><ul><li>qps</li><li>rt</li><li>cpu</li><li>mem</li><li>load</li></ul><p>一条实际的插入数据如</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">insert</span> myapp<span class="token punctuation">,</span>host<span class="token operator">=</span><span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span><span class="token punctuation">,</span>service<span class="token operator">=</span>app<span class="token punctuation">.</span>service<span class="token punctuation">.</span><span class="token keyword">index</span> qps<span class="token operator">=</span><span class="token number">1340</span><span class="token punctuation">,</span>rt<span class="token operator">=</span><span class="token number">1313</span><span class="token punctuation">,</span>cpu<span class="token operator">=</span><span class="token number">45.23</span><span class="token punctuation">,</span>mem<span class="token operator">=</span><span class="token string">&quot;4145m&quot;</span><span class="token punctuation">,</span><span class="token keyword">load</span><span class="token operator">=</span><span class="token number">1.21</span>
<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> myapp
name: myapp
<span class="token keyword">time</span>                cpu   host      <span class="token keyword">load</span> mem   qps  rt   service
<span class="token comment">----                ---   ----      ---- ---   ---  --   -------</span>
<span class="token number">1532597158613778583</span> <span class="token number">45.23</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token number">1.21</span> <span class="token number">4145</span>m <span class="token number">1340</span> <span class="token number">1313</span> app<span class="token punctuation">.</span>service<span class="token punctuation">.</span><span class="token keyword">index</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="a-小结说明" tabindex="-1"><a class="header-anchor" href="#a-小结说明" aria-hidden="true">#</a> a. 小结说明</h4><ul><li>在insert执行语句中，tag与tag、field与field之间用都好进行分割，tag与field之间用空格分割</li><li>tag的value都是，String类型，不需要加双引号</li><li>field的String类型数据，需要放在双引号中，否则会报错</li><li>如果需要显示添加时间戳，在filed后添加空格，再添加时间戳</li></ul><h4 id="b-是否可以没有field" tabindex="-1"><a class="header-anchor" href="#b-是否可以没有field" aria-hidden="true">#</a> b. 是否可以没有field</h4><p>实测不行，输出如下</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">insert</span> myabb<span class="token punctuation">,</span>host<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">,</span>service<span class="token operator">=</span><span class="token keyword">index</span>
ERR: {<span class="token string">&quot;error&quot;</span>:<span class="token string">&quot;unable to parse &#39;myabb,host=123,service=index &#39;: invalid field format&quot;</span>}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="是否可以没有tag" tabindex="-1"><a class="header-anchor" href="#是否可以没有tag" aria-hidden="true">#</a> 是否可以没有tag</h4><p>根据前面的说明已经实测，可以</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">insert</span> myabb qps<span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">,</span>rt<span class="token operator">=</span><span class="token number">1231</span>
<span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> myabb
name: myabb
<span class="token keyword">time</span>                qps rt
<span class="token comment">----                --- --</span>
<span class="token number">1532597385053030634</span> <span class="token number">123</span> <span class="token number">1231</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-数据分析" tabindex="-1"><a class="header-anchor" href="#_2-数据分析" aria-hidden="true">#</a> 2. 数据分析</h3><p>新插入几条数据，目前的数据为</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> myapp
name: myapp
<span class="token keyword">time</span>                cpu   host      <span class="token keyword">load</span> mem   qps  rt   service
<span class="token comment">----                ---   ----      ---- ---   ---  --   -------</span>
<span class="token number">1532597158613778583</span> <span class="token number">45.23</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token number">1.21</span> <span class="token number">4145</span>m <span class="token number">1340</span> <span class="token number">1313</span> app<span class="token punctuation">.</span>service<span class="token punctuation">.</span><span class="token keyword">index</span>
<span class="token number">1532597501578551929</span> <span class="token number">45.23</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token number">1.21</span> <span class="token number">4145</span>m <span class="token number">1341</span> <span class="token number">1312</span> app<span class="token punctuation">.</span>service<span class="token punctuation">.</span><span class="token keyword">index</span>
<span class="token number">1532597510225918132</span> <span class="token number">45.23</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.1</span> <span class="token number">1.21</span> <span class="token number">4145</span>m <span class="token number">1341</span> <span class="token number">1312</span> app<span class="token punctuation">.</span>service<span class="token punctuation">.</span>about
<span class="token number">1532597552421996033</span> <span class="token number">45.23</span> <span class="token number">127.0</span><span class="token number">.0</span><span class="token number">.2</span> <span class="token number">1.21</span> <span class="token number">4145</span>m <span class="token number">1341</span> <span class="token number">1312</span> app<span class="token punctuation">.</span>service<span class="token punctuation">.</span>about
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="a-series" tabindex="-1"><a class="header-anchor" href="#a-series" aria-hidden="true">#</a> a. series</h4><p>上面四条数据，对应几个series呢 ？</p><p>根据前面的说法，tagKey + tagValue 确定给一个series （实际上是 measurement + retention policy + tags来确定)，因此上表总共有三个series</p><ul><li><code>127.0.0.1 | app.service.index</code></li><li><code>127.0.0.1 | app.service.about</code></li><li><code>127.0.0.2 | app.service.about</code></li></ul><p>那么这个series到底是什么东西呢？</p><p>如果将上面的数据图表化的方式显示出来，我们可以怎么办？</p><ul><li>首先我们确定好应用及其和服务名，然后查看这个服务在这台机器上，在时间线上的服务性能</li><li>翻译过来就是，将cpu/service作为检索条件，以time为时间轴，将value(cpu,load,mem,qps,rt)映射到二维坐标上作为一个点（point），然后将所有的point连接成线，最终得到连续的图表</li></ul><p>所以series就是上面的检索条件，同时point的概念也容易理解了</p><h2 id="iii-保留策略" tabindex="-1"><a class="header-anchor" href="#iii-保留策略" aria-hidden="true">#</a> III. 保留策略</h2><p>前面是表数据的相关基础概念，这里还有一个就是数据保存的策略 retention policy, 用于决定数据保存多久（意思是数据可以删除），保存几个备份，集群的处理等</p><h3 id="_1-基本说明" tabindex="-1"><a class="header-anchor" href="#_1-基本说明" aria-hidden="true">#</a> 1. 基本说明</h3><p>influxdb面向大数据的时序数据库，所以数据量可以很大很大，如果全部存储，估计硬盘的费用都不小，而且有些数据可能并不需要永久存储，因此就有了这个rentention policy</p><p>InfluxDB本身不提供数据的删除操作，因此用来控制数据量的方式就是定义数据保留策略。</p><p>因此定义数据保留策略的目的是让InfluxDB能够知道可以丢弃哪些数据，从而更高效的处理数据。</p><h3 id="_2-基本操作" tabindex="-1"><a class="header-anchor" href="#_2-基本操作" aria-hidden="true">#</a> 2. 基本操作</h3><h4 id="a-查询策略" tabindex="-1"><a class="header-anchor" href="#a-查询策略" aria-hidden="true">#</a> a. 查询策略</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">show</span> retention policies <span class="token keyword">on</span> hh_test
name    duration shardGroupDuration replicaN <span class="token keyword">default</span>
<span class="token comment">----    -------- ------------------ -------- -------</span>
autogen <span class="token number">0</span>s       <span class="token number">168</span>h0m0s           <span class="token number">1</span>        <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>name: 名称</li><li>duration: 保留时间, 0表示永久保存</li><li>shardGroupDuration: shardGroup的存储时间，shardGroup是InfluxDB的一个基本储存结构，应该大于这个时间的数据在查询效率上应该有所降低。</li><li>replicaN: 全称是REPLICATION，副本个数</li><li>default: 是否是默认策略</li></ul><h4 id="b-新建策略" tabindex="-1"><a class="header-anchor" href="#b-新建策略" aria-hidden="true">#</a> b. 新建策略</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">create</span> retention policy <span class="token string">&quot;2_hour&quot;</span> <span class="token keyword">on</span> hh_test duration <span class="token number">2</span>h <span class="token keyword">replication</span> <span class="token number">1</span> <span class="token keyword">default</span>
<span class="token operator">&gt;</span> <span class="token keyword">show</span> retention policies <span class="token keyword">on</span> hh_test
name    duration shardGroupDuration replicaN <span class="token keyword">default</span>
<span class="token comment">----    -------- ------------------ -------- -------</span>
autogen <span class="token number">0</span>s       <span class="token number">168</span>h0m0s           <span class="token number">1</span>        <span class="token boolean">false</span>
<span class="token number">2</span>_hour  <span class="token number">2</span>h0m0s   <span class="token number">1</span>h0m0s             <span class="token number">1</span>        <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-修改策略" tabindex="-1"><a class="header-anchor" href="#c-修改策略" aria-hidden="true">#</a> c. 修改策略</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">alter</span> retention policy <span class="token string">&quot;2_hour&quot;</span> <span class="token keyword">on</span> hh_test duration <span class="token number">4</span>h <span class="token keyword">default</span>
<span class="token operator">&gt;</span> <span class="token keyword">show</span> retention policies <span class="token keyword">on</span> hh_test
name    duration shardGroupDuration replicaN <span class="token keyword">default</span>
<span class="token comment">----    -------- ------------------ -------- -------</span>
autogen <span class="token number">0</span>s       <span class="token number">168</span>h0m0s           <span class="token number">1</span>        <span class="token boolean">false</span>
<span class="token number">2</span>_hour  <span class="token number">4</span>h0m0s   <span class="token number">1</span>h0m0s             <span class="token number">1</span>        <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="d-删除策略" tabindex="-1"><a class="header-anchor" href="#d-删除策略" aria-hidden="true">#</a> d. 删除策略</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token operator">&gt;</span> <span class="token keyword">drop</span> retention policy <span class="token string">&quot;2_hour&quot;</span> <span class="token keyword">on</span> hh_test
<span class="token operator">&gt;</span> <span class="token keyword">show</span> retention policies <span class="token keyword">on</span> hh_test
name    duration shardGroupDuration replicaN <span class="token keyword">default</span>
<span class="token comment">----    -------- ------------------ -------- -------</span>
autogen <span class="token number">0</span>s       <span class="token number">168</span>h0m0s           <span class="token number">1</span>        <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除默认策略之后，就没有默认策略了，是否会有问题呢？</p><h3 id="_3-rp理解" tabindex="-1"><a class="header-anchor" href="#_3-rp理解" aria-hidden="true">#</a> 3. RP理解</h3><p>设置这个策略之后，会自动删除过期的数据，那么数据时怎么保存的呢？</p><p>比如默认的永久保存策略中，有个 <code>shardGroupDuration</code> 参数，为7天，也就是说7天的数据放在一个Shard中，过了之后，新加一个Shard</p><p>shard包含实际的编码和压缩数据，并由磁盘上的TSM文件表示。 每个shard都属于唯一的一个shard group。多个shard可能存在于单个shard group中。每个shard包含一组特定的series。给定shard group中的给定series上的所有点将存储在磁盘上的相同shard（TSM文件）中。</p>`,63);function c(u,m){return n(),e("div",null,[i,o,t(" more "),d])}const b=a(r,[["render",c],["__file","02.180726-InfluxDB基本概念小结.html.vue"]]);export{b as default};
