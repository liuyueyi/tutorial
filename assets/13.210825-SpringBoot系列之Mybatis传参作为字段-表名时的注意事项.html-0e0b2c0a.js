import{_ as e,V as p,W as o,X as l,Y as n,Z as s,$ as t,a1 as c,F as i}from"./framework-094145d2.js";const u="/tutorial/imgs/210825/00.jpg",r="/tutorial/imgs/210825/01.jpg",d="/tutorial/imgs/210825/02.jpg",k={},m=n("p",null,[s("今天遇到一个非常有意思的事情，一个小伙伴反馈，同样的sql，为啥直接通过mysql终端执行的结果，和mybatis的执行结果不一致，感觉有点鬼畜；然后看了一下，发现这是个比较典型的问题，"),n("code",null,"#{}"),s("与"),n("code",null,"${}"),s("的使用区别")],-1),g=n("p",null,"接下来我们看一下这个问题，顺带也重新学习一下它们两的区别",-1),h=c(`<h2 id="i-环境配置" tabindex="-1"><a class="header-anchor" href="#i-环境配置" aria-hidden="true">#</a> I. 环境配置</h2><p>我们使用SpringBoot + Mybatis + MySql来搭建实例demo</p><ul><li>springboot: 2.2.0.RELEASE</li><li>mysql: 5.7.22</li></ul><h3 id="_1-项目配置" tabindex="-1"><a class="header-anchor" href="#_1-项目配置" aria-hidden="true">#</a> 1. 项目配置</h3><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>核心的依赖<code>mybatis-spring-boot-starter</code>，至于版本选择，到mvn仓库中，找最新的</p><p>另外一个不可获取的就是db配置信息，<code>appliaction.yml</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/story<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-数据库表" tabindex="-1"><a class="header-anchor" href="#_2-数据库表" aria-hidden="true">#</a> 2. 数据库表</h3><p>用于测试的数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>money<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>money<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;钱&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>is_deleted<span class="token punctuation">\`</span></span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>create_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>update_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">551</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-场景复现" tabindex="-1"><a class="header-anchor" href="#ii-场景复现" aria-hidden="true">#</a> II. 场景复现</h2><p>一个简单的demo来演示下使用姿势，根据传参，来指定排序的字段；</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MoneyPo</span><span class="token punctuation">&gt;</span></span> <span class="token function">orderBy</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;order&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> order<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>对应的xml如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orderBy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    select * from \`money\` order by #{order} asc
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这个执行之后可能与我们预期的不一致，如下</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-问题修复" tabindex="-1"><a class="header-anchor" href="#_1-问题修复" aria-hidden="true">#</a> 1. 问题修复</h3><p>上面的演示中，本来是希望根据传参进行排序，最后的执行结果会发现都是按照id进行排序</p><p>要解决上面这个问题，也很简单，将<code>#</code>改成<code>$</code></p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>orderBy<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>BaseResultMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    select * from `money` order by ${order} asc\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次测试如下，和我们的预期一致了</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-原因分析" tabindex="-1"><a class="header-anchor" href="#_2-原因分析" aria-hidden="true">#</a> 2. 原因分析</h3><p>上面这个问题的关键原因在于 <code>$</code> 与 <code>#</code>的本质区别，有过一点了解的小伙伴会知道<code>$</code>最终的效果是替换，而<code>#</code>则是占位</p><p>比如上面的两个，转成sql，对应如下</p><ul><li><code>#{}</code>: <code>select * from money order by &#39;money&#39; asc</code><ul><li>注意money作为字符串传入的</li></ul></li><li><code>${}</code>: <code>select * from money order by money asc</code><ul><li>注意money作为列名</li></ul></li></ul><p>上面的第一个sql，非常有意思，执行居然不会抛错，可以正常执行(注意，这个与数据库版本有关，并不是所有的版本都可以正常执行)</p><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-与-对比" tabindex="-1"><a class="header-anchor" href="#_3-与-对比" aria-hidden="true">#</a> 3. #{}与${}对比</h3><table><thead><tr><th>#{}</th><th>${}</th></tr></thead><tbody><tr><td>参数占位，相当于 ?</td><td>直接替换到sql的一部分</td></tr><tr><td>动态解析 -&gt; 预编译 -&gt; 执行</td><td>动态解析 -&gt; 编译 -&gt; 执行</td></tr><tr><td>变量替换是在DBMS 中</td><td>变量替换是在 DBMS 外</td></tr><tr><td>变量替换后，#{} 对应的变量自动加上单引号 &#39;&#39;</td><td>变量替换后，${} 对应的变量不会加上单引号 &#39;&#39;</td></tr><tr><td>防sql注入</td><td>不能防sql注入</td></tr></tbody></table><p>注意事项：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> money <span class="token keyword">where</span> name <span class="token operator">=</span> <span class="token comment">#{name}</span>\n<span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> money <span class="token keyword">where</span> name <span class="token operator">=</span> ${name}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如上面两条sql，在具体传参的时候，就会有一个显著的去呗</p><ul><li>#{name}: 传参 <code>一灰灰</code>，对应sql如下 <ul><li><code>select * from money where name = &#39;一灰灰&#39;</code></li></ul></li><li>${name}: 传参 <code>一灰灰</code>，对应sql如下 <ul><li><code>select * from money where name = 一灰灰</code></li><li>注意上面的sql中，name的传参没有引号，直接就是bad sql</li><li>所以传参应该是 <code>&#39;一灰灰&#39;</code>，需要手动的加上单引号</li></ul></li></ul><p>使用姿势：</p>',37),b=n("ul",null,[n("li",null,"能用 #{} 的地方就用 #{}，不用或少用 ${}"),n("li",null,"表名作参数时，必须用 ${}"),n("li",null,"order by 时，必须用 ${}"),n("li",null,[s("使用 ${} 时，要注意何时加或不加单引号，即 "),n("span",{class:"katex"},[n("span",{class:"katex-mathml"},[n("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[n("semantics",null,[n("mrow",null,[n("mrow"),n("msup",null,[n("mtext",null,"和"),n("mo",{mathvariant:"normal",lspace:"0em",rspace:"0em"},"′")])]),n("annotation",{encoding:"application/x-tex"},"{} 和 '")])])]),n("span",{class:"katex-html","aria-hidden":"true"},[n("span",{class:"base"},[n("span",{class:"strut",style:{height:"0.7519em"}}),n("span",{class:"mord"}),n("span",{class:"mord"},[n("span",{class:"mord cjk_fallback"},"和"),n("span",{class:"msupsub"},[n("span",{class:"vlist-t"},[n("span",{class:"vlist-r"},[n("span",{class:"vlist",style:{height:"0.7519em"}},[n("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[n("span",{class:"pstrut",style:{height:"2.7em"}}),n("span",{class:"sizing reset-size6 size3 mtight"},[n("span",{class:"mord mtight"},[n("span",{class:"mord mtight"},"′")])])])])])])])])])])]),s("{}'")])],-1),v=n("h2",{id:"iii-不能错过的源码和相关知识点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#iii-不能错过的源码和相关知识点","aria-hidden":"true"},"#"),s(" III. 不能错过的源码和相关知识点")],-1),y=n("h3",{id:"_0-项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-项目","aria-hidden":"true"},"#"),s(" 0. 项目")],-1),_={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/103-mybatis-xml",target:"_blank",rel:"noopener noreferrer"},w=n("h3",{id:"_1-微信公众号-一灰灰blog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-微信公众号-一灰灰blog","aria-hidden":"true"},"#"),s(" 1. 微信公众号: 一灰灰Blog")],-1),x=n("p",null,"尽信书则不如，以上内容，纯属一家之言，因个人能力有限，难免有疏漏和错误之处，如发现bug或者有更好的建议，欢迎批评指正，不吝感激",-1),q=n("p",null,"下面一灰灰的个人博客，记录所有学习和工作中的博文，欢迎大家前去逛逛",-1),E={href:"https://blog.hhui.top",target:"_blank",rel:"noopener noreferrer"},T={href:"http://spring.hhui.top",target:"_blank",rel:"noopener noreferrer"},M=n("figure",null,[n("img",{src:"https://spring.hhui.top/spring-blog/imgs/info/info.png",alt:"一灰灰blog",tabindex:"0",loading:"lazy"}),n("figcaption",null,"一灰灰blog")],-1);function N(L,I){const a=i("ExternalLinkIcon");return p(),o("div",null,[m,g,l(" more "),h,b,v,y,n("ul",null,[n("li",null,[s("工程："),n("a",_,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("源码："),n("a",f,[s("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/103-mybatis-xml"),t(a)])])]),w,x,q,n("ul",null,[n("li",null,[s("一灰灰Blog个人博客 "),n("a",E,[s("https://blog.hhui.top"),t(a)])]),n("li",null,[s("一灰灰Blog-Spring专题博客 "),n("a",T,[s("http://spring.hhui.top"),t(a)])])]),M])}const A=e(k,[["render",N],["__file","13.210825-SpringBoot系列之Mybatis传参作为字段-表名时的注意事项.html.vue"]]);export{A as default};
