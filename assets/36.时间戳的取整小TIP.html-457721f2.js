import{_ as t,V as a,W as s,X as d,Y as e,Z as i,a1 as n}from"./framework-094145d2.js";const r={},c=e("h1",{id:"时间戳的取整小tip",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#时间戳的取整小tip","aria-hidden":"true"},"#"),i(" 时间戳的取整小TIP")],-1),l=e("p",null,"一个简单的背景，持有ms为单位的时间戳，需要判断两个时间戳是否为同一分钟",-1),o=n(`<p>先将问题简化下，对s进行取整如何做？</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>time / 1000 * 1000;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>也就是丢掉后面的三位数；那么对分钟取整呢？</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>time / 60000 * 60000;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其实思路和对整百的取整一样，唯一让人感到违和的可能就是时间是60进制的形式，导致一眼看上去，有点诡异</p>`,5);function _(m,u){return a(),s("div",null,[c,l,d(" more "),o])}const v=t(r,[["render",_],["__file","36.时间戳的取整小TIP.html.vue"]]);export{v as default};
