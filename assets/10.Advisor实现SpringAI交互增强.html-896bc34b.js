const e=JSON.parse('{"key":"v-a51d4ab0","path":"/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/10.Advisor%E5%AE%9E%E7%8E%B0SpringAI%E4%BA%A4%E4%BA%92%E5%A2%9E%E5%BC%BA.html","title":"10.Advisor实现SpringAI能力增强","lang":"zh-CN","frontmatter":{"order":10,"title":"10.Advisor实现SpringAI能力增强","tag":["Spring","SpringAI"],"category":["SpringAI"],"date":"2025-08-04T14:24:07.000Z","keywords":"SpringAI","description":"10.Advisor实现SpringAI能力增强 SpringAI通过Advisor API为拦截、修改、增强Spring应用中的AI交互提供了灵活且强大的能力支撑 核心优势在于：封装可复用的生成式AI模式、转换与大语言模型（LLM）交互的数据、实现跨模型与用例的可移植性。 一、基础知识 1. 核心组件 因为大模型一般支持同步/异步流式两种访问方式，相应的SpringAI也提供同步调用call 和 流式调用 stream 两种方式；","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/10.Advisor%E5%AE%9E%E7%8E%B0SpringAI%E4%BA%A4%E4%BA%92%E5%A2%9E%E5%BC%BA.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"10.Advisor实现SpringAI能力增强"}],["meta",{"property":"og:description","content":"10.Advisor实现SpringAI能力增强 SpringAI通过Advisor API为拦截、修改、增强Spring应用中的AI交互提供了灵活且强大的能力支撑 核心优势在于：封装可复用的生成式AI模式、转换与大语言模型（LLM）交互的数据、实现跨模型与用例的可移植性。 一、基础知识 1. 核心组件 因为大模型一般支持同步/异步流式两种访问方式，相应的SpringAI也提供同步调用call 和 流式调用 stream 两种方式；"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-08T02:51:24.000Z"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"SpringAI"}],["meta",{"property":"article:published_time","content":"2025-08-04T14:24:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-08T02:51:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"10.Advisor实现SpringAI能力增强\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-04T14:24:07.000Z\\",\\"dateModified\\":\\"2025-08-08T02:51:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、基础知识","slug":"一、基础知识","link":"#一、基础知识","children":[{"level":3,"title":"1. 核心组件","slug":"_1-核心组件","link":"#_1-核心组件","children":[]},{"level":3,"title":"2. Advisor执行流程","slug":"_2-advisor执行流程","link":"#_2-advisor执行流程","children":[]},{"level":3,"title":"3. 执行顺序","slug":"_3-执行顺序","link":"#_3-执行顺序","children":[]}]},{"level":2,"title":"二、自定义Advisor开发","slug":"二、自定义advisor开发","link":"#二、自定义advisor开发","children":[{"level":3,"title":"1. 耗时统计Advisor","slug":"_1-耗时统计advisor","link":"#_1-耗时统计advisor","children":[]},{"level":3,"title":"2. 测试验证","slug":"_2-测试验证","link":"#_2-测试验证","children":[]}]},{"level":2,"title":"三、小结","slug":"三、小结","link":"#三、小结","children":[]}],"git":{"createdTime":1754621484000,"updatedTime":1754621484000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":5.7,"words":1709},"filePathRelative":"spring/springai/基础篇/10.Advisor实现SpringAI交互增强.md","localizedDate":"2025年8月4日","excerpt":"<h1> 10.Advisor实现SpringAI能力增强</h1>\\n<p>SpringAI通过<code>Advisor API</code>为拦截、修改、增强Spring应用中的AI交互提供了灵活且强大的能力支撑</p>\\n<p>核心优势在于：封装可复用的生成式AI模式、转换与大语言模型（LLM）交互的数据、实现跨模型与用例的可移植性。</p>\\n<h2> 一、基础知识</h2>\\n<h3> 1. 核心组件</h3>\\n<p>因为大模型一般支持同步/异步流式两种访问方式，相应的SpringAI也提供同步调用<code>call</code> 和 流式调用 <code>stream</code> 两种方式；</p>","copyright":{},"autoDesc":true}');export{e as data};
