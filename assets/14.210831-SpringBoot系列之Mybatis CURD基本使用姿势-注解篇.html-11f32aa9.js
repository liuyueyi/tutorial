import{_ as e,V as p,W as o,X as c,Y as n,Z as s,$ as t,a1 as i,F as l}from"./framework-094145d2.js";const u={},r=n("p",null,"上面一篇博文介绍了mybatis + xml配置文件的使用方式，在上文中介绍到，xml文件是可以省略掉的，直接使用java注解来实现CURD，接下来我们看一下，如何使用注解来实现等同的效果",-1),d=i(`<h2 id="i-mybatis注解开发" tabindex="-1"><a class="header-anchor" href="#i-mybatis注解开发" aria-hidden="true">#</a> I. Mybatis注解开发</h2><p>关于项目环境的搭建与前文一致，如有疑问，查看博文： <a href=""></a></p><h3 id="_1-基础配置" tabindex="-1"><a class="header-anchor" href="#_1-基础配置" aria-hidden="true">#</a> 1. 基础配置</h3><p>用于测试的数据库</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>money<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;用户名&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>money<span class="token punctuation">\`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;钱&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>is_deleted<span class="token punctuation">\`</span></span> <span class="token keyword">tinyint</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;0&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>create_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;创建时间&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>update_at<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">551</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的数据库实体类 MoneyPO</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@NoArgsConstructor</span>
<span class="token annotation punctuation">@AllArgsConstructor</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MoneyPo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> id<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Long</span> money<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Integer</span> isDeleted<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Timestamp</span> createAt<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">Timestamp</span> updateAt<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mapper接口类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Mapper</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MoneyMapper</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意与前文的区别，这里我们没有xml文件</p><h3 id="_2-数据插入" tabindex="-1"><a class="header-anchor" href="#_2-数据插入" aria-hidden="true">#</a> 2. 数据插入</h3><p>新增数据，使用注解 <code>@Insert</code>，直接放在接口中定义的方法上即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 保存数据，并保存主键id
 *
 * <span class="token keyword">@param</span> <span class="token parameter">po</span>
 * <span class="token keyword">@return</span> int
 */</span>
<span class="token annotation punctuation">@Options</span><span class="token punctuation">(</span>useGeneratedKeys <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> keyProperty <span class="token operator">=</span> <span class="token string">&quot;po.id&quot;</span><span class="token punctuation">,</span> keyColumn <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Insert</span><span class="token punctuation">(</span><span class="token string">&quot;insert into money (name, money, is_deleted) values (#{po.name}, #{po.money}, #{po.isDeleted})&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">int</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;po&quot;</span><span class="token punctuation">)</span> <span class="token class-name">MoneyPo</span> po<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>@Insert</code>注解中的内容与前面xml中标签内容一致，没有什么区别，重点关注一下 <code>@Options</code>注解，用来指定一些配置信息，比如上面的case，就用来配置将插入的id，保存到参数MoneyPo的id字段上</p><h3 id="_3-查询数据" tabindex="-1"><a class="header-anchor" href="#_3-查询数据" aria-hidden="true">#</a> 3. 查询数据</h3><p>查询则使用<code>@Select</code>注解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
    <span class="token doc-comment comment">/**
     * 主键查询
     *
     * <span class="token keyword">@param</span> <span class="token parameter">id</span> id
     * <span class="token keyword">@return</span> <span class="token punctuation">{</span><span class="token keyword">@link</span> <span class="token reference"><span class="token class-name">MoneyPo</span></span><span class="token punctuation">}</span>
     */</span>
    <span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select * from money where id = #{id}&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Results</span><span class="token punctuation">(</span>id <span class="token operator">=</span> <span class="token string">&quot;moneyResultMap&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> id <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> jdbcType <span class="token operator">=</span> <span class="token class-name">JdbcType</span><span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> jdbcType <span class="token operator">=</span> <span class="token class-name">JdbcType</span><span class="token punctuation">.</span><span class="token constant">VARCHAR</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;money&quot;</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">&quot;money&quot;</span><span class="token punctuation">,</span> jdbcType <span class="token operator">=</span> <span class="token class-name">JdbcType</span><span class="token punctuation">.</span><span class="token constant">INTEGER</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;isDeleted&quot;</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">&quot;is_deleted&quot;</span><span class="token punctuation">,</span> jdbcType <span class="token operator">=</span> <span class="token class-name">JdbcType</span><span class="token punctuation">.</span><span class="token constant">TINYINT</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;createAt&quot;</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">&quot;create_at&quot;</span><span class="token punctuation">,</span> jdbcType <span class="token operator">=</span> <span class="token class-name">JdbcType</span><span class="token punctuation">.</span><span class="token constant">TIMESTAMP</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Result</span><span class="token punctuation">(</span>property <span class="token operator">=</span> <span class="token string">&quot;updateAt&quot;</span><span class="token punctuation">,</span> column <span class="token operator">=</span> <span class="token string">&quot;update_at&quot;</span><span class="token punctuation">,</span> jdbcType <span class="token operator">=</span> <span class="token class-name">JdbcType</span><span class="token punctuation">.</span><span class="token constant">TIMESTAMP</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token class-name">MoneyPo</span> <span class="token function">getById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>select注解没有什么特别的，重点关注一下<code>@Results</code>注解</p><p>这个注解的作用，与xml中的<code>&lt;resultMap&gt;</code>标签功能一直，通过内部的<code>@Result</code>来指定数据库表结构与java实体类的映射关系，最外层的id主要用于复用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;select * from money where \`name\` = #{name}&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@ResultMap</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;moneyResultMap&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">MoneyPo</span> <span class="token function">getByName</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-数据更新" tabindex="-1"><a class="header-anchor" href="#_4-数据更新" aria-hidden="true">#</a> 4. 数据更新</h3><p>直接给出对应的case</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>
<span class="token doc-comment comment">/**
 * 更新
 *
 * <span class="token keyword">@param</span> <span class="token parameter">id</span>    id
 * <span class="token keyword">@param</span> <span class="token parameter">money</span> 钱
 * <span class="token keyword">@return</span> int
 */</span>
<span class="token annotation punctuation">@Update</span><span class="token punctuation">(</span><span class="token string">&quot;update money set \`money\`=#{money} where id = #{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">int</span> <span class="token function">addMoney</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;money&quot;</span><span class="token punctuation">)</span> <span class="token keyword">long</span> money<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-数据删除" tabindex="-1"><a class="header-anchor" href="#_5-数据删除" aria-hidden="true">#</a> 5. 数据删除</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 删除数据
 *
 * <span class="token keyword">@param</span> <span class="token parameter">id</span> id
 * <span class="token keyword">@return</span> int
 */</span>
<span class="token annotation punctuation">@Delete</span><span class="token punctuation">(</span><span class="token string">&quot;delete from money where id = #{id}&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">int</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-小结" tabindex="-1"><a class="header-anchor" href="#_6-小结" aria-hidden="true">#</a> 6. 小结</h3><p>从注解的使用来看，与xml文件的方式基本上没有什么区别，当然从上面的示例来说，貌似使用注解的方式更加简洁，毕竟sql语句直接放在方法上，不需要像之前那样，两个文件来回切换</p><p>但是，请注意，注解的使用姿势并没有特别广泛使用也是有原因的，上面只是一些简单接触的case，当sql语句比较复杂的时，注解的方式写起来就没有那么爽快了</p><p>如in查询</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * foreach 查询
 *
 * <span class="token keyword">@param</span> <span class="token parameter">ids</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@Select</span><span class="token punctuation">(</span><span class="token string">&quot;&lt;script&gt; select * from money where id in  &quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;foreach collection=&#39;ids&#39; index=&#39;index&#39; item=&#39;id&#39; open=&#39;(&#39; separator=&#39;,&#39; close=&#39;)&#39;&gt;&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;#{id}&quot;</span> <span class="token operator">+</span>
        <span class="token string">&quot;&lt;/foreach&gt;&lt;/script&gt;&quot;</span><span class="token punctuation">)</span>
<span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">MoneyPo</span><span class="token punctuation">&gt;</span></span> <span class="token function">getByIds</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;ids&quot;</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> ids<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注解上的内容太多，特别是上面的字符串拼接方式，会极大的影响阅读体验；当然在jdk14的新特性中，提供了文本块的支持，类似pyton中使用三个双引号来标注一个大的文本块，然而现实的是，实际上又有多少项目升级到了jdk14呢?</p><h2 id="iii-不能错过的源码和相关知识点" tabindex="-1"><a class="header-anchor" href="#iii-不能错过的源码和相关知识点" aria-hidden="true">#</a> III. 不能错过的源码和相关知识点</h2><h3 id="_0-项目" tabindex="-1"><a class="header-anchor" href="#_0-项目" aria-hidden="true">#</a> 0. 项目</h3>`,33),k={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/103-mybatis-xml",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,[n("strong",null,"系列博文")],-1),b={href:"https://spring.hhui.top/spring-blog/2021/08/15/210815-Mybatis%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B%E4%B9%8BCURD%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"_1-微信公众号-一灰灰blog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-微信公众号-一灰灰blog","aria-hidden":"true"},"#"),s(" 1. 微信公众号: 一灰灰Blog")],-1),y=n("p",null,"尽信书则不如，以上内容，纯属一家之言，因个人能力有限，难免有疏漏和错误之处，如发现bug或者有更好的建议，欢迎批评指正，不吝感激",-1),h=n("p",null,"下面一灰灰的个人博客，记录所有学习和工作中的博文，欢迎大家前去逛逛",-1),_={href:"https://blog.hhui.top",target:"_blank",rel:"noopener noreferrer"},q={href:"http://spring.hhui.top",target:"_blank",rel:"noopener noreferrer"},w=n("figure",null,[n("img",{src:"https://spring.hhui.top/spring-blog/imgs/info/info.png",alt:"一灰灰blog",tabindex:"0",loading:"lazy"}),n("figcaption",null,"一灰灰blog")],-1);function f(T,E){const a=l("ExternalLinkIcon");return p(),o("div",null,[r,c(" more "),d,n("ul",null,[n("li",null,[s("工程："),n("a",k,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("源码："),n("a",m,[s("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/103-mybatis-xml"),t(a)])])]),v,n("ul",null,[n("li",null,[n("a",b,[s("【DB系列】Mybatis系列教程之CURD基本使用姿势"),t(a)])])]),g,y,h,n("ul",null,[n("li",null,[s("一灰灰Blog个人博客 "),n("a",_,[s("https://blog.hhui.top"),t(a)])]),n("li",null,[s("一灰灰Blog-Spring专题博客 "),n("a",q,[s("http://spring.hhui.top"),t(a)])])]),w])}const N=e(u,[["render",f],["__file","14.210831-SpringBoot系列之Mybatis CURD基本使用姿势-注解篇.html.vue"]]);export{N as default};
