import{_ as n,V as a,W as e,X as t,Y as s,a1 as p}from"./framework-094145d2.js";const o={},l=s("p",null,"在db中存储json格式的数据，相信大家都或多或少的使用过，那么在查询这个json结构中的数据时，有什么好的方法么？取出String之后再代码中进行解析？",-1),c=s("p",null,"接下来本文将介绍一下Mysql5.7+之后提供的json_extract函数，可以通过key查询value值",-1),i=p('<h3 id="_1-使用方式" tabindex="-1"><a class="header-anchor" href="#_1-使用方式" aria-hidden="true">#</a> 1. 使用方式</h3><p>数据存储的数据是json字符串，类型为我们常用的varchar即可</p><p>语法:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>JSON_EXTRACT(json_doc, path[, path] …)\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>若json字符串非数组时，可以通过<code>$.字段名</code>来表示查询对应的value</p><h3 id="_2-使用演示" tabindex="-1"><a class="header-anchor" href="#_2-使用演示" aria-hidden="true">#</a> 2.使用演示</h3><p>创建一个测试的表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>json_table<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主键id&#39;</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>val<span class="token punctuation">`</span></span> json <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;json字符串&#39;</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插入几条数据</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>json_table<span class="token punctuation">`</span></span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;{&quot;name&quot;: &quot;一灰灰blog&quot;, &quot;age&quot;: 18}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>json_table<span class="token punctuation">`</span></span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;{&quot;name&quot;: &quot;一灰灰blog&quot;, &quot;site&quot;: &quot;https://blog.hhui.top&quot;}&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查询json串中的<code>name</code>，如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> json_extract<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>val<span class="token variable">`</span></span>, <span class="token string">&#39;$.name&#39;</span><span class="token punctuation">)</span> from <span class="token variable"><span class="token variable">`</span>json_table<span class="token variable">`</span></span><span class="token punctuation">;</span>\n+-------------------------------+\n<span class="token operator">|</span> json_extract<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>val<span class="token variable">`</span></span>, <span class="token string">&#39;$.name&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n+-------------------------------+\n<span class="token operator">|</span> <span class="token string">&quot;一灰灰blog&quot;</span>                  <span class="token operator">|</span>\n<span class="token operator">|</span> <span class="token string">&quot;一灰灰blog&quot;</span>                  <span class="token operator">|</span>\n+-------------------------------+\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果查询的key不在json串中，返回的是null，而不是抛异常</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> json_extract<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>val<span class="token variable">`</span></span>, <span class="token string">&#39;$.name&#39;</span><span class="token punctuation">)</span> as <span class="token variable"><span class="token variable">`</span>name<span class="token variable">`</span></span>, json_extract<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>val<span class="token variable">`</span></span>, <span class="token string">&#39;$.site&#39;</span><span class="token punctuation">)</span> as <span class="token variable"><span class="token variable">`</span>site<span class="token variable">`</span></span> from <span class="token variable"><span class="token variable">`</span>json_table<span class="token variable">`</span></span><span class="token punctuation">;</span>\n+-----------------+-------------------------+\n<span class="token operator">|</span> name            <span class="token operator">|</span> site                    <span class="token operator">|</span>\n+-----------------+-------------------------+\n<span class="token operator">|</span> <span class="token string">&quot;一灰灰blog&quot;</span>    <span class="token operator">|</span> NULL                    <span class="token operator">|</span>\n<span class="token operator">|</span> <span class="token string">&quot;一灰灰blog&quot;</span>    <span class="token operator">|</span> <span class="token string">&quot;https://blog.hhui.top&quot;</span> <span class="token operator">|</span>\n+-----------------+-------------------------+\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来再看一下如果为json数组，怎么整</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">insert</span> <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>json_table<span class="token punctuation">`</span></span> <span class="token keyword">values</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;[{&quot;name&quot;: &quot;一灰灰&quot;, &quot;site&quot;: &quot;https://spring.hhui.top&quot;}]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n\nmysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> json_extract<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>val<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$[0].name&#39;</span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token identifier"><span class="token punctuation">`</span>json_table<span class="token punctuation">`</span></span> <span class="token keyword">where</span> id <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>\n<span class="token operator">+</span><span class="token comment">----------------------------------+</span>\n<span class="token operator">|</span> json_extract<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>val<span class="token punctuation">`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$[0].name&#39;</span><span class="token punctuation">)</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------------------------------+</span>\n<span class="token operator">|</span> <span class="token string">&quot;一灰灰&quot;</span>                         <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----------------------------------+</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了在查询结果中使用json_extract之外，也可以在查询条件中使用它</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mysql<span class="token operator">&gt;</span> <span class="token keyword">select</span> * from <span class="token variable"><span class="token variable">`</span>json_table<span class="token variable">`</span></span> where json_extract<span class="token punctuation">(</span><span class="token variable"><span class="token variable">`</span>val<span class="token variable">`</span></span>, <span class="token string">&#39;$.name&#39;</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;一灰灰blog&#39;</span><span class="token punctuation">;</span>\n+----+------------------------------------------------------------+\n<span class="token operator">|</span> <span class="token function">id</span> <span class="token operator">|</span> val                                                        <span class="token operator">|</span>\n+----+------------------------------------------------------------+\n<span class="token operator">|</span>  <span class="token number">1</span> <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">18</span>, <span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;一灰灰blog&quot;</span><span class="token punctuation">}</span>                          <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">2</span> <span class="token operator">|</span> <span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;一灰灰blog&quot;</span>, <span class="token string">&quot;site&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;https://blog.hhui.top&quot;</span><span class="token punctuation">}</span>    <span class="token operator">|</span>\n+----+------------------------------------------------------------+\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-小结" tabindex="-1"><a class="header-anchor" href="#_3-小结" aria-hidden="true">#</a> 3. 小结</h3><p>本文主要介绍json_extract函数的使用姿势，用于解析字段内value为json串的场景</p><p>基本使用姿势</p><ul><li>json对象：json_extract(&#39;db字段&#39;, &#39;$.json串key&#39;)</li><li>json数组：json_extract(&#39;db字段&#39;, &#39;$[数组下标].json串key&#39;)</li></ul>',22);function r(u,k){return a(),e("div",null,[l,c,t(" more "),i])}const v=n(o,[["render",r],["__file","18.220425-MySql之json-extract函数处理json字段.html.vue"]]);export{v as default};
