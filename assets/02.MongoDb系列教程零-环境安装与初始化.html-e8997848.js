import{_ as o,V as t,W as i,X as l,Y as n,Z as a,$ as e,a1 as r,F as c}from"./framework-094145d2.js";const d="/tutorial/imgs/200319/00.jpg",p="/tutorial/imgs/200319/01.jpg",u="/tutorial/imgs/200319/02.jpg",m="/tutorial/imgs/200319/03.jpg",g={},b=n("blockquote",null,[n("p",null,"MongoDB 是一个基于分布式文件存储的数据库。由 C++ 语言编写。旨在为 WEB 应用提供可扩展的高性能数据存储解决方案。")],-1),v=n("p",null,"MongoDB 是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。",-1),h=n("p",null,"本篇为mongodb系列教程第一篇，环境安装与连接设置",-1),_=n("h3",{id:"_1-docker安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-docker安装","aria-hidden":"true"},"#"),a(" 1. docker安装")],-1),k={href:"https://blog.hhui.top/2019/12/06/191206-Centos%E5%AE%89%E8%A3%85docker%E4%B8%8E%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/",target:"_blank",rel:"noopener noreferrer"},f=r(`<p>安装命令如下:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 下载镜像</span>
<span class="token function">docker</span> pull mongo

<span class="token comment"># 加载并运行镜像</span>
<span class="token function">docker</span> run <span class="token parameter variable">--name</span> mongo <span class="token parameter variable">-p</span> <span class="token number">27017</span>:27017 <span class="token parameter variable">-d</span> mongo <span class="token parameter variable">--auth</span>
<span class="token comment"># 进入容器</span>
<span class="token function">docker</span> <span class="token builtin class-name">exec</span> <span class="token parameter variable">-it</span> mongo /bin/bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-centos安装" tabindex="-1"><a class="header-anchor" href="#_2-centos安装" aria-hidden="true">#</a> 2. centos安装</h3><p>直接借助yum进行安装，命令如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 查看支持的mongo库</span>
yum list <span class="token operator">|</span> <span class="token function">grep</span> mongo

yum <span class="token function">install</span> <span class="token parameter variable">-y</span> mongodb.x86_64 mongodb-server.x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-用户配置" tabindex="-1"><a class="header-anchor" href="#_3-用户配置" aria-hidden="true">#</a> 3. 用户配置</h3><p>直接通过mongodb提供的终端命令进行设置，</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 为mongo创建登录用户和密码</span>
mongo

use admin
db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;root&quot;</span>,pwd:<span class="token string">&quot;root&quot;</span>,roles:<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&#39;root&#39;</span>,db:<span class="token string">&#39;admin&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-终端控制台" tabindex="-1"><a class="header-anchor" href="#_4-终端控制台" aria-hidden="true">#</a> 4. 终端控制台</h3><p>mongodb集成了终端控制台，通过<code>mongo</code>进入；</p><p>但是当我们设置了登录认证时，有下面两种使用姿势</p><p><strong>case1</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 直接指定用户名密码，注意--authenticationDatabase admin 必须得有</span>
mongo <span class="token parameter variable">-u</span> root <span class="token parameter variable">-p</span> root <span class="token parameter variable">--authenticationDatabase</span> admin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>case2</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo

<span class="token comment"># 下一行不可少</span>
use admin
db.auth<span class="token punctuation">(</span><span class="token string">&#39;root&#39;</span>, <span class="token string">&#39;root&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-可视化操作工具" tabindex="-1"><a class="header-anchor" href="#_5-可视化操作工具" aria-hidden="true">#</a> 5. 可视化操作工具</h3>',18),x=n("code",null,"ROBO 3T",-1),E={href:"https://robomongo.org/",target:"_blank",rel:"noopener noreferrer"},B=n("p",null,"然后配置mongodb连接信息（支持ssh验证方式哦），下面是一个简单的配置",-1),y=n("figure",null,[n("img",{src:u,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),D=n("p",null,"然后就可以通过它来操作mongodb了",-1),V=n("figure",null,[n("img",{src:m,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1);function q(C,N){const s=c("ExternalLinkIcon");return t(),i("div",null,[b,v,h,l(" more "),_,n("p",null,[a("首先介绍最简单的安装方式，docker安装，请先保证docker环境存在（没有安装的推荐查看: "),n("a",k,[a("Centos安装docker与使用说明"),e(s)]),a("）")]),f,n("p",null,[a("终端虽好，使用起来终究不太顺手，可视化工具推荐使用"),x,a("操作mongodb，官网下载地址: "),n("a",E,[a("https://robomongo.org/"),e(s)])]),B,y,D,V])}const z=o(g,[["render",q],["__file","02.MongoDb系列教程零-环境安装与初始化.html.vue"]]);export{z as default};
