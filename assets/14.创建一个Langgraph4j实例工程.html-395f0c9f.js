import{_ as o,V as c,W as l,Y as n,Z as s,$ as a,a0 as i,a1 as u,F as p}from"./framework-094145d2.js";const r="/tutorial/imgs/column/springai/14-1.webp",k="/tutorial/imgs/column/springai/14-2.webp",d={},m=n("h1",{id:"_14-创建一个langgraph4j实例工程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_14-创建一个langgraph4j实例工程","aria-hidden":"true"},"#"),s(" 14.创建一个Langgraph4j实例工程")],-1),g=n("p",null,[s("沿用阿里的智能体定义，我们将基于"),n("code",null,"SpringAI ChatClient"),s("开发的AI应用叫做单智能体应用；对于更复杂的应用场景，比如需要多个工具辅助工作，存在工作流切换的场景（举一个例子：输入一段评价，判断是好评还是差评，如果是好评，则自动回复多谢好评；如果是差评，则提取关键信息，将评价信息转发给人工客服，进行后续的售后维护等）称为多智能体应用")],-1),v=n("p",null,[s("对于多智能体应用，使用python开发的小伙伴，更常接触的是"),n("code",null,"LangGraph"),s("；对于java的生态下，目前也有两个替代的选择项")],-1),b={href:"https://github.com/langgraph4j/langgraph4j",target:"_blank",rel:"noopener noreferrer"},h={href:"https://java2ai.com/docs/1.0.0.2/get-started/agent/",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,[s("接下来我们来体验一下如何使用"),n("code",null,"LangGraph4J"),s("来进行多智能体的开发")],-1),y=n("h2",{id:"一、项目创建",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、项目创建","aria-hidden":"true"},"#"),s(" 一、项目创建")],-1),_=n("h3",{id:"_1-创建一个springai项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-创建一个springai项目","aria-hidden":"true"},"#"),s(" 1. 创建一个SpringAI项目")],-1),w=u(`<h3 id="_2-添加langgraph4j依赖" tabindex="-1"><a class="header-anchor" href="#_2-添加langgraph4j依赖" aria-hidden="true">#</a> 2. 添加Langgraph4j依赖</h3><p>我们这里以智普大模型作为底层的LLM，因此对应的依赖除了langgraph4j之外就是智普的starter</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>langgraph4j.version</span><span class="token punctuation">&gt;</span></span>1.6.0-rc4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>langgraph4j.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.bsc.langgraph4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>langgraph4j-springai-agentexecutor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${langgraph4j.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-starter-model-zhipuai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-参数配置" tabindex="-1"><a class="header-anchor" href="#_3-参数配置" aria-hidden="true">#</a> 3. 参数配置</h3><p>在配置文件中 <code>application.yml</code>，设置大模型的访问密钥</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">ai</span><span class="token punctuation">:</span>
    <span class="token key atrule">zhipuai</span><span class="token punctuation">:</span>
      <span class="token comment"># api-key 使用你自己申请的进行替换；如果为了安全考虑，可以通过启动参数进行设置</span>
      <span class="token key atrule">api-key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>zhipuai<span class="token punctuation">-</span>api<span class="token punctuation">-</span>key<span class="token punctuation">}</span>
      <span class="token key atrule">chat</span><span class="token punctuation">:</span> <span class="token comment"># 聊天模型</span>
        <span class="token key atrule">options</span><span class="token punctuation">:</span>
          <span class="token key atrule">model</span><span class="token punctuation">:</span> GLM<span class="token punctuation">-</span>4<span class="token punctuation">-</span>Flash

<span class="token comment"># 修改日志级别</span>
<span class="token key atrule">logging</span><span class="token punctuation">:</span>
  <span class="token key atrule">level</span><span class="token punctuation">:</span>
    <span class="token key atrule">org.springframework.ai.chat.client.advisor.SimpleLoggerAdvisor</span><span class="token punctuation">:</span> debug
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-创建工具" tabindex="-1"><a class="header-anchor" href="#_4-创建工具" aria-hidden="true">#</a> 4. 创建工具</h3><p>我们这里创建一个工具类，内部提供两个工具，分别获取当前的时间和天气</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 根据时区，返回时间的工具
 *
 * <span class="token keyword">@author</span> YiHui
 * <span class="token keyword">@date</span> 2025/8/8
 */</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TimeWeatherTools</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Tool</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;传入时区，返回对应时区的当前时间给用户&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTimeByZoneId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ToolParam</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;需要查询时间的时区，如Asia/Shanghai, Europe/Paris&quot;</span><span class="token punctuation">)</span> <span class="token class-name">ZoneId</span> area<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 根据系统当前时间，获取指定时区的时间</span>
        <span class="token class-name">ZonedDateTime</span> time <span class="token operator">=</span> <span class="token class-name">ZonedDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 格式化时间</span>
        <span class="token class-name">DateTimeFormatter</span> formatter <span class="token operator">=</span> <span class="token class-name">DateTimeFormatter</span><span class="token punctuation">.</span><span class="token function">ofPattern</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> ans <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>formatter<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;传入的时区是：&quot;</span> <span class="token operator">+</span> area <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Tool</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;传入地点，返回对应地点的当前天气给用户&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWeatherByZoneId</span><span class="token punctuation">(</span><span class="token annotation punctuation">@ToolParam</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;需要查询天气的地区，如北京、上海&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> area<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> weathers <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;晴&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;阴&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;雨&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;雪&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;雷&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;雾&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> ans <span class="token operator">=</span> weathers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> weathers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;传入的地点是：&quot;</span> <span class="token operator">+</span> area <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-创建智能体" tabindex="-1"><a class="header-anchor" href="#_5-创建智能体" aria-hidden="true">#</a> 5. 创建智能体</h3><p>我们直接沿用官方的demo示例，来创建一个采用<code>langGraph4j</code>实现的基于智普大模型的智能体</p><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChatController</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">CompiledGraph</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AgentExecutor<span class="token punctuation">.</span>State</span><span class="token punctuation">&gt;</span></span> workflow<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ChatController</span><span class="token punctuation">(</span><span class="token class-name">ChatModel</span> chatModel<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">GraphStateException</span> <span class="token punctuation">{</span>
        workflow <span class="token operator">=</span> <span class="token class-name">AgentExecutor</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">chatModel</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">toolsFromObject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TimeWeatherTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-测试验证" tabindex="-1"><a class="header-anchor" href="#_6-测试验证" aria-hidden="true">#</a> 6. 测试验证</h3><p>在上面的Controller中，定义一个访问端点，实现智能体的访问</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChatController</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 通过agent方式访问大模型
     *
     * <span class="token keyword">@param</span> <span class="token parameter">msg</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/chat&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">chat</span><span class="token punctuation">(</span><span class="token class-name">String</span> msg<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">AgentExecutor<span class="token punctuation">.</span>State</span> last <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">NodeOutput</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AgentExecutor<span class="token punctuation">.</span>State</span><span class="token punctuation">&gt;</span></span> item <span class="token operator">:</span> workflow<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;messages&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">UserMessage</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">;</span>
            last <span class="token operator">=</span> item<span class="token punctuation">.</span><span class="token function">state</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;%02d : %s%n&quot;</span><span class="token punctuation">,</span> i<span class="token operator">++</span><span class="token punctuation">,</span> <span class="token function">toStr</span><span class="token punctuation">(</span>last<span class="token punctuation">.</span><span class="token function">messages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// 返回最后一条消息</span>
        <span class="token keyword">return</span> last<span class="token punctuation">.</span><span class="token function">lastMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">Content</span><span class="token operator">::</span><span class="token function">getText</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;NoData&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toStr</span><span class="token punctuation">(</span><span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ObjectMapper</span> objectMapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JsonProcessingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从上面的输出也可以看出，大模型有四次的工具调用，一次是获取北京当前时间，一次是获取北京当前天气，一次是获取伦敦当前时间，一次是获取伦敦当前天气</p><p>直接使用<code>langGraph4j</code>实现多轮对话，虽然效果是实现了，从直观感觉上和SpringAI的ChatClient好像没有太大的差别</p><p>对<code>langGraph4j</code>不太了解的小伙伴，可能会有很多疑问，工作流体现在什么地方呢，条件决策又该如何使用呢？这个框架是怎么工作的呢？又该如何使用它来开发Agent呢？</p><h2 id="二、总结" tabindex="-1"><a class="header-anchor" href="#二、总结" aria-hidden="true">#</a> 二、总结</h2><p><code>LangGraph4j</code> 是一个 Java 库，用于构建基于大型语言模型 (LLM) 的有状态多代理应用程序。它受 <code>Python</code> 库 <code>LangGraph</code> 的启发，旨在与 <code>Langchain4j</code> 和 <code>Spring AI</code> 等流行的 <code>Java LLM</code> 框架无缝协作。</p><p>LangGraph4j 的核心功能是定义循环图，使不同的组件（代理、工具或自定义逻辑）能够以有状态的方式进行交互</p><p>本文只能算是初步看了一眼<code>LangGraph4j</code>，演示了如何创建一个智能体开发的项目，接下来我们将逐渐深入探究一下这个框架的使用理念</p>',24),j={href:"https://github.com/liuyueyi/spring-ai-demo/tree/master/advance-projects/A05-agent-langgraph-simple",target:"_blank",rel:"noopener noreferrer"};function q(x,S){const t=p("ExternalLinkIcon"),e=p("RouterLink");return c(),l("div",null,[m,g,v,n("ul",null,[n("li",null,[n("a",b,[s("LangGraphJ"),a(t)])]),n("li",null,[n("a",h,[s("阿里智能体"),a(t)])])]),f,y,_,n("p",null,[s("创建一个SpringAI项目，基本流程同 "),a(e,{to:"/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/01.%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AASpringAI-Demo%E5%B7%A5%E7%A8%8B.html"},{default:i(()=>[s("创建一个SpringAI-Demo工程")]),_:1})]),w,n("p",null,[s("文中所有涉及到的代码，可以到项目中获取 "),n("a",j,[s("https://github.com/liuyueyi/spring-ai-demo"),a(t)])])])}const A=o(d,[["render",q],["__file","14.创建一个Langgraph4j实例工程.html.vue"]]);export{A as default};
