import{_ as p,V as o,W as e,X as c,Y as n,Z as s,$ as t,a1 as l,F as i}from"./framework-094145d2.js";const u="/tutorial/imgs/201211/00.jpg",r={},k=n("p",null,"一般互联网应用，我们不太建议在业务中使用多表联合查询，当然在业务体量比较小的情况下，多表联合查询有时候可以有效减少业务逻辑代码，所以用不用且不说，我们还是有必要了解一下多表的联合查询使用姿势",-1),d=l(`<h2 id="i-项目搭建" tabindex="-1"><a class="header-anchor" href="#i-项目搭建" aria-hidden="true">#</a> I. 项目搭建</h2><p>本项目借助<code>SpringBoot 2.2.1.RELEASE</code> + <code>maven 3.5.3</code> + <code>IDEA</code>进行开发</p><h3 id="_1-项目依赖" tabindex="-1"><a class="header-anchor" href="#_1-项目依赖" aria-hidden="true">#</a> 1. 项目依赖</h3><p>关于如何创建一个SpringBoot的项目工程，不再本文的描述范围内，如有兴趣可以到文末的个人站点获取</p><p>在这个示例工程中，我们的选用h2dabase作为数据库（方便有兴趣的小伙伴直接获取工程源码之后，直接测试体验），因此对应的pom核心依赖如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-jooq<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.h2database<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>h2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-数据准备" tabindex="-1"><a class="header-anchor" href="#_2-数据准备" aria-hidden="true">#</a> 2. 数据准备</h3><p>本文对应的项目工程，和前面介绍增加删除的一致，所以这里直接使用之前新增的数据</p><figure><img src="`+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="ii-使用姿势" tabindex="-1"><a class="header-anchor" href="#ii-使用姿势" aria-hidden="true">#</a> II. 使用姿势</h2><h3 id="_0-前期准备" tabindex="-1"><a class="header-anchor" href="#_0-前期准备" aria-hidden="true">#</a> 0. 前期准备</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Repository</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PoetryJoinerRepository</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">PoetTB</span> poetTable <span class="token operator">=</span> <span class="token class-name">PoetTB</span><span class="token punctuation">.</span><span class="token constant">POET</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">PoetryTB</span> poetryTable <span class="token operator">=</span> <span class="token class-name">PoetryTB</span><span class="token punctuation">.</span><span class="token constant">POETRY</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">DSLContext</span> dsl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-inner-join" tabindex="-1"><a class="header-anchor" href="#_1-inner-join" aria-hidden="true">#</a> 1. inner join</h3><p>内连接，两种常见的写法</p><ul><li><code>select 字段 from 表1 inner join 表2 on 连接条件;</code></li><li><code>select 字段 from 表1, 表2 [where 关联条件];</code></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">innerJoin</span><span class="token punctuation">(</span><span class="token keyword">int</span> poetId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// inner join 内连接: select * from poet inner join poetry on poet.id=poetry.poet_id where poet.id=xxx</span>
    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Record</span><span class="token punctuation">&gt;</span></span> record <span class="token operator">=</span> dsl<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token function">innerJoin</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">.</span><span class="token constant">POET_ID</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; inner join &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// inner join 比较常用的写法 select \`name\`, \`title\`, \`content\` from poet, poetry where poet.id=poetry.poet_id and poet.id = xxx</span>
    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Record3</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> dsl<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> poetryTable<span class="token punctuation">.</span><span class="token constant">TITLE</span><span class="token punctuation">,</span> poetryTable<span class="token punctuation">.</span><span class="token constant">CONTENT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">,</span> poetryTable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">.</span><span class="token constant">POET_ID</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-left-join" tabindex="-1"><a class="header-anchor" href="#_2-left-join" aria-hidden="true">#</a> 2. left join</h3><p>左连接，以左表为主，右表显示与左表有交集的数据，若不存在，使用null填充（若左表不存在，右表有数据，则不展示）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token keyword">int</span> poetId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// left join, 以左表为主，右表显示与左表有交集的数据，若不存在，使用null填充（若左表不存在，右表有数据，则不展示）</span>
    <span class="token comment">// select * from poet left join poetry on poet.id=poetry.poet_id where poet.id=xxx</span>
    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Record</span><span class="token punctuation">&gt;</span></span> record <span class="token operator">=</span> dsl<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token function">leftJoin</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">.</span><span class="token constant">POET_ID</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; left join &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-right-join" tabindex="-1"><a class="header-anchor" href="#_3-right-join" aria-hidden="true">#</a> 3. right join</h3><p>右连接，以右表为主，左表显示与右表有交集的数据，若不存在，使用null填充（若右表不存在数据，左表有数据，则不展示）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">rightJoin</span><span class="token punctuation">(</span><span class="token keyword">int</span> poetId<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// right join, 以右表为主，左表显示与右表有交集的数据，若不存在，使用null填充（若右表不存在数据，左表有数据，则不展示）</span>
    <span class="token comment">// select * from poet right join poetry on poet.id=poetry.poet_id where poetry.poet_id=xxx</span>
    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Record</span><span class="token punctuation">&gt;</span></span> record <span class="token operator">=</span> dsl<span class="token punctuation">.</span><span class="token function">selectFrom</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token function">rightJoin</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">.</span><span class="token constant">POET_ID</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">.</span><span class="token constant">POET_ID</span><span class="token punctuation">.</span><span class="token function">eq</span><span class="token punctuation">(</span>poetId<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; right join &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>record<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-union-union-all" tabindex="-1"><a class="header-anchor" href="#_4-union-union-all" aria-hidden="true">#</a> 4. union &amp; union all</h3><p>UNION 操作符用于合并两个或多个 SELECT 语句的结果集，请注意union会对结果进行去重，而union all会显示所有的结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">union</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// union 联合，特点是会去重重复的数据</span>
    <span class="token comment">// select id from poet union select poet_id from poetry</span>
    <span class="token class-name">Result</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Record1</span><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> res <span class="token operator">=</span> dsl<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">union</span><span class="token punctuation">(</span>dsl<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">.</span><span class="token constant">POET_ID</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; union &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; union all &lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res <span class="token operator">=</span> dsl<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>poetTable<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unionAll</span><span class="token punctuation">(</span>dsl<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">.</span><span class="token constant">POET_ID</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>poetryTable<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-测试" tabindex="-1"><a class="header-anchor" href="#_5-测试" aria-hidden="true">#</a> 5. 测试</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token function">innerJoin</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">leftJoin</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">rightJoin</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">rightJoin</span><span class="token punctuation">(</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">union</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>                                      
<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> inner <span class="token function">join</span> <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>
+----+----+----+-------+-----+--------------------------------------------------+-----------------------+
<span class="token operator">|</span>  ID<span class="token operator">|</span>NAME<span class="token operator">|</span>  ID<span class="token operator">|</span>POET_ID<span class="token operator">|</span>TITLE<span class="token operator">|</span>CONTENT                                           <span class="token operator">|</span>CREATE_AT              <span class="token operator">|</span>
+----+----+----+-------+-----+--------------------------------------------------+-----------------------+
<span class="token operator">|</span>   <span class="token number">1</span><span class="token operator">|</span>李白  <span class="token operator">|</span>   <span class="token number">1</span><span class="token operator">|</span>      <span class="token number">1</span><span class="token operator">|</span>咏桂   <span class="token operator">|</span>世人种桃李，皆在金张门。<span class="token punctuation">\\</span>n攀折争捷径，及此春风暄。<span class="token punctuation">\\</span>n一朝天霜下，荣耀难久存。<span class="token punctuation">\\</span>n安知南山桂<span class="token punctuation">..</span>.<span class="token operator">|</span><span class="token number">2020</span>-12-01 <span class="token number">18</span>:11:50.744<span class="token operator">|</span>
<span class="token operator">|</span>   <span class="token number">1</span><span class="token operator">|</span>李白  <span class="token operator">|</span>   <span class="token number">2</span><span class="token operator">|</span>      <span class="token number">1</span><span class="token operator">|</span>落日忆山中<span class="token operator">|</span>雨后烟景绿，晴天散馀霞。<span class="token punctuation">\\</span>n东风随春归，发我枝上花。<span class="token punctuation">\\</span>n花落时欲暮，见此令人嗟。<span class="token punctuation">\\</span>n愿游名山去<span class="token punctuation">..</span>.<span class="token operator">|</span><span class="token number">2020</span>-12-01 <span class="token number">18</span>:11:50.744<span class="token operator">|</span>
+----+----+----+-------+-----+--------------------------------------------------+-----------------------+

+----+-----+--------------------------------------------------+
<span class="token operator">|</span>NAME<span class="token operator">|</span>TITLE<span class="token operator">|</span>CONTENT                                           <span class="token operator">|</span>
+----+-----+--------------------------------------------------+
<span class="token operator">|</span>李白  <span class="token operator">|</span>咏桂   <span class="token operator">|</span>世人种桃李，皆在金张门。<span class="token punctuation">\\</span>n攀折争捷径，及此春风暄。<span class="token punctuation">\\</span>n一朝天霜下，荣耀难久存。<span class="token punctuation">\\</span>n安知南山桂<span class="token punctuation">..</span>.<span class="token operator">|</span>
<span class="token operator">|</span>李白  <span class="token operator">|</span>落日忆山中<span class="token operator">|</span>雨后烟景绿，晴天散馀霞。<span class="token punctuation">\\</span>n东风随春归，发我枝上花。<span class="token punctuation">\\</span>n花落时欲暮，见此令人嗟。<span class="token punctuation">\\</span>n愿游名山去<span class="token punctuation">..</span>.<span class="token operator">|</span>
+----+-----+--------------------------------------------------+

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> left <span class="token function">join</span> <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>
+----+----+------+-------+------+-------+---------+
<span class="token operator">|</span>  ID<span class="token operator">|</span>NAME<span class="token operator">|</span>    ID<span class="token operator">|</span>POET_ID<span class="token operator">|</span>TITLE <span class="token operator">|</span>CONTENT<span class="token operator">|</span>CREATE_AT<span class="token operator">|</span>
+----+----+------+-------+------+-------+---------+
<span class="token operator">|</span>  <span class="token number">10</span><span class="token operator">|</span>一灰灰 <span class="token operator">|</span><span class="token punctuation">{</span>null<span class="token punctuation">}</span><span class="token operator">|</span> <span class="token punctuation">{</span>null<span class="token punctuation">}</span><span class="token operator">|</span><span class="token punctuation">{</span>null<span class="token punctuation">}</span><span class="token operator">|</span><span class="token punctuation">{</span>null<span class="token punctuation">}</span> <span class="token operator">|</span><span class="token punctuation">{</span>null<span class="token punctuation">}</span>   <span class="token operator">|</span>
+----+----+------+-------+------+-------+---------+

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> left <span class="token function">join</span> <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>
+----+----+----+-------+-----+-------+---------+
<span class="token operator">|</span>  ID<span class="token operator">|</span>NAME<span class="token operator">|</span>  ID<span class="token operator">|</span>POET_ID<span class="token operator">|</span>TITLE<span class="token operator">|</span>CONTENT<span class="token operator">|</span>CREATE_AT<span class="token operator">|</span>
+----+----+----+-------+-----+-------+---------+

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> right <span class="token function">join</span> <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>
+----+----+----+-------+-----+-------+---------+
<span class="token operator">|</span>  ID<span class="token operator">|</span>NAME<span class="token operator">|</span>  ID<span class="token operator">|</span>POET_ID<span class="token operator">|</span>TITLE<span class="token operator">|</span>CONTENT<span class="token operator">|</span>CREATE_AT<span class="token operator">|</span>
+----+----+----+-------+-----+-------+---------+

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> right <span class="token function">join</span> <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>
+------+------+----+-------+-----+--------------------------------------------------+-----------------------+
<span class="token operator">|</span>    ID<span class="token operator">|</span>NAME  <span class="token operator">|</span>  ID<span class="token operator">|</span>POET_ID<span class="token operator">|</span>TITLE<span class="token operator">|</span>CONTENT                                           <span class="token operator">|</span>CREATE_AT              <span class="token operator">|</span>
+------+------+----+-------+-----+--------------------------------------------------+-----------------------+
<span class="token operator">|</span><span class="token punctuation">{</span>null<span class="token punctuation">}</span><span class="token operator">|</span><span class="token punctuation">{</span>null<span class="token punctuation">}</span><span class="token operator">|</span>   <span class="token number">4</span><span class="token operator">|</span>     <span class="token number">99</span><span class="token operator">|</span>番阳道中 <span class="token operator">|</span>督府春移檄，江城昼撤花。<span class="token punctuation">\\</span>n好书如隔世，久客似无家。<span class="token punctuation">\\</span>n畏路多言虎，荒村半是鸦。<span class="token punctuation">\\</span>n道逢西北客<span class="token punctuation">..</span>.<span class="token operator">|</span><span class="token number">2020</span>-12-01 <span class="token number">18</span>:11:50.744<span class="token operator">|</span>
+------+------+----+-------+-----+--------------------------------------------------+-----------------------+

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> union <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>
+----+
<span class="token operator">|</span>  ID<span class="token operator">|</span>
+----+
<span class="token operator">|</span>   <span class="token number">1</span><span class="token operator">|</span>
<span class="token operator">|</span>   <span class="token number">2</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">10</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">11</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">12</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">13</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">14</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">15</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">16</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">17</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">18</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">19</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">99</span><span class="token operator">|</span>
+----+

<span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> union all <span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;&lt;&lt;</span><span class="token operator">&lt;</span>
+----+
<span class="token operator">|</span>  ID<span class="token operator">|</span>
+----+
<span class="token operator">|</span>   <span class="token number">1</span><span class="token operator">|</span>
<span class="token operator">|</span>   <span class="token number">2</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">10</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">11</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">12</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">13</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">14</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">15</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">16</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">17</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">18</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">19</span><span class="token operator">|</span>
<span class="token operator">|</span>   <span class="token number">1</span><span class="token operator">|</span>
<span class="token operator">|</span>   <span class="token number">1</span><span class="token operator">|</span>
<span class="token operator">|</span>   <span class="token number">2</span><span class="token operator">|</span>
<span class="token operator">|</span>  <span class="token number">99</span><span class="token operator">|</span>
+----+

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仔细观察一下上面输出中，left join 与 right join两次的查询情况，对于<code>left join</code>而言，左表的数据要求有，右表没有用null填充；而right join正好相反</p><p>此外就是<code>union</code>与<code>union all</code>的区别，前面会去重，后面则是捞出所有的记录</p><h2 id="ii-其他" tabindex="-1"><a class="header-anchor" href="#ii-其他" aria-hidden="true">#</a> II. 其他</h2><h3 id="_0-项目" tabindex="-1"><a class="header-anchor" href="#_0-项目" aria-hidden="true">#</a> 0. 项目</h3><p><strong>系列博文</strong></p>`,34),v={href:"https://spring.hhui.top/spring-blog/2020/12/05/201204-SpringBoot%E7%B3%BB%E5%88%97Jooq%E4%B9%8B%E8%81%9A%E5%90%88%E6%9F%A5%E8%AF%A2/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://spring.hhui.top/spring-blog/2020/12/03/201203-SpringBoot%E7%B3%BB%E5%88%97Jooq%E4%B9%8B%E8%AE%B0%E5%BD%95%E6%9F%A5%E8%AF%A2%E5%9F%BA%E7%A1%80%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://spring.hhui.top/spring-blog/2020/12/02/201202-SpingBoot%E7%B3%BB%E5%88%97Jooq%E6%89%B9%E9%87%8F%E5%86%99%E5%85%A5%E9%87%87%E5%9D%91%E8%AE%B0%E5%BD%95/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://spring.hhui.top/spring-blog/2020/09/30/200930-SpringBoot%E7%B3%BB%E5%88%97Jooq%E4%B9%8B%E8%AE%B0%E5%BD%95%E6%9B%B4%E6%96%B0%E4%B8%8E%E5%88%A0%E9%99%A4/",target:"_blank",rel:"noopener noreferrer"},h={href:"http://spring.hhui.top/spring-blog/2020/09/20/200920-SpringBoot%E7%B3%BB%E5%88%97Jooq%E4%B9%8B%E6%96%B0%E5%A2%9E%E8%AE%B0%E5%BD%95%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},f={href:"http://spring.hhui.top/spring-blog/2020/09/16/200916-SpringBoot%E7%B3%BB%E5%88%97Jooq%E4%BB%A3%E7%A0%81%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90/",target:"_blank",rel:"noopener noreferrer"},E={href:"http://spring.hhui.top/spring-blog/2020/09/15/200915-SpringBoot%E7%B3%BB%E5%88%97Jooq%E5%88%9D%E4%BD%93%E9%AA%8C/",target:"_blank",rel:"noopener noreferrer"},_=n("p",null,[n("strong",null,"项目源码")],-1),T={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},B={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/108-jooq-curd",target:"_blank",rel:"noopener noreferrer"};function y(I,j){const a=i("ExternalLinkIcon");return o(),e("div",null,[k,c(" more "),d,n("ul",null,[n("li",null,[n("a",v,[s("【SpringBoot DB系列】Jooq之聚合查询"),t(a)])]),n("li",null,[n("a",m,[s("【SpringBoot DB系列】Jooq之记录查询基础篇"),t(a)])]),n("li",null,[n("a",g,[s("【SpringBoot DB系列】Jooq批量写入采坑记录"),t(a)])]),n("li",null,[n("a",b,[s("【SpringBoot DB系列】Jooq之记录更新与删除"),t(a)])]),n("li",null,[n("a",h,[s("【SpringBoot DB系列】Jooq之新增记录使用姿势"),t(a)])]),n("li",null,[n("a",f,[s("【SpringBoot DB系列】Jooq代码自动生成"),t(a)])]),n("li",null,[n("a",E,[s("【SpringBoot DB系列】Jooq初体验"),t(a)])])]),_,n("ul",null,[n("li",null,[s("工程："),n("a",T,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("项目源码: "),n("a",B,[s("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/108-jooq-curd"),t(a)])])])])}const D=p(r,[["render",y],["__file","09.201211-SpringBoot系列Jooq之多表联合查询.html.vue"]]);export{D as default};
