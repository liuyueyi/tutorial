const n=JSON.parse('{"key":"v-a10c0978","path":"/git/quick-media/image/07.%E5%9B%BE%E7%89%87%E8%BD%AC%E5%AD%97%E7%AC%A6%E5%9B%BE.html","title":"7.像素图片-图片转字符图","lang":"zh-CN","frontmatter":{"title":"7.像素图片-图片转字符图","order":8,"tag":["QuickMedia","image-plugin"],"categorie":["Quick系列"],"date":"2021-11-16T11:19:49.000Z","description":"前面介绍了一篇java实现图片灰度化处理的小demo，接下来再介绍一个有意思的东西，将一个图片转换成字符图片 借助前面图片灰度化处理的知识点，若我们希望将一张图片转成字符图片，同样可以遍历每个像素点，然后将像素点由具体的字符来替换，从而实现字符化处理 基于上面这个思路，具体的实现就很清晰了 @Test public void testRender() throws IOException { String file = \\"http://i0.download.fd.52shubiao.com/t_960x600/g1/M00/10/17/oYYBAFWvR5-IeXHuAAd5kPb8eSgAACm0QF50xIAB3mo414.jpg\\"; // 从网络上下载图片 BufferedImage img = ImageIO.read(FileReadUtil.getStreamByFileName(file)); int w = img.getWidth(), h = img.getHeight(); // 创建新的字符图片画板 BufferedImage gray = new BufferedImage(w, h, img.getType()); Graphics2D g2d = gray.createGraphics(); g2d.setColor(null); g2d.fillRect(0, 0, w, h); Font font = new Font(\\"宋体\\", Font.BOLD, 1); g2d.setFont(font); for (int x = 0; x &lt; w; x ++) { for (int y = 0; y &lt; h; y ++) { g2d.setColor(ColorUtil.int2color(img.getRGB(x, y))); g2d.drawString(\\"灰\\", x, y); } } g2d.dispose(); System.out.printf(\\"渲染完成\\"); }","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/git/quick-media/image/07.%E5%9B%BE%E7%89%87%E8%BD%AC%E5%AD%97%E7%AC%A6%E5%9B%BE.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"7.像素图片-图片转字符图"}],["meta",{"property":"og:description","content":"前面介绍了一篇java实现图片灰度化处理的小demo，接下来再介绍一个有意思的东西，将一个图片转换成字符图片 借助前面图片灰度化处理的知识点，若我们希望将一张图片转成字符图片，同样可以遍历每个像素点，然后将像素点由具体的字符来替换，从而实现字符化处理 基于上面这个思路，具体的实现就很清晰了 @Test public void testRender() throws IOException { String file = \\"http://i0.download.fd.52shubiao.com/t_960x600/g1/M00/10/17/oYYBAFWvR5-IeXHuAAd5kPb8eSgAACm0QF50xIAB3mo414.jpg\\"; // 从网络上下载图片 BufferedImage img = ImageIO.read(FileReadUtil.getStreamByFileName(file)); int w = img.getWidth(), h = img.getHeight(); // 创建新的字符图片画板 BufferedImage gray = new BufferedImage(w, h, img.getType()); Graphics2D g2d = gray.createGraphics(); g2d.setColor(null); g2d.fillRect(0, 0, w, h); Font font = new Font(\\"宋体\\", Font.BOLD, 1); g2d.setFont(font); for (int x = 0; x &lt; w; x ++) { for (int y = 0; y &lt; h; y ++) { g2d.setColor(ColorUtil.int2color(img.getRGB(x, y))); g2d.drawString(\\"灰\\", x, y); } } g2d.dispose(); System.out.printf(\\"渲染完成\\"); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-11T08:53:41.000Z"}],["meta",{"property":"article:tag","content":"QuickMedia"}],["meta",{"property":"article:tag","content":"image-plugin"}],["meta",{"property":"article:published_time","content":"2021-11-16T11:19:49.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-11T08:53:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"7.像素图片-图片转字符图\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-11-16T11:19:49.000Z\\",\\"dateModified\\":\\"2025-02-11T08:53:41.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1739264021000,"updatedTime":1739264021000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":2.84,"words":853},"filePathRelative":"git/quick-media/image/07.图片转字符图.md","localizedDate":"2021年11月16日","excerpt":"<p>前面介绍了一篇java实现图片灰度化处理的小demo，接下来再介绍一个有意思的东西，将一个图片转换成字符图片</p>\\n<p>借助前面图片灰度化处理的知识点，若我们希望将一张图片转成字符图片，同样可以遍历每个像素点，然后将像素点由具体的字符来替换，从而实现字符化处理</p>\\n<p>基于上面这个思路，具体的实现就很清晰了</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Test</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">testRender</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">throws</span> <span class=\\"token class-name\\">IOException</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">String</span> file <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"http://i0.download.fd.52shubiao.com/t_960x600/g1/M00/10/17/oYYBAFWvR5-IeXHuAAd5kPb8eSgAACm0QF50xIAB3mo414.jpg\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 从网络上下载图片</span>\\n    <span class=\\"token class-name\\">BufferedImage</span> img <span class=\\"token operator\\">=</span> <span class=\\"token class-name\\">ImageIO</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">read</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">FileReadUtil</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getStreamByFileName</span><span class=\\"token punctuation\\">(</span>file<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n\\n    <span class=\\"token keyword\\">int</span> w <span class=\\"token operator\\">=</span> img<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getWidth</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span> h <span class=\\"token operator\\">=</span> img<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getHeight</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token comment\\">// 创建新的字符图片画板</span>\\n    <span class=\\"token class-name\\">BufferedImage</span> gray <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">BufferedImage</span><span class=\\"token punctuation\\">(</span>w<span class=\\"token punctuation\\">,</span> h<span class=\\"token punctuation\\">,</span> img<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getType</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">Graphics2D</span> g2d <span class=\\"token operator\\">=</span> gray<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">createGraphics</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    g2d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setColor</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    g2d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">fillRect</span><span class=\\"token punctuation\\">(</span><span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">,</span> w<span class=\\"token punctuation\\">,</span> h<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token class-name\\">Font</span> font <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">Font</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"宋体\\"</span><span class=\\"token punctuation\\">,</span> <span class=\\"token class-name\\">Font</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">BOLD</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    g2d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setFont</span><span class=\\"token punctuation\\">(</span>font<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> x <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> x <span class=\\"token operator\\">&lt;</span> w<span class=\\"token punctuation\\">;</span> x <span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> y <span class=\\"token operator\\">=</span> <span class=\\"token number\\">0</span><span class=\\"token punctuation\\">;</span> y <span class=\\"token operator\\">&lt;</span> h<span class=\\"token punctuation\\">;</span> y <span class=\\"token operator\\">++</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      g2d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">setColor</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ColorUtil</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">int2color</span><span class=\\"token punctuation\\">(</span>img<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getRGB</span><span class=\\"token punctuation\\">(</span>x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            g2d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">drawString</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"灰\\"</span><span class=\\"token punctuation\\">,</span> x<span class=\\"token punctuation\\">,</span> y<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    g2d<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">dispose</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">System</span><span class=\\"token punctuation\\">.</span>out<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">printf</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"渲染完成\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{n as data};
