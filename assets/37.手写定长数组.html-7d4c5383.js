import{_ as e,V as p,W as o,X as c,Y as n,Z as s,$ as t,a1 as i,F as l}from"./framework-094145d2.js";const u={},r=n("h1",{id:"手写定长数组",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#手写定长数组","aria-hidden":"true"},"#"),s(" 手写定长数组")],-1),d=n("p",null,"有个背景场景如下：",-1),k=n("p",null,"一天划分为1440分钟，每分钟记录一个数据块，然后用一个数据结构存储着1440个数据块，随着时间的推移，每过一分钟，向这个数据结构中添加一块，并移除最前的那个；其次就是我希望根据当前的时间，可以获取往前n分钟的数据块",-1),v=n("p",null,"简单来说，上面的需求解析如下：",-1),b=n("ul",null,[n("li",null,"一个数组，容量为1440"),n("li",null,"频繁的新增和删除"),n("li",null,"随机的访问")],-1),m=n("p",null,"后面两个就限制了ArrayList和LinkedList的使用场景了，所以为了满足这个场景，然后写了一个简单的数据结构",-1),h=i(`<h2 id="i-滑动定长数组" tabindex="-1"><a class="header-anchor" href="#i-滑动定长数组" aria-hidden="true">#</a> I. 滑动定长数组</h2><p>来两个偏移量，将数组看成一个循环的结构，一个Start，一个End，分别记录开始和结束，直接在End处添加数据，每次删start处的数据；定位则计算与End或者Start的偏移量来做，超简单的实现如下：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token annotation punctuation">@SuppressWarnings</span><span class="token punctuation">(</span><span class="token string">&quot;unchecked&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">DArray</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arys<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token keyword">int</span> size<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> start<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> end<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 数组的实际容量
     */</span>
    <span class="token annotation punctuation">@Getter</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> capacity<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">DArray</span><span class="token punctuation">(</span><span class="token keyword">int</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>size <span class="token operator">=</span> size<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>arys <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">[</span>size<span class="token punctuation">]</span><span class="token punctuation">;</span>
        start <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        end <span class="token operator">=</span> start<span class="token punctuation">;</span>
        capacity <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">T</span> obj<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        arys<span class="token punctuation">[</span>end<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">;</span>
        end <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">++</span>end<span class="token punctuation">)</span> <span class="token operator">%</span> size<span class="token punctuation">;</span>
        <span class="token keyword">if</span><span class="token punctuation">(</span>capacity <span class="token operator">&lt;</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token operator">++</span>capacity<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>capacity <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">Object</span> obj <span class="token operator">=</span> arys<span class="token punctuation">[</span>start<span class="token punctuation">]</span><span class="token punctuation">;</span>
        arys<span class="token punctuation">[</span>start<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        start <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">++</span>start<span class="token punctuation">)</span> <span class="token operator">%</span> size<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>capacity <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token operator">--</span>capacity<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> obj<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token keyword">int</span> index<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">T</span><span class="token punctuation">)</span> arys<span class="token punctuation">[</span><span class="token punctuation">(</span>start <span class="token operator">+</span> index<span class="token punctuation">)</span> <span class="token operator">%</span> size<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-其他" tabindex="-1"><a class="header-anchor" href="#ii-其他" aria-hidden="true">#</a> II. 其他</h2>`,4),_={id:"一灰灰blog-https-liuyueyi-github-io-hexblog",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#一灰灰blog-https-liuyueyi-github-io-hexblog","aria-hidden":"true"},"#",-1),g={href:"https://liuyueyi.github.io/hexblog",target:"_blank",rel:"noopener noreferrer"},w={href:"https://liuyueyi.github.io/hexblog",target:"_blank",rel:"noopener noreferrer"},f=n("p",null,"一灰灰的个人博客，记录所有学习和工作中的博文，欢迎大家前去逛逛",-1),x=n("h3",{id:"声明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#声明","aria-hidden":"true"},"#"),s(" 声明")],-1),j=n("p",null,"尽信书则不如，已上内容，纯属一家之言，因个人能力有限，难免有疏漏和错误之处，如发现bug或者有更好的建议，欢迎批评指正，不吝感激",-1),z={href:"https://weibo.com/p/1005052169825577/home",target:"_blank",rel:"noopener noreferrer"},T=n("li",null,"QQ： 一灰灰/3302797840",-1),V=n("h3",{id:"扫描关注",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#扫描关注","aria-hidden":"true"},"#"),s(" 扫描关注")],-1),E=n("figure",null,[n("img",{src:"https://raw.githubusercontent.com/liuyueyi/Source/master/img/info/blogInfoV2.png",alt:"QrCode",tabindex:"0",loading:"lazy"}),n("figcaption",null,"QrCode")],-1);function I(B,L){const a=l("ExternalLinkIcon");return p(),o("div",null,[r,d,k,v,b,m,c("more"),h,n("h3",_,[y,s(),n("a",g,[s("一灰灰Blog"),t(a)]),s("： "),n("a",w,[s("https://liuyueyi.github.io/hexblog"),t(a)])]),f,x,j,n("ul",null,[n("li",null,[s("微博地址: "),n("a",z,[s("小灰灰Blog"),t(a)])]),T]),V,E])}const S=e(u,[["render",I],["__file","37.手写定长数组.html.vue"]]);export{S as default};
