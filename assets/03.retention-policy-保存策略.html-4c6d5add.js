import{_ as e,V as n,W as t,X as s,Y as o,a1 as i}from"./framework-094145d2.js";const a="/tutorial/imgs/190719/00.jpg",r="/tutorial/imgs/190719/01.jpg",d="/tutorial/imgs/190719/02.jpg",p={},c=o("p",null,"retention policy这个东西相比较于传统的关系型数据库(比如mysql)而言，是一个比较新的东西，在将表之前，有必要来看一下保存策略有什么用，以及可以怎么用",-1),l=i(`<h2 id="i-基本操作" tabindex="-1"><a class="header-anchor" href="#i-基本操作" aria-hidden="true">#</a> I. 基本操作</h2><h3 id="_1-创建retention-policy" tabindex="-1"><a class="header-anchor" href="#_1-创建retention-policy" aria-hidden="true">#</a> 1. 创建retention policy</h3><p><code>retention policy</code>依托于database存在，也就是说保存策略创建时，需要指定具体的数据库，语法如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>CREATE RETENTION POLICY <span class="token operator">&lt;</span>retention_policy_name<span class="token operator">&gt;</span> ON <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span> DURATION <span class="token operator">&lt;</span>duration<span class="token operator">&gt;</span> REPLICATION <span class="token operator">&lt;</span>n<span class="token operator">&gt;</span> <span class="token punctuation">[</span>SHARD DURATION <span class="token operator">&lt;</span>duration<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>DEFAULT<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>创建语句中，有几个地方需要额外注意一下</p><ul><li><code>retention_policy_name</code>: 策略名（自定义的）</li><li><code>database_name</code>: 一个必须存在的数据库名</li><li><code>duration</code>: 定义的数据保存时间，最低为1h，如果设置为0，表示数据持久不失效（默认的策略就是这样的）</li><li><code>REPLICATION</code>: 定义每个point保存的副本数，默认为1</li><li><code>default</code>: 表示将这个创建的保存策略设置为默认的</li></ul><p>下面是一个实际的case，创建一个数据保存一年的策略</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>create retention policy <span class="token string">&quot;1Y&quot;</span> on <span class="token builtin class-name">test</span> duration 366d replication <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+a+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-策略查看" tabindex="-1"><a class="header-anchor" href="#_2-策略查看" aria-hidden="true">#</a> 2. 策略查看</h3><p>上面演示的case中，已经有如何查看一个数据库的保存策略了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show retention policies on <span class="token operator">&lt;</span>database name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-修改保存策略" tabindex="-1"><a class="header-anchor" href="#_3-修改保存策略" aria-hidden="true">#</a> 3. 修改保存策略</h3><p>修改一个已经存在的保存策略，语法如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ALTER RETENTION POLICY <span class="token operator">&lt;</span>retention_policy_name<span class="token operator">&gt;</span> ON <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span> DURATION <span class="token operator">&lt;</span>duration<span class="token operator">&gt;</span> REPLICATION <span class="token operator">&lt;</span>n<span class="token operator">&gt;</span> SHARD DURATION <span class="token operator">&lt;</span>duration<span class="token operator">&gt;</span> DEFAULT
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的定义和前面创建基本一致，下面给出一个case</p><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-删除保存策略" tabindex="-1"><a class="header-anchor" href="#_4-删除保存策略" aria-hidden="true">#</a> 4. 删除保存策略</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>DROP RETENTION POLICY <span class="token operator">&lt;</span>retention_policy_name<span class="token operator">&gt;</span> ON <span class="token operator">&lt;</span>database_name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>当如下面的case，删除了默认的策略之后，会发现居然没有了默认的保存策略了，这个时候可能需要注意下，手动指定一个</p><figure><img src="`+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="ii-进阶说明" tabindex="-1"><a class="header-anchor" href="#ii-进阶说明" aria-hidden="true">#</a> II. 进阶说明</h2><p>前面虽然介绍了保存策略的增删改查，但是这个东西究竟有什么用，又可以怎么用呢？</p><p>看一下前面查看保存策略的图</p><figure><img src="'+a+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从前面的查看，可以看到保存策略主要有三个关键信息，<code>数据保存时间</code>,<code>数据分片时间</code>,<code>副本数</code></p><h3 id="_1-保存时间" tabindex="-1"><a class="header-anchor" href="#_1-保存时间" aria-hidden="true">#</a> 1. 保存时间</h3><p>duration 这一列，表示的就是这个策略定义的数据保存时间</p><p>因为我们知道每条记录都有一个time表明这条记录的时间戳，如果当前时间与这条记录的time之间差值，大于duration，那么这条数据就会被删除掉</p><p><strong>注意</strong></p><p>默认的保存策略<code>autogen</code>中的<code>duraiton=0</code>，这里表示这条数据不会被删除</p><h3 id="_2-分片时间" tabindex="-1"><a class="header-anchor" href="#_2-分片时间" aria-hidden="true">#</a> 2. 分片时间</h3><p>简单理解为每个分片的时间跨度，比如上面的<code>1_d</code>这个策略中，数据保存最近24小时的，每个小时一个分组</p><p>我们在创建数据策略的时候，大多时候都没有指定这个值，系统给出的方案如下</p><table><thead><tr><th>Retention Policy’s DURATION</th><th>Shard Group Duration</th></tr></thead><tbody><tr><td>&lt; 2 days</td><td>1 hour</td></tr><tr><td>&gt;= 2 days and &lt;= 6 months</td><td>1 day</td></tr><tr><td>&gt; 6 months</td><td>7 days</td></tr></tbody></table><h3 id="_3-副本" tabindex="-1"><a class="header-anchor" href="#_3-副本" aria-hidden="true">#</a> 3. 副本</h3><p>副本这个指定了数据有多少个独立的备份存在</p><h3 id="_4-场景说明" tabindex="-1"><a class="header-anchor" href="#_4-场景说明" aria-hidden="true">#</a> 4. 场景说明</h3><p>了解上面的几个参数之后，可以预见保存策略有个好的地方在于删除过期数据，比如使用influx来存日志，我只希望查看最近一个月的数据，这个时候指定一个<code>duration</code>时间为30天的保存策略，然后添加数据时，指定这个保存策略，就不需要自己来关心日志删除的问题了</p>',39);function h(u,g){return n(),t("div",null,[c,s(" more "),l])}const m=e(p,[["render",h],["__file","03.retention-policy-保存策略.html.vue"]]);export{m as default};
