import{_ as d,V as s,W as n,X as e,Y as t,Z as a,a1 as r}from"./framework-094145d2.js";const o={},p=t("p",null,"最近遇到一个统计的需求场景，针对db中的数据，看一下每天的数据量情况，由于DB中时间字段采用的是int存的时间戳，所以最开始想到的是直接对时间进行按天取整，然后再Group统计数据；",-1),c=t("p",null,[a("除此之外，使用"),t("code",null,"DATE_FORMAT"),a("函数来处理可能是更简洁的方法了，下面分别介绍下两种方式")],-1),l=r(`<h3 id="_1-时间取整方式" tabindex="-1"><a class="header-anchor" href="#_1-时间取整方式" aria-hidden="true">#</a> 1. 时间取整方式</h3><p>假设现在有一个user表，其中<code>create_time</code> 为 int类型的时间戳，此时我们需要统计每天的新增用户数，第一种方式就是将create_time转换为天为单位的整数，然后group分组之后计数即可</p><p>对应的sql如下</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> floor<span class="token punctuation">(</span>create_time <span class="token operator">/</span> <span class="token number">86400</span><span class="token punctuation">)</span> <span class="token keyword">as</span> c<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> <span class="token identifier"><span class="token punctuation">\`</span>user<span class="token punctuation">\`</span></span> <span class="token keyword">group</span> <span class="token keyword">by</span> c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用上面这种方式虽然可以统计出结果，但是显示并不友好，如上面这个<code>c</code>实际上是距离标准起始时间过去的天数；无法直观看到每天的数量情况</p><h3 id="_2-data-format方式" tabindex="-1"><a class="header-anchor" href="#_2-data-format方式" aria-hidden="true">#</a> 2. data_format方式</h3><p>接下来再介绍一下根据日期格式化这个函数来实现数据统计</p><p><strong>函数说明</strong></p><p>这个函数通常接收两个参数，使用姿势形如</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>DATE_FORMAT(date,format)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>date: 日期</li><li>format: 规定日期/时间的输出格式</li></ul><p>注意上面的date，要求是日期格式，可我们现在的数据是int类型，怎么整？</p><p>先通过<code>from_unixtime</code>函数来转换为日期，然后再使用data_format来格式化分组，这样就可行了</p><p>比如按天统计的sql可以如下</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> date_format<span class="token punctuation">(</span>from_unixtime<span class="token punctuation">(</span>create_time<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;%Y-%m-%d&#39;</span><span class="token punctuation">)</span> today<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cnt <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">group</span> <span class="token keyword">by</span> today
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回结果形如</p><table><thead><tr><th>today</th><th>cnt</th></tr></thead><tbody><tr><td>2022-07-02</td><td>6</td></tr><tr><td>2022-07-03</td><td>4</td></tr><tr><td>2022-07-04</td><td>4</td></tr><tr><td>2022-07-05</td><td>3</td></tr><tr><td>2022-07-06</td><td>2</td></tr><tr><td>2022-07-07</td><td>1</td></tr></tbody></table><p>如果需要按周统计，也很方便，将format改成 <code>%Y-%u</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> date_format<span class="token punctuation">(</span>from_unixtime<span class="token punctuation">(</span>create_time<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;%Y-%u&#39;</span><span class="token punctuation">)</span> today<span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> cnt <span class="token keyword">from</span> <span class="token keyword">user</span> <span class="token keyword">group</span> <span class="token keyword">by</span> today
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>返回结果形如</p><table><thead><tr><th>today</th><th>cnt</th></tr></thead><tbody><tr><td>2022-22</td><td>27</td></tr><tr><td>2022-23</td><td>52</td></tr><tr><td>2022-24</td><td>28</td></tr><tr><td>2022-25</td><td>33</td></tr><tr><td>2022-26</td><td>39</td></tr><tr><td>2022-27</td><td>10</td></tr></tbody></table><p>同样按年统计，则将format改成<code>%Y</code>即可</p><p>下面给出format对应的取值说明</p><table><thead><tr><th>格式</th><th>描述</th></tr></thead><tbody><tr><td>%a</td><td>缩写星期名</td></tr><tr><td>%b</td><td>缩写月名</td></tr><tr><td>%c</td><td>月，数值</td></tr><tr><td>%D</td><td>带有英文前缀的月中的天</td></tr><tr><td>%d</td><td>月的天，数值(00-31)</td></tr><tr><td>%e</td><td>月的天，数值(0-31)</td></tr><tr><td>%f</td><td>微秒</td></tr><tr><td>%H</td><td>小时 (00-23)</td></tr><tr><td>%h</td><td>小时 (01-12)</td></tr><tr><td>%I</td><td>小时 (01-12)</td></tr><tr><td>%i</td><td>分钟，数值(00-59)</td></tr><tr><td>%j</td><td>年的天 (001-366)</td></tr><tr><td>%k</td><td>小时 (0-23)</td></tr><tr><td>%l</td><td>小时 (1-12)</td></tr><tr><td>%M</td><td>月名</td></tr><tr><td>%m</td><td>月，数值(00-12)</td></tr><tr><td>%p</td><td>AM 或 PM</td></tr><tr><td>%r</td><td>时间，12-小时（hh:mm:ss AM 或 PM）</td></tr><tr><td>%S</td><td>秒(00-59)</td></tr><tr><td>%s</td><td>秒(00-59)</td></tr><tr><td>%T 时间</td><td>24-小时 (hh:mm:ss)</td></tr><tr><td>%U</td><td>周 (00-53) 星期日是一周的第一天</td></tr><tr><td>%u</td><td>周 (00-53) 星期一是一周的第一天</td></tr><tr><td>%V</td><td>周 (01-53) 星期日是一周的第一天，与 %X 使用</td></tr><tr><td>%v</td><td>周 (01-53) 星期一是一周的第一天，与 %x 使用</td></tr><tr><td>%W</td><td>星期名</td></tr><tr><td>%w 周的天 （0=星期日</td><td>6=星期六）</td></tr><tr><td>%X</td><td>年，其中的星期日是周的第一天，4 位，与 %V 使用</td></tr><tr><td>%x</td><td>年，其中的星期一是周的第一天，4 位，与 %v 使用</td></tr><tr><td>%Y</td><td>年，4 位</td></tr><tr><td>%y</td><td>年，2 位</td></tr></tbody></table>`,24);function i(u,k){return s(),n("div",null,[p,c,e(" more "),l])}const _=d(o,[["render",i],["__file","19.220707-MySql按时、天、周、月进行数据统计.html.vue"]]);export{_ as default};
