import{_ as p,V as e,W as o,Y as s,Z as n,$ as t,a1 as c,F as l}from"./framework-094145d2.js";const i="/tutorial/imgs/column/springai/D01-1.webp",u="/tutorial/imgs/column/springai/D01-2.webp",k="/tutorial/imgs/column/springai/D01-3.webp",r="/tutorial/imgs/column/springai/D01-4.webp",d={},v=c(`<h1 id="_01-从0到1创建一个基于天气的旅游美食推荐智能体" tabindex="-1"><a class="header-anchor" href="#_01-从0到1创建一个基于天气的旅游美食推荐智能体" aria-hidden="true">#</a> 01.从0到1创建一个基于天气的旅游美食推荐智能体</h1><p>本文将演示如何借助LangGraph4j + SpringAI来开发一个完整的智能体应用，实现用户传入地址、大模型通过Function Calling来获取地址天气，调用大模型的旅游项目推荐能力、美食推荐能力，给用返回一个旅游攻略</p><h2 id="一、项目创建" tabindex="-1"><a class="header-anchor" href="#一、项目创建" aria-hidden="true">#</a> 一、项目创建</h2><h3 id="_1-工程创建" tabindex="-1"><a class="header-anchor" href="#_1-工程创建" aria-hidden="true">#</a> 1. 工程创建</h3><p>首先我们需要创建一个 LangGraph4j + SpringAI的项目，对这块不熟悉的小伙伴，请参考 <a href="../%E5%9F%BA%E7%A1%80%E7%AF%87/14.%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AALanggraph4j%E5%AE%9E%E4%BE%8B%E5%B7%A5%E7%A8%8B">创建一个Langgraph4j示例工程</a></p><h3 id="_2-核心依赖" tabindex="-1"><a class="header-anchor" href="#_2-核心依赖" aria-hidden="true">#</a> 2. 核心依赖</h3><p>本工程主要使用框架为 <code>SpringAI1.0.1</code> + <code>LangGraph4j1.6.0-rc4</code> + <code>SpringBoot3.5.4</code></p><p>对应的大模型为： <code>zhipu</code>，通过SpringMVC提供访问接口</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.bsc.langgraph4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>langgraph4j-springai-agentexecutor<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${langgraph4j.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.ai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-ai-starter-model-zhipuai<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-配置文件" tabindex="-1"><a class="header-anchor" href="#_3-配置文件" aria-hidden="true">#</a> 3. 配置文件</h3><p>我们在配置文件<code>application.yml</code>中配置大模型密钥，使用其他大模型的小伙伴，请自行替换</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">ai</span><span class="token punctuation">:</span>
    <span class="token key atrule">zhipuai</span><span class="token punctuation">:</span>
      <span class="token comment"># api-key 使用你自己申请的进行替换；如果为了安全考虑，可以通过启动参数进行设置</span>
      <span class="token key atrule">api-key</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span>zhipuai<span class="token punctuation">-</span>api<span class="token punctuation">-</span>key<span class="token punctuation">}</span>
      <span class="token key atrule">chat</span><span class="token punctuation">:</span> <span class="token comment"># 聊天模型</span>
        <span class="token key atrule">options</span><span class="token punctuation">:</span>
          <span class="token key atrule">model</span><span class="token punctuation">:</span> GLM<span class="token punctuation">-</span>4<span class="token punctuation">-</span>Flash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：大模型的选择时，需要判断是否支持FunctionCalling，如果不支持，则会影响本项目的实际运行效果</p><p>我们的密钥以启动参数的方式传递，方便测试（当然也可以直接写入配置文件、或者系统环境变量，大家按照自己的喜好即可）</p><h2 id="二、智能体开发" tabindex="-1"><a class="header-anchor" href="#二、智能体开发" aria-hidden="true">#</a> 二、智能体开发</h2><h3 id="_1-核心功能描述" tabindex="-1"><a class="header-anchor" href="#_1-核心功能描述" aria-hidden="true">#</a> 1. 核心功能描述</h3><p>智能体的主要功能为：</p><ol><li>用户传入地址</li><li>设计一个WeatherAgent，用于获取给定地方的实时天气情况</li><li>若不需要进行旅游推荐，则直接返回</li><li>若需要进行旅游推荐 <ul><li>调用 TravelAgent，获取给定地址的附近旅游项目推荐</li><li>根据选定的旅游项目，调用 FoodAgent，获取给定地址的附近美食推荐</li></ul></li><li>将上面的结果进行整合，以博文的方式返回给用户</li></ol><figure><img src="`+i+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-实现通用的agentservice" tabindex="-1"><a class="header-anchor" href="#_2-实现通用的agentservice" aria-hidden="true">#</a> 2. 实现通用的AgentService</h3><p>上面的几个Agent都需要与大模型进行交互，因此我们这里可以抽象出一个通用的AgentService，用于处理Agent与大模型的交互</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgentService</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">AgentService</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ChatClient</span> chatClient<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">AgentService</span><span class="token punctuation">(</span><span class="token class-name">ChatModel</span> chatModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>chatClient <span class="token operator">=</span> <span class="token class-name">ChatClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">defaultSystem</span><span class="token punctuation">(</span><span class="token string">&quot;You are now an AI assistant that provides weather, travel, and food recommendations.&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">defaultTools</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">WeatherTools</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">String</span> system<span class="token punctuation">,</span> <span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token comment">// Validate input</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>input <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> input<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">IllegalArgumentException</span><span class="token punctuation">(</span><span class="token string">&quot;input is blank.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[Call LLM] query: {} &quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> chatClient<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">system</span><span class="token punctuation">(</span>system<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&quot;some exception for input = &#39;{}&#39;: {}&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;error, try later!&quot;</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因为大模型本身是无法获取天气信息的，因此我们这里使用FunctionCalling的方式，给大家装配上天气查询的能力（当然这里也可以直接使用天气相关的McpServer）</p><p>我们这里简单的实现一个 WeatherTools 来模拟天气的查询（真实场景中，可以实现第三方天气服务查询API）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeatherTools</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">WeatherTools</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Tool</span><span class="token punctuation">(</span>description <span class="token operator">=</span> <span class="token string">&quot;根据传入的地区，返回对应地区的当前天气&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">WeatherResponse</span> <span class="token function">currentWeatherFunction</span><span class="token punctuation">(</span><span class="token class-name">WeatherRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> weathers <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;rain&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cloudy&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;storm&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;thunder&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;snow&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> temps <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;32°&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;18°&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;10°&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;5°&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;0°&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">WeatherResponse</span> response <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeatherResponse</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">area</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> weathers<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> weathers<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> temps<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> temps<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[WeatherTools] response weather： {}&quot;</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> response<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">WeatherRequest</span><span class="token punctuation">(</span>
            <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;请求的地区，可以是省市区镇街道，如北京、上海、武汉市洪山区、北京朝阳街道&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> area<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">WeatherResponse</span><span class="token punctuation">(</span><span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;用户请求的地区&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> area<span class="token punctuation">,</span>
                                  <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;地区对应的当前天气，如 晴 32°， 小雨 18°&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> weather<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-定义travelstate存储上下文" tabindex="-1"><a class="header-anchor" href="#_3-定义travelstate存储上下文" aria-hidden="true">#</a> 3. 定义TravelState存储上下文</h3><p>我们这里定义一个 <code>TravelState</code> 继承自 <code>AgentState</code> 来实现多智能体之间的数据共享，由于我们这里存在4个智能体，我们为每个智能体的返回都定义一个对应的参数进行承接</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TravelState</span> <span class="token keyword">extends</span> <span class="token class-name">AgentState</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 最开始的输入参数
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">INPUT</span> <span class="token operator">=</span> <span class="token string">&quot;input&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * WeatherAgent执行后的返回的天气信息
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">WEATHER</span> <span class="token operator">=</span> <span class="token string">&quot;weather&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * TravelRecommendAgent 执行后返回推荐游玩项目
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">TRAVEL</span> <span class="token operator">=</span> <span class="token string">&quot;recommendation&quot;</span><span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * FoodRecommendAgent 执行后返回推荐美食
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">FOOD</span> <span class="token operator">=</span> <span class="token string">&quot;food&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 最后基于上面Agent的执行内容，生成的返回给用户的小红书风格的博文内容
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">BLOG</span> <span class="token operator">=</span> <span class="token string">&quot;blog&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TravelState</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> initData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">super</span><span class="token punctuation">(</span>initData<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">INPUT</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面定义了五个常量，其中 <code>INPUT</code> 为最开始的输入参数， <code>WEATHER</code> 为 WeatherAgent执行后的返回的天气信息， <code>TRAVEL</code> 为 TravelRecommendAgent 执行后返回推荐游玩项目， <code>FOOD</code> 为 FoodRecommendAgent 执行后返回推荐美食， <code>BLOG</code> 为 XhsBlogGenerateAgent 执行后汇总生成的小红书风格的博文内容</p><p>不同的Agent返回的数据内容并不相同，可以是基本类型、字符串，也可以是集合、Java POJO对象，由于<code>LangGraphJ</code>自己实现了一套序列化协议，因此我们这里先提供一个JsonSerializer，用于非简单的对象的序列化处理</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token keyword">implements</span> <span class="token class-name">Serializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">JsonSerializer</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> type<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">write</span><span class="token punctuation">(</span><span class="token class-name">T</span> recommendRes<span class="token punctuation">,</span> <span class="token class-name">ObjectOutput</span> objectOutput<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> text <span class="token operator">=</span> <span class="token class-name">JsonUtil</span><span class="token punctuation">.</span><span class="token function">toStr</span><span class="token punctuation">(</span>recommendRes<span class="token punctuation">)</span><span class="token punctuation">;</span>
        objectOutput<span class="token punctuation">.</span><span class="token function">writeObject</span><span class="token punctuation">(</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">T</span> <span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">ObjectInput</span> objectInput<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ClassNotFoundException</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> json <span class="token operator">=</span> <span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>objectInput<span class="token punctuation">.</span><span class="token function">readObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token class-name">JsonUtil</span><span class="token punctuation">.</span><span class="token function">toObj</span><span class="token punctuation">(</span>json<span class="token punctuation">,</span> type<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JsonUtil</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">ObjectMapper</span> mapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

   <span class="token keyword">static</span> <span class="token punctuation">{</span>
      mapper<span class="token punctuation">.</span><span class="token function">findAndRegisterModules</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">SimpleModule</span> <span class="token keyword">module</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleModule</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      mapper<span class="token punctuation">.</span><span class="token function">registerModule</span><span class="token punctuation">(</span><span class="token keyword">module</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      mapper<span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token class-name">DeserializationFeature</span><span class="token punctuation">.</span><span class="token constant">FAIL_ON_UNKNOWN_PROPERTIES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>

   <span class="token doc-comment comment">/**
    * 对象转字符串
    *
    * <span class="token keyword">@param</span> <span class="token parameter">o</span> 对象
    * <span class="token keyword">@return</span> 字符串
    */</span>
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">toStr</span><span class="token punctuation">(</span><span class="token class-name">Object</span> o<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> mapper<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>

   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">T</span> <span class="token function">toObj</span><span class="token punctuation">(</span><span class="token class-name">String</span> s<span class="token punctuation">,</span> <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">T</span><span class="token punctuation">&gt;</span></span> clazz<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">try</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> mapper<span class="token punctuation">.</span><span class="token function">readValue</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span> clazz<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-实现天气智能体-weatheragent" tabindex="-1"><a class="header-anchor" href="#_4-实现天气智能体-weatheragent" aria-hidden="true">#</a> 4. 实现天气智能体 WeatherAgent</h3><p>接下来我们实现第一个智能体，用于获取给定地方的天气</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WeatherAgent</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">WeatherAgent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">NAME</span> <span class="token operator">=</span> <span class="token string">&quot;weatherAgent&quot;</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AgentService</span> agentService<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">WeatherAgent</span><span class="token punctuation">(</span><span class="token class-name">AgentService</span> agentService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>agentService <span class="token operator">=</span> agentService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * Calls the Weather Agent to retrieve weather information based on user input.
     *
     * <span class="token keyword">@param</span> <span class="token parameter">state</span> The current state of the workflow.
     * <span class="token keyword">@return</span> A map containing the weather details as output.
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">callWeatherAgent</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取用户的输入信息</span>
        <span class="token keyword">var</span> query <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">getInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[callWeatherAgent]: {}, input: {}&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 调用大模型，获取天气</span>
        <span class="token keyword">var</span> response <span class="token operator">=</span> agentService<span class="token punctuation">.</span><span class="token function">weather</span><span class="token punctuation">(</span><span class="token string">&quot;请帮我查询给定位置的实时天气\\n&quot;</span> <span class="token operator">+</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 将天气的返回结果保存到State中</span>
        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        output<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token punctuation">.</span><span class="token constant">WEATHER</span><span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[callWeatherAgent] Output: {}&quot;</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> output<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 在AgentService中，扩展一个weather的大模型调用方法，内部集成系统提示词</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgentService</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">weather</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;You are now an AI assistant for weather query&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ... 省略其他实现</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的整体实现比较简单，核心的在于方法 <code>callWeatherAgent</code>，我们会将它包装为<code>LangGraph4J</code>的Node，这个方法你可以理解为 <code>NodeAction</code> 的实现，对应的使用层Node的注册如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">StateGraph</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token punctuation">.</span><span class="token function">serializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
     <span class="token punctuation">.</span><span class="token function">addNode</span><span class="token punctuation">(</span><span class="token class-name">WeatherAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token function">node_async</span><span class="token punctuation">(</span>weatherAgent<span class="token operator">::</span><span class="token function">callWeatherAgent</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>同样的，我们可以在 <code>TravelState</code> 中，提供一个直接获取天气的方法，返回的类型为String字符串</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">WEATHER</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-实现推荐项目智能体-travelrecommendagent" tabindex="-1"><a class="header-anchor" href="#_5-实现推荐项目智能体-travelrecommendagent" aria-hidden="true">#</a> 5. 实现推荐项目智能体 TravelRecommendAgent</h3><p>接下来我们实现第二个智能体，用于推荐给定地点的游玩项目，具体的实现方式可以参照上面天气智能体的实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TravelRecommendAgent</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">TravelRecommendAgent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">NAME</span> <span class="token operator">=</span> <span class="token string">&quot;travelAgent&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AgentService</span> agentService<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TravelRecommendAgent</span><span class="token punctuation">(</span><span class="token class-name">AgentService</span> agentService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>agentService <span class="token operator">=</span> agentService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">callTravelAgent</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> area <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">getInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> weather <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[callTravelAgent]: {}, weather: {}&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> weather<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> prompts <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
                请结合现在的天气，帮我推荐三个适合这个天气游玩的项目
                {area}
                {weather}
                &quot;&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">PromptTemplate</span> promptTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span>prompts<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> prompt <span class="token operator">=</span> promptTemplate<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;area&quot;</span><span class="token punctuation">,</span> area<span class="token punctuation">,</span> <span class="token string">&quot;weather&quot;</span><span class="token punctuation">,</span> weather<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> recommendation <span class="token operator">=</span> agentService<span class="token punctuation">.</span><span class="token function">travel</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        output<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token punctuation">.</span><span class="token constant">TRAVEL</span><span class="token punctuation">,</span> recommendation<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[callTravelAgent] Output: {}&quot;</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> output<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token comment">// 在AgentService中，扩展一个travel的大模型调用方法，内部集成系统提示词</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgentService</span> <span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">travel</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;You are now an AI assistant for travel query&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// ... 省略其他实现</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在旅游项目推荐的实现中，使用了前面返回的天气信息，作为提示词的输入，将大模型的返回结果保存到State中给后续的节点使用；同样的，我们可以在 <code>TravelState</code> 中，提供获取推荐项目的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getTravel</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">TRAVEL</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-实现美食智能体-foodagent" tabindex="-1"><a class="header-anchor" href="#_6-实现美食智能体-foodagent" aria-hidden="true">#</a> 6. 实现美食智能体 FoodAgent</h3><p>接下来我们实现第三个智能体，基于旅游项目的美食推荐（如果条件允许，当然是推荐借助百度/高德地图的MCPServer来实现），具体的实现方式可以参照上面天气智能体的实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FoodRecommendAgent</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">FoodRecommendAgent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">NAME</span> <span class="token operator">=</span> <span class="token string">&quot;foodAgent&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AgentService</span> agentService<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">FoodRecommendAgent</span><span class="token punctuation">(</span><span class="token class-name">AgentService</span> agentService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>agentService <span class="token operator">=</span> agentService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">callFoodAgent</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> travel <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">getTravel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[callFoodAgent]: {}, travel: {}&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">,</span> travel<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 格式化输出</span>
        <span class="token keyword">var</span> outputConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanOutputConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">TravelFoodRecommends</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 提示词模板</span>
        <span class="token keyword">var</span> prompt <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
                现在的天气是 {weather}
                请结合下面推荐的旅游游玩项目，帮我为每个项目推荐三种美食
                {travel}
                {format}
                &quot;&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> promptTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> userMsg <span class="token operator">=</span> promptTemplate<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;weather&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span><span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;travel&quot;</span><span class="token punctuation">,</span> travel<span class="token punctuation">,</span> <span class="token string">&quot;format&quot;</span><span class="token punctuation">,</span> outputConverter<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> foodSuggestion <span class="token operator">=</span> agentService<span class="token punctuation">.</span><span class="token function">food</span><span class="token punctuation">(</span>userMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> res <span class="token operator">=</span> outputConverter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>foodSuggestion<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        output<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token punctuation">.</span><span class="token constant">FOOD</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;Food Agent Output: {}&quot;</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> output<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">TravelFoodRecommends</span><span class="token punctuation">(</span><span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;天气&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> weather<span class="token punctuation">,</span>
                                       <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;不同旅游项目的美食推荐&quot;</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodSuggestion</span><span class="token punctuation">&gt;</span></span> food<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">FoodSuggestion</span><span class="token punctuation">(</span><span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;推荐的游玩项目&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> travel<span class="token punctuation">,</span>
                                 <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;项目推荐原因&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> travelReason<span class="token punctuation">,</span>
                                 <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;适合这个旅游项目的美食推荐列表&quot;</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodItem</span><span class="token punctuation">&gt;</span></span> foods<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">FoodItem</span><span class="token punctuation">(</span><span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;推荐的美食名&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> foodName<span class="token punctuation">,</span>
                           <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;推荐这个美食的原因&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> recommendReason<span class="token punctuation">)</span> <span class="token punctuation">{</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AgentService</span> <span class="token punctuation">{</span>
   <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">food</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">&quot;You are now an AI assistant for food query&quot;</span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// ... 省略其他实现</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个实现，相比于前面的旅游项目Agent的实现会更复杂一点，利用了前面返回的天气和旅游项目，借助了SpringAI的提示词模板 + 结构化输出来实现美食推荐，我们可以在 <code>TravelState</code> 中，提供获取美食推荐列表的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">FoodRecommendAgent<span class="token punctuation">.</span>TravelFoodRecommends</span> <span class="token function">getFood</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">FoodRecommendAgent<span class="token punctuation">.</span>TravelFoodRecommends</span><span class="token punctuation">)</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">FOOD</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FoodRecommendAgent<span class="token punctuation">.</span>TravelFoodRecommends</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-实现小红书博文智能体-xhsbloggenerateagent" tabindex="-1"><a class="header-anchor" href="#_7-实现小红书博文智能体-xhsbloggenerateagent" aria-hidden="true">#</a> 7. 实现小红书博文智能体 XhsBlogGenerateAgent</h3><p>最后我们实现第四个智能体，基于美食推荐，生成小红书的博文；我们这里做一个分支处理，如果是直接由WeatherAgent转过来的，那么我们作为一个天气预报的Agent；如果是由FoodAgent转过来的，那么我们作为一个小红书的旅游美食推荐Agent</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XhsBlogGenerateAgent</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>Logger</span> log <span class="token operator">=</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span></span>LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">XhsBlogGenerateAgent</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> <span class="token constant">NAME</span> <span class="token operator">=</span> <span class="token string">&quot;xhsAgent&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">AgentService</span> agentService<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">XhsBlogGenerateAgent</span><span class="token punctuation">(</span><span class="token class-name">AgentService</span> agentService<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>agentService <span class="token operator">=</span> agentService<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> <span class="token function">callResponseAgent</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[XhsBlogGenerateAgent]: {}&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">var</span> response <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">getFood</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> prompt<span class="token punctuation">;</span>
        <span class="token class-name">String</span> systemPrompt<span class="token punctuation">;</span>
        <span class="token class-name">BeanOutputConverter</span> outputConverter<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">CollectionUtils</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">food</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 从FoodRecommendAgent 过来的</span>
            outputConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanOutputConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">TravelResVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            systemPrompt <span class="token operator">=</span> <span class="token string">&quot;你现在是一个资深的小红书旅游博主运营专家，擅长根据给出地点、天气、推荐项目、推荐美食来生成吸引人阅读的博文&quot;</span><span class="token punctuation">;</span>

            <span class="token comment">// 有推荐旅游项目和美食的返回</span>
            <span class="token class-name">String</span> prompts <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
                    下面是我现在准备的一些素材，请帮我写一份小红书风格的推荐博文，以中文方式返回
                    {weather}
                    {recommends}
                    {format}
                    &quot;&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">PromptTemplate</span> promptTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span>prompts<span class="token punctuation">)</span><span class="token punctuation">;</span>
            prompt <span class="token operator">=</span> promptTemplate<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;weather&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span><span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;recommends&quot;</span><span class="token punctuation">,</span> <span class="token class-name">JsonUtil</span><span class="token punctuation">.</span><span class="token function">toStr</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token string">&quot;format&quot;</span><span class="token punctuation">,</span> outputConverter<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token comment">// 直接从 WeatherAgent 过来的</span>
            outputConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanOutputConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">SimpleResVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            systemPrompt <span class="token operator">=</span> <span class="token string">&quot;你现在是一个资深的天气预报专家，擅长根据给天气给出合理的关注事项建议&quot;</span><span class="token punctuation">;</span>

            <span class="token comment">// 只返回天气</span>
            <span class="token class-name">String</span> prompts <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
                    下面我输入的是天气，请以贴心关怀的语气生成一段天气预报的文案，并配上这个天气的注意事项，以中文的方式返回给我
                    {weather}
                    {format}
                    &quot;&quot;&quot;</span><span class="token punctuation">;</span>
            <span class="token class-name">PromptTemplate</span> promptTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span>prompts<span class="token punctuation">)</span><span class="token punctuation">;</span>
            prompt <span class="token operator">=</span> promptTemplate<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;weather&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">.</span><span class="token function">getWeather</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;format&quot;</span><span class="token punctuation">,</span> outputConverter<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span> recommendation <span class="token operator">=</span> agentService<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span>systemPrompt<span class="token punctuation">,</span> prompt<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        output<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token punctuation">.</span><span class="token constant">BLOG</span><span class="token punctuation">,</span> outputConverter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>recommendation<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;[XhsBlogGenerateAgent] Output: {}&quot;</span><span class="token punctuation">,</span> output<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> output<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>两个不同的分支，返回的内容稍有区别，定义如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SimpleResVo</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">8147413953959189557L</span><span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;推荐标题&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> title<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;推荐内容&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@ToString</span><span class="token punctuation">(</span>callSuper <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TravelResVo</span> <span class="token keyword">extends</span> <span class="token class-name">SimpleResVo</span> <span class="token punctuation">{</span>
   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">6808399653463811338L</span><span class="token punctuation">;</span>
   <span class="token annotation punctuation">@JsonPropertyDescription</span><span class="token punctuation">(</span><span class="token string">&quot;推荐的项目&quot;</span><span class="token punctuation">)</span>
   <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FoodRecommendAgent<span class="token punctuation">.</span>TravelFoodRecommends</span><span class="token punctuation">&gt;</span></span> travels<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同样的，我们可以在 <code>TravelState</code> 中，提供获取最终博文数据的方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">SimpleResVo</span> <span class="token function">getBlog</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">SimpleResVo</span><span class="token punctuation">)</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token constant">BLOG</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">orElse</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleResVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-travelstate序列化" tabindex="-1"><a class="header-anchor" href="#_8-travelstate序列化" aria-hidden="true">#</a> 8. TravelState序列化</h3><p>当上面四个智能体实现完毕之后，<code>TravelState</code>中存储的上下文也都可以确定了，接下来我们定义它的序列化方式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TravelState</span> <span class="token keyword">extends</span> <span class="token class-name">AgentState</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 提供序列化方式，默认使用ObjectStreamStateSerializer，无法有效支持Java POJO类的序列化
     *
     * <span class="token keyword">@return</span> An instance of \`StateSerializer\` for serializing and deserializing \`State\` objects.
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">StateSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TravelState</span><span class="token punctuation">&gt;</span></span> <span class="token function">serializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> serializer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectStreamStateSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">mapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">Message</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">MessageSerializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">mapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">FoodRecommendAgent<span class="token punctuation">.</span>TravelFoodRecommends</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">FoodRecommendAgent<span class="token punctuation">.</span>TravelFoodRecommends</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">mapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">TravelResVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">TravelResVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        serializer<span class="token punctuation">.</span><span class="token function">mapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">register</span><span class="token punctuation">(</span><span class="token class-name">SimpleResVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">JsonSerializer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">SimpleResVo</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> serializer<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-实现多智能体调用的-agentexecutor" tabindex="-1"><a class="header-anchor" href="#_9-实现多智能体调用的-agentexecutor" aria-hidden="true">#</a> 9. 实现多智能体调用的 AgentExecutor</h3><p>上面的智能体实现之后，我们接下来需要实现 <code>AgentExecutor</code>，在这里定义<code>StateGraph</code>，执行多智能体的调用</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MAgentExecutor</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">Logger</span> log <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">MAgentExecutor</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">WeatherAgent</span> weatherAgent<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">TravelRecommendAgent</span> travelAgent<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">FoodRecommendAgent</span> foodAgent<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">XhsBlogGenerateAgent</span> xhsBlogGenerateAgent<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">CompiledGraph</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TravelState</span><span class="token punctuation">&gt;</span></span> compiledGraph<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">MAgentExecutor</span><span class="token punctuation">(</span><span class="token class-name">WeatherAgent</span> weatherAgent<span class="token punctuation">,</span> <span class="token class-name">TravelRecommendAgent</span> travelAgent<span class="token punctuation">,</span> <span class="token class-name">FoodRecommendAgent</span> foodAgent<span class="token punctuation">,</span> <span class="token class-name">XhsBlogGenerateAgent</span> xhsBlogGenerateAgent<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">GraphStateException</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>weatherAgent <span class="token operator">=</span> weatherAgent<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>travelAgent <span class="token operator">=</span> travelAgent<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>foodAgent <span class="token operator">=</span> foodAgent<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>xhsBlogGenerateAgent <span class="token operator">=</span> xhsBlogGenerateAgent<span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>compiledGraph <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">printPlantUml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">CompiledGraph</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TravelState</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCompiledGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> compiledGraph<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">TravelState</span> <span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">String</span> input<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">getCompiledGraph</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token punctuation">.</span><span class="token constant">INPUT</span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">orElseGet</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token keyword">new</span> <span class="token class-name">TravelState</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Error&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;NoDataResponse&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GraphBuilder</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">StateGraph</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TravelState</span><span class="token punctuation">&gt;</span></span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">GraphStateException</span> <span class="token punctuation">{</span>
            <span class="token comment">// 条件分支定义</span>
            <span class="token keyword">var</span> shouldContinue <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">EdgeAction</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">TravelState</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> state <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">&quot;shouldContinue RecommendAgent state: {}&quot;</span><span class="token punctuation">,</span> state<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 如果输入中，要求我们进行推荐，则继续进行旅游项目和食品的推荐</span>
                <span class="token keyword">return</span> state<span class="token punctuation">.</span><span class="token function">getInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;recommendations&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> state<span class="token punctuation">.</span><span class="token function">getInput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;推荐&quot;</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&quot;recommend&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;xhs&quot;</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>

            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">StateGraph</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">TravelState</span><span class="token punctuation">.</span><span class="token function">serializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addNode</span><span class="token punctuation">(</span><span class="token class-name">WeatherAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token function">node_async</span><span class="token punctuation">(</span>weatherAgent<span class="token operator">::</span><span class="token function">callWeatherAgent</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addNode</span><span class="token punctuation">(</span><span class="token class-name">TravelRecommendAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token function">node_async</span><span class="token punctuation">(</span>travelAgent<span class="token operator">::</span><span class="token function">callTravelAgent</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addNode</span><span class="token punctuation">(</span><span class="token class-name">FoodRecommendAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token function">node_async</span><span class="token punctuation">(</span>foodAgent<span class="token operator">::</span><span class="token function">callFoodAgent</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addNode</span><span class="token punctuation">(</span><span class="token class-name">XhsBlogGenerateAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token function">node_async</span><span class="token punctuation">(</span>xhsBlogGenerateAgent<span class="token operator">::</span><span class="token function">callResponseAgent</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addEdge</span><span class="token punctuation">(</span><span class="token constant">START</span><span class="token punctuation">,</span> <span class="token class-name">WeatherAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addConditionalEdges</span><span class="token punctuation">(</span><span class="token class-name">WeatherAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span>
                            <span class="token function">edge_async</span><span class="token punctuation">(</span>shouldContinue<span class="token punctuation">)</span><span class="token punctuation">,</span>
                            <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>
                                    <span class="token string">&quot;recommend&quot;</span><span class="token punctuation">,</span> <span class="token class-name">TravelRecommendAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span>
                                    <span class="token string">&quot;xhs&quot;</span><span class="token punctuation">,</span> <span class="token class-name">XhsBlogGenerateAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span>
                            <span class="token punctuation">)</span>
                    <span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addEdge</span><span class="token punctuation">(</span><span class="token class-name">TravelRecommendAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token class-name">FoodRecommendAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addEdge</span><span class="token punctuation">(</span><span class="token class-name">FoodRecommendAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token class-name">XhsBlogGenerateAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">)</span>
                    <span class="token punctuation">.</span><span class="token function">addEdge</span><span class="token punctuation">(</span><span class="token class-name">XhsBlogGenerateAgent</span><span class="token punctuation">.</span><span class="token constant">NAME</span><span class="token punctuation">,</span> <span class="token constant">END</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的核心在与<code>GraphBuilder.build()</code>的实现，在这个实现中，定义了AgentState、Node、Edge、ConditionEdge，通过他们构建了一个有向图，我们可以通过下面这个方法打印下这个多智能体执行的PantUML</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
  * 打印 plantUml 格式流程图
  *
  * <span class="token keyword">@return</span>
  */</span>
 <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">printPlantUml</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token comment">// 在线 mermaid绘制地址：https://mermaid.live/</span>
     <span class="token comment">// GraphRepresentation representation = compiledGraph.getGraph(GraphRepresentation.Type.MERMAID, &quot;TravelRecommendAgent&quot;, true);</span>

     <span class="token comment">// 在线uml绘制地址： https://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa700002</span>
     <span class="token class-name">GraphRepresentation</span> representation <span class="token operator">=</span> compiledGraph<span class="token punctuation">.</span><span class="token function">getGraph</span><span class="token punctuation">(</span><span class="token class-name">GraphRepresentation<span class="token punctuation">.</span>Type</span><span class="token punctuation">.</span><span class="token constant">PLANTUML</span><span class="token punctuation">,</span> <span class="token string">&quot;TravelRecommendAgent&quot;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token comment">// 获取 PlantUML 文本</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; online uml render site:  https://www.plantuml.com/plantuml/uml/SyfFKj2rKt3CoKnELR1Io4ZDoSa700002&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;=== PlantUML Start ===&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>representation<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;------- PlantUML End ---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">return</span> representation<span class="token punctuation">.</span><span class="token function">content</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-plantuml line-numbers-mode" data-ext="plantuml"><pre class="language-plantuml"><code><span class="token delimiter punctuation">@startuml</span> TravelRecommendAgent
<span class="token keyword">skinparam</span> usecaseFontSize 14
<span class="token keyword">skinparam</span> usecaseStereotypeFontSize 12
<span class="token keyword">skinparam</span> hexagonFontSize 14
<span class="token keyword">skinparam</span> hexagonStereotypeFontSize 12
<span class="token keyword">title</span> <span class="token string">&quot;TravelRecommendAgent&quot;</span>
<span class="token keyword">footer</span>

powered by langgraph4j
<span class="token keyword">end</span> footer
<span class="token keyword">circle</span> start&lt;&lt;input&gt;&gt; <span class="token keyword">as</span> __START__
<span class="token keyword">circle</span> stop <span class="token keyword">as</span> __END__
<span class="token keyword">usecase</span> <span class="token string">&quot;weatherAgent&quot;</span>&lt;&lt;Node&gt;&gt;
<span class="token keyword">usecase</span> <span class="token string">&quot;travelAgent&quot;</span>&lt;&lt;Node&gt;&gt;
<span class="token keyword">usecase</span> <span class="token string">&quot;foodAgent&quot;</span>&lt;&lt;Node&gt;&gt;
<span class="token keyword">usecase</span> <span class="token string">&quot;xhsAgent&quot;</span>&lt;&lt;Node&gt;&gt;
<span class="token keyword">hexagon</span> <span class="token string">&quot;check state&quot;</span> <span class="token keyword">as</span> condition1&lt;&lt;Condition&gt;&gt;
<span class="token string">&quot;__START__&quot;</span> <span class="token arrow operator">-down-&gt;</span> <span class="token string">&quot;weatherAgent&quot;</span>
<span class="token string">&quot;weatherAgent&quot;</span> <span class="token arrow operator">.down.&gt;</span> <span class="token string">&quot;condition1&quot;</span>
<span class="token string">&quot;condition1&quot;</span> <span class="token arrow operator">.down.&gt;</span> <span class="token string">&quot;travelAgent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;recommend&quot;</span>
<span class="token comment">&#39;&quot;weatherAgent&quot; .down.&gt; &quot;travelAgent&quot;: &quot;recommend&quot;</span>
<span class="token string">&quot;condition1&quot;</span> <span class="token arrow operator">.down.&gt;</span> <span class="token string">&quot;xhsAgent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;xhs&quot;</span>
<span class="token comment">&#39;&quot;weatherAgent&quot; .down.&gt; &quot;xhsAgent&quot;: &quot;xhs&quot;</span>
<span class="token string">&quot;travelAgent&quot;</span> <span class="token arrow operator">-down-&gt;</span> <span class="token string">&quot;foodAgent&quot;</span>
<span class="token string">&quot;foodAgent&quot;</span> <span class="token arrow operator">-down-&gt;</span> <span class="token string">&quot;xhsAgent&quot;</span>
<span class="token string">&quot;xhsAgent&quot;</span> <span class="token arrow operator">-down-&gt;</span> <span class="token string">&quot;__END__&quot;</span>
<span class="token delimiter punctuation">@enduml</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_10-测试验证" tabindex="-1"><a class="header-anchor" href="#_10-测试验证" aria-hidden="true">#</a> 10. 测试验证</h3><p>接下来我们实现一个端点，用于用户的推荐交互</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TravelController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">MAgentExecutor</span> mAgentExecutor<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">TravelController</span><span class="token punctuation">(</span><span class="token class-name">MAgentExecutor</span> mAgentExecutor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>mAgentExecutor <span class="token operator">=</span> mAgentExecutor<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/recommend&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">SimpleResVo</span> <span class="token function">recommend</span><span class="token punctuation">(</span><span class="token class-name">String</span> area<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> result <span class="token operator">=</span> mAgentExecutor<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>area<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> result<span class="token punctuation">.</span><span class="token function">getBlog</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>小红书生成风格博文生成（传参中包含推荐二字）:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token string">&#39;http://localhost:8080/recommend?area=我现在准备去武汉旅游，帮我做一些推荐&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>天气预报的信息生成（传参中不包含推荐二字）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token string">&#39;http://localhost:8080/recommend?area=我现在准备去武汉旅游&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="三、小结" tabindex="-1"><a class="header-anchor" href="#三、小结" aria-hidden="true">#</a> 三、小结</h2><p>本文通过逐步拆解的方式，给大家演示了如何借助 <code>SpringAI</code> + <code>LangGraphJ</code> + <code>智普大模型</code> 从0到1创建一个多智能体应用，虽然现在的效果还一般，这个主要还是我的提示词和响应还不够优雅，整个业务的流程还是完整流畅的。有兴趣的小伙伴也可以实际的体验一下</p>',77),m={href:"https://hhui.top/tutorial/spring/springai/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/liuyueyi/spring-ai-demo/tree/master/app-projects/D01-travel-recommend-agent",target:"_blank",rel:"noopener noreferrer"};function b(w,y){const a=l("ExternalLinkIcon");return e(),o("div",null,[v,s("p",null,[n("上文虽然实现步骤相对清晰，但是内中原理和知识点，还是比较多的，对于上面实现的步骤有疑问的小伙伴，可以仔细阅读一下我的 "),s("a",m,[n("SpringAI系列博文"),t(a)]),n(" 相信能解决你的大部分疑问")]),s("p",null,[n("文中所有涉及到的代码，可以到项目中获取 "),s("a",g,[n("https://github.com/liuyueyi/spring-ai-demo"),t(a)])])])}const f=p(d,[["render",b],["__file","D01.从0到1创建一个基于天气的旅游美食推荐智能体.html.vue"]]);export{f as default};
