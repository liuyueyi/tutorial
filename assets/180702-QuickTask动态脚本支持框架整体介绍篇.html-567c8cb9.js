import{_ as e,V as p,W as o,X as i,Y as n,Z as s,$ as t,a1 as c,F as l}from"./framework-094145d2.js";const u={},r=n("figure",null,[n("img",{src:"https://upload-images.jianshu.io/upload_images/1405936-b9a62b4b97a7e477.png?imageMogr2/auto-orient/strip|imageView2/2/w/1240",alt:"logo",tabindex:"0",loading:"lazy"}),n("figcaption",null,"logo")],-1),d=n("h1",{id:"quick-task-动态脚本支持框架整体介绍篇",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#quick-task-动态脚本支持框架整体介绍篇","aria-hidden":"true"},"#"),s(" Quick-Task 动态脚本支持框架整体介绍篇")],-1),k=n("p",null,"一个简单的动态脚本调度框架，支持运行时，实时增加,删除和修改动态脚本，可用于后端的进行接口验证、数据订正，执行定时任务或校验脚本",-1),g=n("p",null,"本项目主要涉及到的技术栈:",-1),h=n("ul",null,[n("li",null,"groovyEngine （groovy脚本加载执行）"),n("li",null,"commons-io （文件变动监听）")],-1),m=c(`<h2 id="i-使用姿势" tabindex="-1"><a class="header-anchor" href="#i-使用姿势" aria-hidden="true">#</a> I. 使用姿势</h2><h3 id="_1-pom配置" tabindex="-1"><a class="header-anchor" href="#_1-pom配置" aria-hidden="true">#</a> 1. pom配置</h3><p>添加仓库地址</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>yihui-maven-repo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>https://raw.githubusercontent.com/liuyueyi/maven-repository/master/repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加项目依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.git.hui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>task-core<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-使用demo" tabindex="-1"><a class="header-anchor" href="#_2-使用demo" aria-hidden="true">#</a> 2. 使用demo</h3><h4 id="a-源码方式" tabindex="-1"><a class="header-anchor" href="#a-源码方式" aria-hidden="true">#</a> a. 源码方式</h4><p>源码下载之后的使用case，可以参考 <code>com.git.hui.task.AppLaunch</code>，运行main方法，监听<code>./task-core/src/test/java/com/git/hui/task</code>目录下脚本的变动即可</p><h4 id="b-jar包引用" tabindex="-1"><a class="header-anchor" href="#b-jar包引用" aria-hidden="true">#</a> b. jar包引用</h4><p>首先准备一个Groovy脚本，放在指定的目录下，如 <code>/tmp/script/DemoScript.groovy</code></p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token keyword">package</span> com<span class="token punctuation">.</span>git<span class="token punctuation">.</span>hui<span class="token punctuation">.</span>task

<span class="token keyword">import</span> com<span class="token punctuation">.</span>git<span class="token punctuation">.</span>hui<span class="token punctuation">.</span>task<span class="token punctuation">.</span>api<span class="token punctuation">.</span>ITask

<span class="token keyword">class</span> <span class="token class-name">DemoScript</span> <span class="token keyword">implements</span> <span class="token class-name">ITask</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        println <span class="token function">name</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token interpolation-string"><span class="token string">&quot; | now &gt; : &gt;&gt;&quot;</span></span> <span class="token operator">+</span> System<span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">void</span> <span class="token function">interrupt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        println <span class="token interpolation-string"><span class="token string">&quot;over&quot;</span></span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对应的启动类可以如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AppRunner</span> <span class="token punctuation">{</span>

    <span class="token comment">// main 方式</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">ScriptExecuteEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/script/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">24</span> <span class="token operator">*</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token comment">// junit 方式启动</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testTaskRun</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">ScriptExecuteEngine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/script/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">24</span> <span class="token operator">*</span><span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-测试" tabindex="-1"><a class="header-anchor" href="#c-测试" aria-hidden="true">#</a> c. 测试</h4><p>应用启动完毕之后</p><ul><li>可以修改 <code>/tmp/script/DemoScript.groovy</code> 脚本的内容，保存后查看是否关闭旧的脚本并执行更新后的脚本</li><li>测试在 <code>/tmp/script</code> 目录下新增脚本</li><li>测试删除 <code>/tmp/script</code> 目录下的脚本</li><li>测试异常的case (如非法的groovy文件，内部运行异常等...)</li></ul><p><strong>注意</strong> 不要在groovy脚本中执行 <code>System.exit(1)</code>, 会导致整个项目都停止运行</p><h2 id="ii-设计原理" tabindex="-1"><a class="header-anchor" href="#ii-设计原理" aria-hidden="true">#</a> II. 设计原理</h2><p>基本结构如下图</p><figure><img src="https://raw.githubusercontent.com/liuyueyi/Source/master/img/blog/daywork/180628/tech.png" alt="脚本框架.png" tabindex="0" loading="lazy"><figcaption>脚本框架.png</figcaption></figure><p>从图中基本上也可以看出，这个项目的结构属于非常轻量级的，核心角色，有下面几个</p><ul><li>Task ： 具体的任务脚本</li><li>TaskContainer： 持有执行任务的容器</li><li>TaskChangeWatcher： 任务观察器，用于查看是否有新增、删除or修改任务，从而卸载旧的任务，并加载新的任务</li></ul><p>另外一块属于扩展方面的插件体系，目前并没有给与实现，若将本框架继承在Spring生态体系中运行时，这些插件的支持就特别简单了</p><ul><li>RedisTemplate</li><li>RestTemplate</li><li>AmqpTemplate</li><li>xxxTemplate</li></ul><h2 id="iii-其他" tabindex="-1"><a class="header-anchor" href="#iii-其他" aria-hidden="true">#</a> III. 其他</h2><h3 id="_0-相关" tabindex="-1"><a class="header-anchor" href="#_0-相关" aria-hidden="true">#</a> 0. 相关</h3><p><strong>博文：</strong></p>`,28),v={href:"https://liuyueyi.github.io/hexblog/2018/06/28/180628-%E5%8A%A8%E6%80%81%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E6%A1%86%E6%9E%B6%E6%83%B3%E6%B3%95%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},b=n("p",null,[n("strong",null,"项目：")],-1),_={href:"https://github.com/liuyueyi/quick-task",target:"_blank",rel:"noopener noreferrer"},y={id:"_1-一灰灰blog-https-liuyueyi-github-io-hexblog",tabindex:"-1"},f=n("a",{class:"header-anchor",href:"#_1-一灰灰blog-https-liuyueyi-github-io-hexblog","aria-hidden":"true"},"#",-1),x={href:"https://liuyueyi.github.io/hexblog",target:"_blank",rel:"noopener noreferrer"},w={href:"https://liuyueyi.github.io/hexblog",target:"_blank",rel:"noopener noreferrer"},E=n("p",null,"一灰灰的个人博客，记录所有学习和工作中的博文，欢迎大家前去逛逛",-1),T=n("h3",{id:"_2-声明",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-声明","aria-hidden":"true"},"#"),s(" 2. 声明")],-1),I=n("p",null,"尽信书则不如，已上内容，纯属一家之言，因个人能力有限，难免有疏漏和错误之处，如发现bug或者有更好的建议，欢迎批评指正，不吝感激",-1),q={href:"https://weibo.com/p/1005052169825577/home",target:"_blank",rel:"noopener noreferrer"},B=n("li",null,"QQ： 一灰灰/3302797840",-1),S=n("h3",{id:"_3-扫描关注",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-扫描关注","aria-hidden":"true"},"#"),s(" 3. 扫描关注")],-1),A=n("figure",null,[n("img",{src:"https://raw.githubusercontent.com/liuyueyi/Source/master/img/info/blogInfoV2.png",alt:"QrCode",tabindex:"0",loading:"lazy"}),n("figcaption",null,"QrCode")],-1);function j(V,C){const a=l("ExternalLinkIcon");return p(),o("div",null,[r,d,k,g,h,i(" more "),m,n("ul",null,[n("li",null,[n("a",v,[s("180628-动态任务执行框架想法篇"),t(a)])])]),b,n("ul",null,[n("li",null,[n("a",_,[s("https://github.com/liuyueyi/quick-task"),t(a)])])]),n("h3",y,[f,s(" 1. "),n("a",x,[s("一灰灰Blog"),t(a)]),s("： "),n("a",w,[s("https://liuyueyi.github.io/hexblog"),t(a)])]),E,T,I,n("ul",null,[n("li",null,[s("微博地址: "),n("a",q,[s("小灰灰Blog"),t(a)])]),B]),S,A])}const N=e(u,[["render",j],["__file","180702-QuickTask动态脚本支持框架整体介绍篇.html.vue"]]);export{N as default};
