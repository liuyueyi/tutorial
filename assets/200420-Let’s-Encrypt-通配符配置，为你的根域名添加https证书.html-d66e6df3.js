import{_ as t,V as o,W as i,X as c,Y as e,Z as a,$ as l,a1 as n,F as d}from"./framework-094145d2.js";const r="/tutorial/hexblog/imgs/200420/00.jpg",p="/tutorial/hexblog/imgs/200420/01.jpg",u="/tutorial/hexblog/imgs/200420/02.jpg",h="/tutorial/hexblog/imgs/200420/03.jpg",g="/tutorial/hexblog/imgs/200420/04.jpg",b={},m=e("p",null,"现在站点不挂个https，就连微信分享都开不了，然而商用https证书又特别贵，作为草根想搞个https证书，有下面两种方案：",-1),_=e("ul",null,[e("li",null,"可以到阿里云的控制台上申请免费证书（必须备案，一年有效期，一个域名一个证书）"),e("li",null,"另外一个方案就是利用let's encrypt来申请证书（支持通配符，即多个域名一个证书）")],-1),f=e("p",null,"下面手把手教你利用let's encrypt进行证书申请",-1),v=n(`<h3 id="_1-准备" tabindex="-1"><a class="header-anchor" href="#_1-准备" aria-hidden="true">#</a> 1. 准备</h3><p>我们这里借助 <code>certbot</code> 来安装依赖包，和后续的一些必要操作</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://dl.eff.org/certbot-auto --no-check-certificate
<span class="token function">chmod</span> +x ./certbot-auto
<span class="token function">cp</span> certbot-auto /usr/local/bin/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),y={href:"https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au",target:"_blank",rel:"noopener noreferrer"},k=n(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au certbot
<span class="token builtin class-name">cd</span> certbot
<span class="token function">chmod</span> 0777 au.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置" tabindex="-1"><a class="header-anchor" href="#_2-配置" aria-hidden="true">#</a> 2. 配置</h3><p>下面的操作，都在<code>certbot</code>目录下，</p><h4 id="a-配置根域名" tabindex="-1"><a class="header-anchor" href="#a-配置根域名" aria-hidden="true">#</a> a. 配置根域名</h4><p>进入<code>domain.ini</code>，查看是否包含你的根域名，没有则添加</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> domain.ini
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="b-配置dns密钥" tabindex="-1"><a class="header-anchor" href="#b-配置dns密钥" aria-hidden="true">#</a> b. 配置DNS密钥</h4><p>因为我域名是在阿里云上购买，下面贴出阿里云的密钥配置流程，登录阿里云控制台，点击个人账号，进入AccessKey管理</p><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后创建一个<code>AccessKey</code>，记录生成的key,secret，然后填写在下面的文件中</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> au.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+p+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="c-安装依赖并测试" tabindex="-1"><a class="header-anchor" href="#c-安装依赖并测试" aria-hidden="true">#</a> c. 安装依赖并测试</h4><p>执行下面脚本，进行依赖安装与测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>certbot-auto certonly  <span class="token parameter variable">-d</span> <span class="token string">&quot;*.hhui.top&quot;</span> <span class="token parameter variable">--manual</span> --preferred-challenges dns --dry-run  --manual-auth-hook <span class="token string">&quot;/home/soft/letsencrypt/certbot/au.sh php aly add&quot;</span> --manual-cleanup-hook <span class="token string">&quot;/home/soft/letsencrypt/certbot/au.sh php aly clean&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>说明：</p><ul><li><code>-d &quot;*.hhui.top&quot;</code> 这里双引号内替换为自己的域名，*表示通配，支持如<code>blog.hhui.top</code>, <code>spring.hhui.top</code>的二级域名证书</li><li><code>--dry-run</code> 这个表示用于验证</li><li><code>/home/soft/letsencrypt/certbot/au.sh php aly add</code><ul><li>分为四部分</li><li><code>/xx/au.sh</code> 表示完整的脚本路径</li><li><code>php</code>: &gt;4; 可以替换为python, 支持2.7/3.7</li><li><code>aly</code>: 阿里云，腾讯用<code>txy</code>，华为用 <code>hwy</code></li><li><code>add</code>: 增加dns</li></ul></li></ul><h4 id="d-生成证书并使用" tabindex="-1"><a class="header-anchor" href="#d-生成证书并使用" aria-hidden="true">#</a> d. 生成证书并使用</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./certbot-auto certonly  <span class="token parameter variable">-d</span> <span class="token string">&quot;*.hhui.top&quot;</span> <span class="token parameter variable">--manual</span> --preferred-challenges dns  --manual-auth-hook <span class="token string">&quot;/home/soft/letsencrypt/certbot/au.sh php aly add&quot;</span> --manual-cleanup-hook <span class="token string">&quot;/home/soft/letsencrypt/certbot/au.sh php aly clean&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面执行的过程中，需要输入邮箱、等各种信息，按照提示输入即可</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>最终生成的签名在目录 <code>/etc/letsencrypt/live/hhui.top</code> （最后最后一个为你的域名）</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><code>privkey.pem</code>: <code>nginx</code>配置时，用到的<code>ssl_certificate_key</code></li><li><code>cert.pem</code>: <code>nginx</code>配置时，用到的<code>ssl_certificate</code></li></ul><p>如一个简单的nginx配置如下（配置完成之后注意重启nginx)</p><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h4 id="e-续期" tabindex="-1"><a class="header-anchor" href="#e-续期" aria-hidden="true">#</a> e. 续期</h4><p>使用let&#39;s encrypt进行签名的证书，只有90天的有效期，如果不想每次快到期之前，人工的再处理，可以考虑通过定时任务来续期</p><p>使用crontab来处理</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">0</span> <span class="token number">3</span> */7 * * certbot-auto renew <span class="token parameter variable">--manual</span> --preferred-challenges dns --deploy-hook  <span class="token string">&quot;/app/soft/nginx/sbin/nginx -s reload&quot;</span> --manual-auth-hook <span class="token string">&quot;/home/soft/letsencrypt/certbot/au.sh php aly add&quot;</span> --manual-cleanup-hook <span class="token string">&quot;/home/soft/letsencrypt/certbot/au.sh php aly clean&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意参数<code>--deploy-hook</code>，用于续期成功之后，重启nginx</p><p><strong>说明</strong></p><ul><li><code>2020.04.04</code> 国内出现dns解析污染，导致域名<code>a771.dscq.akamai.net</code>解析有问题，如果有非大陆的机器，可以考虑在上面执行，然后把证书捞过来</li></ul>`,33);function x(q,w){const s=d("ExternalLinkIcon");return o(),i("div",null,[m,_,f,c(" more "),v,e("p",null,[a("其次借助开源项目: "),e("a",y,[a("https://github.com/ywdblog/certbot-letencrypt-wildcardcertificates-alydns-au"),l(s)]),a(" 进行通配证书生成")]),k])}const V=t(b,[["render",x],["__file","200420-Let’s-Encrypt-通配符配置，为你的根域名添加https证书.html.vue"]]);export{V as default};
