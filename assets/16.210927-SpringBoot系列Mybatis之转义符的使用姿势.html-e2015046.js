import{_ as e,V as l,W as o,X as i,Y as t,Z as n,$ as s,a1 as p,F as r}from"./framework-094145d2.js";const c="/tutorial/imgs/210927/00.jpg",d={},u=t("p",null,[n("在mybatis的xml文件中直接写sql比较方便简洁，但是需要注意的是，在xml文件中，经常会遇到一些需要转义的场景，比如查询 "),t("code",null,"id < xxx"),n("的数据，这个小于号就不能直接写在sql中，接下来我们将看一下，mybatis中的有哪些转义符，可以怎么处理转义问题")],-1),h=p(`<h2 id="i-转义" tabindex="-1"><a class="header-anchor" href="#i-转义" aria-hidden="true">#</a> I.转义</h2><h3 id="_1-转义符" tabindex="-1"><a class="header-anchor" href="#_1-转义符" aria-hidden="true">#</a> 1. 转义符</h3><p>在mybatis的xml文件中，我们最常见的转义符为小于号，如查询id小于100的数据</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  select * from \`money\` where id <span class="token entity named-entity" title="&lt;">&amp;lt;</span> #{id}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意上面的sql，小于号实际使用的是 <code>&amp;lt;</code>，不能直接使用 <code>&lt;</code>，比如直接使用小于号，在idea中会有如下的错误提示</p><figure><img src="`+c+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>日常开发中除了上面的小于号之外，另外一个常见的则是 <code>&amp;</code> 与操作符，如果sql中有位操作的场景，同样需要转义</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>xxx<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  -- select * from \`money\` where id &amp; 1 = 1 的sql，需要如下转义
  select * from \`money\` where id <span class="token entity named-entity" title="&amp;">&amp;amp;</span> 1 = 1
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在mybatis中常见的几个转义字符表映射关系如下表 （mybatis的转义实际上完全遵循的是xml转义规则，主要有下面几个）</p><table><thead><tr><th>符号</th><th>转义</th><th>说明</th></tr></thead><tbody><tr><td>&lt;</td><td>&lt;</td><td>小于</td></tr><tr><td>&gt;</td><td>&gt;</td><td>大于</td></tr><tr><td>&amp;</td><td>&amp;</td><td>与</td></tr><tr><td>&#39;</td><td>&#39;</td><td>单引号</td></tr><tr><td>&quot;</td><td>&quot;</td><td>双引号</td></tr></tbody></table><h3 id="_2-cdata-写法" tabindex="-1"><a class="header-anchor" href="#_2-cdata-写法" aria-hidden="true">#</a> 2. <code>&lt;![CDATA[ ]]&gt;</code> 写法</h3><p>通过转义的方式虽然简单，但是有一个问题就是不够直观，在阅读sql时，还需要在脑海里反转义一下，这样就不太友好了，好在xml提供了CDATA的语法，被包裹在它内部的语句，不会被xml解析器进行解析</p><p>如通过下面的写法来写与操作</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>queryBitCondition<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultType</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>long<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    select id from money where  <span class="token cdata">&lt;![CDATA[ \`money\` &amp; #{bit} = #{bit} ]]&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用这种方式时，需要注意：</p><ul><li>不支持嵌套的写法</li><li>结尾符 <code>]]&gt;</code> 注意与起始符配套使用</li></ul><h2 id="iii-不能错过的源码和相关知识点" tabindex="-1"><a class="header-anchor" href="#iii-不能错过的源码和相关知识点" aria-hidden="true">#</a> III. 不能错过的源码和相关知识点</h2><h3 id="_0-项目" tabindex="-1"><a class="header-anchor" href="#_0-项目" aria-hidden="true">#</a> 0. 项目</h3>`,18),g={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/103-mybatis-xml",target:"_blank",rel:"noopener noreferrer"},b=t("p",null,"系列博文：",-1),_={href:"https://spring.hhui.top/spring-blog/2021/08/15/210815-Mybatis%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B%E4%B9%8BCURD%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://spring.hhui.top/spring-blog/2021/08/31/210831-SpringBoot%E7%B3%BB%E5%88%97%E4%B9%8BMybatis%20CURD%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF-%E6%B3%A8%E8%A7%A3%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://spring.hhui.top/spring-blog/2021/09/24/210924-SpringBoot%E7%B3%BB%E5%88%97Mybatis%E4%B9%8B%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92%E7%9A%84%E5%87%A0%E7%A7%8D%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},x=t("h3",{id:"_1-微信公众号-一灰灰blog",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#_1-微信公众号-一灰灰blog","aria-hidden":"true"},"#"),n(" 1. 微信公众号: 一灰灰Blog")],-1),f=t("p",null,"尽信书则不如，以上内容，纯属一家之言，因个人能力有限，难免有疏漏和错误之处，如发现bug或者有更好的建议，欢迎批评指正，不吝感激",-1),v=t("p",null,"下面一灰灰的个人博客，记录所有学习和工作中的博文，欢迎大家前去逛逛",-1),y={href:"https://blog.hhui.top",target:"_blank",rel:"noopener noreferrer"},E={href:"http://spring.hhui.top",target:"_blank",rel:"noopener noreferrer"},A=t("figure",null,[t("img",{src:"https://spring.hhui.top/spring-blog/imgs/info/info.png",alt:"一灰灰blog",tabindex:"0",loading:"lazy"}),t("figcaption",null,"一灰灰blog")],-1);function q(C,D){const a=r("ExternalLinkIcon");return l(),o("div",null,[u,i(" more "),h,t("ul",null,[t("li",null,[n("工程："),t("a",g,[n("https://github.com/liuyueyi/spring-boot-demo"),s(a)])]),t("li",null,[n("源码："),t("a",m,[n("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/103-mybatis-xml"),s(a)])])]),b,t("ul",null,[t("li",null,[t("a",_,[n("【DB系列】Mybatis系列教程之CURD基本使用姿势"),s(a)])]),t("li",null,[t("a",k,[n("【DB系列】Mybatis系列教程之CURD基本使用姿势-注解篇"),s(a)])]),t("li",null,[t("a",B,[n("【DB系列】Mybatis之参数传递的几种姿势"),s(a)])])]),x,f,v,t("ul",null,[t("li",null,[n("一灰灰Blog个人博客 "),t("a",y,[n("https://blog.hhui.top"),s(a)])]),t("li",null,[n("一灰灰Blog-Spring专题博客 "),t("a",E,[n("http://spring.hhui.top"),s(a)])])]),A])}const M=e(d,[["render",q],["__file","16.210927-SpringBoot系列Mybatis之转义符的使用姿势.html.vue"]]);export{M as default};
