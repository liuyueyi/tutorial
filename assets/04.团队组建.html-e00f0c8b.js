import{_ as i,V as a,W as e,X as p,Y as l,a1 as r}from"./framework-094145d2.js";const t="/tutorial/imgs/column/manager/04_团队成员招聘.png",o="/tutorial/imgs/column/manager/04_带人.png",n={},u=l("p",null,"接下来我们将进入第二章节内容，如何进行团队搭建。 既然是作为技术管理，那必然还是有几个小兵再自己手下的，如果自己管理自己，那也算不上是管理了。",-1),d=l("p",null,"团队搭建的第一篇，当然是找人，填充团队空缺了。 通常一个团队的对外表现形式，与团队负责人本身有很强的关系，如果让你来组建你的团队班底，你会怎么做呢？",-1),h=l("p",null,"正好我现在的团队成员都是我从0到1拉起来的人头，接下来我将从招人和带人两块来说一下如何做团队成员的搭建",-1),s=r('<h2 id="_1-招人" tabindex="-1"><a class="header-anchor" href="#_1-招人" aria-hidden="true">#</a> 1. 招人</h2><p>一二线的技术管理，一般不会有完整的人事权，即想招多少人、招什么样的人、决定要不要某一个候选人都不是我们能拍板的。通常来说，我们拥有建议权，那么对于招人，我们可以怎么做呢？</p><p>当由我们来执行团队搭建时，首先需要定好基调，想好我想要什么样的人，解决什么样的问题，截止时间是什么时候，下面是我再团队搭建之初，思考的几个维度</p><figure><img src="'+t+'" alt="团队成员招聘思维导图" tabindex="0" loading="lazy"><figcaption>团队成员招聘思维导图</figcaption></figure><h3 id="_1-1-团队规划-定人力要求" tabindex="-1"><a class="header-anchor" href="#_1-1-团队规划-定人力要求" aria-hidden="true">#</a> 1.1 团队规划，定人力要求</h3><p>当一项事情交给我们时，我们首要需要考虑的就是这个事情的目标是什么，有没有什么限制要求，结果的考核标准是什么。对于招人这件事呢，同样如此</p><p>首先需要搞清楚，上级领导给我的团队规划，准备了几个人头，团队成员配比是什么（资深高中初级别各多少人），另外还得摸清楚给了我们多长时间来完成这件事</p><p>请注意，上面说的这些，可能会遇到上面无法给出准确结论的场景，对于上级管理而言，他更清楚的是要干什么事情，我能投入多少资源。 因此对于我们来说，上面这几个指标则是由我们来提供，具体的输出呢，则由目标+预算来进行推测</p><p>下面是我个人的一点认识，不一定完全准确，仅供参考</p><ul><li>一个重要且紧急的活，优先是达成目标，资源没有明显限制时 <ul><li>找一批基础能力过硬，协作能力强的小伙伴</li></ul></li><li>一个重要且紧急的活，资源预算有限时： <ul><li>找一两个能力强，剩下的选择靠谱基础扎实，听指挥的小伙伴</li></ul></li><li>一个重要不紧急的活，会持续建设，合理的预算 <ul><li>按金字塔的梯度模型搭建团队</li></ul></li></ul><p>还是以我所在的团队定位来看，上面的几个指标要求：</p><ol><li>团队人员14人（含我, 内分两组），在途3人，待招 10 人，预留一人补充名额</li><li>PM要求，全部是能独挡一面的研发，优选高级</li><li>一个月内完成团队组建</li></ol><p>从上面的指标来看，要求并不算低，再新一线城市，找一个高级研发都不太容易，更何况是在一个月内找十来个</p><p>所以我们需要适当调整上级的预期，领导需要来即能迅速干活的人，那么是不是非高级不可呢？ 从干活这个视角来看，实际上一些能做好交付的中级研发同样可以胜任，那么完全而已和领导沟通一下，再有限的时间内，全找高级的难度太大，可以通过预留一些中级的名额来降低人员招聘进度不利的风险</p><blockquote><p>在这里需要简单说一下我们对高中初的定位（研发最高定位就是高级，再往上就是技术经理和架构）</p><p>高级: 可胜任新系统的搭建，能实现复杂任务的拆解、分配、交付，独立负责一到多个独立的系统 中级: 交付的任务可独立自主完成，做一些简单的任务拆解与实现交付 初级: 再告知如何做的基础上，可以实现独立自主的开发</p></blockquote><h3 id="_1-2-团队标签-定人员基调" tabindex="-1"><a class="header-anchor" href="#_1-2-团队标签-定人员基调" aria-hidden="true">#</a> 1.2 团队标签，定人员基调</h3><p>建立人设，打造个人标签这个事情最近这些年可以说非常流行了，对人如此，同样的对于团队依然适用。 一个成熟且成功的团队，再外人的眼中一定会有一些显著的特色，如果我们有机会构建一个自己的团队，那么再这个团队标签的打造上，请多花一点时间和精力</p><p>打造人设/标签这个对我们研发而言，通常来说属于比较朝纲的问题，对于个人，出了有意的经营之外，更多的是个人特质的外在表现，给人的印象和感觉；对于团队，作为领头羊，如果不主动经营，基本上这个事情很难实现，关于这一块我没有什么值得说到的成功经验，浅述一下个人的尝试路径</p><p><strong>确定团队定位</strong></p><p>首先要知晓打造团队标签，主要是给其他的团队、上级领导看的，从结果来反向看过程，要想做好这件事情，当然必须先摸清楚上级对我们团队的定位和预期；</p><p>如果上面要求我们响应迅速、机动能力强，那就把团队往“敏捷”的代名词上靠</p><p>如果上面要求我们稳定、高质量，那就重点关注每个任务的交付质量，让“靠谱”这个属性贯彻到底</p><p>如果上面要求我们自主、积极创新，那就需要关注团队的活跃性以及主管能动性了</p><p>总的来说，再职场，对于非创造性的岗位要求来说，盯着目标往前冲的路线带来的好处是远大于飘散的随机发挥的</p><p><strong>明确团队使命</strong></p><p>明确团队的使命，这个命题感觉有点大，一个刚搭建的团队，说实话又能有使命感呢？ 我们又不是组建复仇者联盟！</p><p>这里说的明确使命，务实一点可以理解为明确责任，可以直接从项目的责任书、上级的规划蓝图、团队定位等方面来明确责任与义务，提炼使命口号； 特别是对于团队leader而言，这一点较为重要，当我们弄清楚这一点之后，才会更好的去把握，我们招的这一拨人，应该满足什么样的特质，用什么的方式来凝聚团队战斗力</p><p>比如以我现在的团队来看，目前对外营造的标签，主要为 “专业” + “攻坚” + “和谐”，当然这些结论都是再日后的协作过程中，逐渐给其他人留下的印象，我最开始希望打造的只有“专业”这一点，所以我再招人的时候，设置了几个基础的要求</p><ul><li>有相关的行业背景</li><li>五年+的工作经验</li><li>沟通表达简洁、顺畅</li></ul><h3 id="_1-3-团队相性-定协作模式" tabindex="-1"><a class="header-anchor" href="#_1-3-团队相性-定协作模式" aria-hidden="true">#</a> 1.3 团队相性，定协作模式</h3><p>人有相性，团队当然也有。 由于我们是团队leader，那我能不能融入这个团队，或者这个团队的氛围和我的管理方式、个人习惯是否有不可调和的冲突，这些是需要我们重点考虑的</p><p>既然是搭建自己的团队，那这一点就很比较好执行了，首选的肯定是组建一个符合自己性格特点的团队，增加自己的舒适感也可以有效的减少管理的成本。</p><p>所以，再开始之前，先深刻认识一下自己，我是什么样的人，我想要什么样的人，我得团队应该是什么样的一个表现</p><p>同样以我个人举例，我本人属于偏技术侧，不喜欢与人battler，推崇简洁、高效，为人相对随和，因此我希望我一起合作的小伙伴 “有技术追求、做事高效、且性格同样温和”，技术牛批但是性格比较刚的不要，容易产生负面情绪的不要，容易急躁的不要，做事毛糙粗心大意的不要</p><blockquote><p>在这里自我申辩一下，由于我个人不希望我将有限的精力放在人事之上，因此很迅速的定下了我不想合作的特质，从现实来讲，这同样可以减少我们筛人的成本</p></blockquote><h3 id="_1-4-人员招聘" tabindex="-1"><a class="header-anchor" href="#_1-4-人员招聘" aria-hidden="true">#</a> 1.4 人员招聘</h3><p>以上都属于招人的前置过程，当明确我要招一些什么样的人之后，自然的就将进入真实的招聘过程； 有一说一，招人实际上一个非常耗时间、精力的一件事情，如何再短短的半小时、一小时之内，选择你今后战斗的小伙伴，这并不容易，当然每个资深的面试官都有自己的心得，简单说一下我个人的准备及执行过程</p><p><strong>准备阶段</strong></p><ul><li>提前准备几个通用的面试问题 <ul><li>技术方面：高级和中级，设置不同的面试题</li><li>工作习惯：是否养成良好的工作习惯，可以通过日常的工作流程中识别</li></ul></li><li>设定最低的过线标准 <ul><li>技术基本线： 基本功，实际解决问题能力，碰到未遇到的问题的处理思路</li><li>协作基本线： 沟通 + 工作习惯 + 性格</li></ul></li></ul><p><strong>执行过程</strong></p><blockquote><p>为了提高效率，再具体的执行过程中，我的一些操作有点为难面试者的嫌疑😂</p><p>下面是我之前招人的一般流程，并不带有普适性，谨慎参考</p></blockquote><ol><li>让面试者自我定位，属于初中高那一级</li><li>根据自我衡量，抛出准备的面试题 <ul><li>能基本回答完整的，继续下一轮</li><li>回答得比较差的，就准备两个简单的问题，走个流程迅速解决战斗</li></ul></li><li>工作习惯的交流 <ul><li>日常的需求交付模式、怎么和其他人协同开发</li><li>一个紧急的任务交过来了，怎么落地？</li></ul></li><li>了解对方的诉求，判断是否可以满足</li></ol><h3 id="_1-5-小结" tabindex="-1"><a class="header-anchor" href="#_1-5-小结" aria-hidden="true">#</a> 1.5 小结</h3><p>总的来说，招人是一个累活，我个人非常不喜欢干这件事情，主要原因在于我并不善于识人，再短短的交流时间内，很难说到底是遗漏了一个千里马/还是放入了一个滥竽充数的南郭先生</p><p>我个人的一些理论经验不一定行之有效，这里仅供一个参考，三步规划，一步执行</p><ol><li>明确团队规划，确定人员招聘计划</li><li>打造团队标签，明确人员组成</li><li>确定团队相性，制定候选人标准基线</li><li>面试过程：准备面试题库 + 设定达标底线</li></ol><h2 id="_2-带人" tabindex="-1"><a class="header-anchor" href="#_2-带人" aria-hidden="true">#</a> 2. 带人</h2><p>一个成熟的团队，除了健全的工作机制之外，还需要具备较低的融入成本。对于技术管理而言，无论是否实际带领团队，如何打造一个新人友好的环境都是我们的职责之一。</p><figure><img src="'+o+'" alt="带人思维导图" tabindex="0" loading="lazy"><figcaption>带人思维导图</figcaption></figure><p>上面是我个人对带人的一点看法，除了建立良好的融入机制之外，这里也分别对新人初级小伙伴以及中高级成熟的职场人做了一些区分，由于层级不同，我们投入的时间、精力以及重点当然也会有侧重</p><h3 id="_2-1-初级成员融入" tabindex="-1"><a class="header-anchor" href="#_2-1-初级成员融入" aria-hidden="true">#</a> 2.1 初级成员融入</h3><p>对于初级的小伙伴，他们的实际经验、技术背景、工作习惯方面可能都存在欠缺，因此对于引领他们快速融入团队的“导师”，需要投入更多的时间关注</p><ol><li>首先，通过交流和交付任务来评估他们的真实能力水平。这有助于我们了解他们的基线，并为他们提供个性化的指导</li><li>制定节点计划 <ul><li>业务熟悉计划表：帮助他们逐步了解和熟悉业务领域</li><li>技术栈学习计划表：确保他们能够快速掌握当前项目的技术栈基础知识点，目标是能够无障碍地使用这些技术</li></ul></li><li>项目工作方式宣贯 <ul><li>提前告知项目的协作规范和开发规范</li><li>在初期，重点关注成员的工作模式执行情况，及时进行纠正和指导</li></ul></li><li>任务需求试点 <ul><li>从简单的任务开始，逐渐分配更具挑战性的任务</li><li>前期聚焦于特定的业务或系统，待熟悉后再进行扩展</li></ul></li><li>定期进行一对一沟通 <ul><li>通过面对面的交流，了解他们的团队融入情况，解答个人的疑惑，并根据他们的反馈动态调整任务分配</li><li>前期可以增加沟通的频率（如每天下班后聊5分钟，每周进行半小时的深入交流），随着他们的成长，可以逐渐降低沟通的频率</li></ul></li></ol><h3 id="_2-2-高级成员融入" tabindex="-1"><a class="header-anchor" href="#_2-2-高级成员融入" aria-hidden="true">#</a> 2.2 高级成员融入</h3><p>针对中高级研发人员，凭借多年的工作经验，通常都已经形成了自己独特的工作习惯。因此，在引导他们融入团队的过程中，我们的目标是加速这一融入过程，并最大限度地减少他们的疏离感和陌生感，驯熟的熟悉当前团队的工作习惯和协作模式。以下是我的一些看法：</p><ol><li>在入职初期，进行一次全面的业务和架构介绍 (这种方式比单纯地阅读文档和代码更为高效) <ul><li>首先，通过整体的介绍，让新成员对业务和架构有一个宏观的认识</li><li>然后再让他们自主地熟悉细节</li></ul></li><li>明确业务领域，并优先进行掌握熟悉 <ul><li>为新成员明确他们即将负责的主要系统，并鼓励他们重点熟悉和掌握。</li><li>如果没有特定的业务需求，那么可以以修复bug为主</li><li>再次过程中，收集他们对业务的整体认知，包括优化建议和遇到的问题。 （从新人的视角，往往可以得到一些我们看不到的优化点）</li></ul></li><li>快速实现任务交付。 <ul><li>鼓励新成员参与需求和设计方案的讨论，从一些非核心的需求开始，迅速了解整个工作流程和规范。</li></ul></li><li>培养信任关系，并充分放权 <ul><li>中高级研发成员加入团队是为了独挡一面。一旦确认他们的能力无误，我们应该给予他们足够的权力，让他们充分发挥自己的能力。</li></ul></li></ol><h2 id="_3-小结" tabindex="-1"><a class="header-anchor" href="#_3-小结" aria-hidden="true">#</a> 3. 小结</h2><p>对于团队成员的组建，是一个非常考研领头人个人综合能力的一项挑战。 认清团队目标，找准自我定位，搭建成员班底这仅是第一步，如何建立良好的团队关系，充分发挥团队的战斗力，也是我们接下来需要重点考虑的点</p><p>接下来我将以个人的实际经历，来看一下一个新的研发团队，怎么做新项目的承接、团队成员的磨合</p>',59);function c(_,g){return a(),e("div",null,[u,d,h,p(" more "),s])}const b=i(n,[["render",c],["__file","04.团队组建.html.vue"]]);export{b as default};
