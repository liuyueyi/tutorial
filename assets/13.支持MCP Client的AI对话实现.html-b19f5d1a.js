const e=JSON.parse('{"key":"v-6a909e31","path":"/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/13.%E6%94%AF%E6%8C%81MCP%20Client%E7%9A%84AI%E5%AF%B9%E8%AF%9D%E5%AE%9E%E7%8E%B0.html","title":"13.支持MCP Client的AI对话实现","lang":"zh-CN","frontmatter":{"order":13,"title":"13.支持MCP Client的AI对话实现","tag":["Spring","SpringAI"],"category":["SpringAI"],"date":"2025-08-05T17:24:07.000Z","keywords":"SpringAI","description":"13.支持MCP Client的AI对话实现 前面介绍了通过SpringAI来实现MCP Server，接下来我们再看一下，通过SpringAI来实现一个支持上次实现的MCP Client的AI对话 一、项目初始化 SpringAI MCP客户端的starter，提供了MCP客户端的自动配置，支持多种传输方式（本地+网络），支持同步、异步的调用 1. 项目创建 创建一个SpringBoot项目，并引入SpringAI依赖，基本流程如 创建一个SpringAI-Demo工程","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/13.%E6%94%AF%E6%8C%81MCP%20Client%E7%9A%84AI%E5%AF%B9%E8%AF%9D%E5%AE%9E%E7%8E%B0.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"13.支持MCP Client的AI对话实现"}],["meta",{"property":"og:description","content":"13.支持MCP Client的AI对话实现 前面介绍了通过SpringAI来实现MCP Server，接下来我们再看一下，通过SpringAI来实现一个支持上次实现的MCP Client的AI对话 一、项目初始化 SpringAI MCP客户端的starter，提供了MCP客户端的自动配置，支持多种传输方式（本地+网络），支持同步、异步的调用 1. 项目创建 创建一个SpringBoot项目，并引入SpringAI依赖，基本流程如 创建一个SpringAI-Demo工程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-08T02:51:24.000Z"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"SpringAI"}],["meta",{"property":"article:published_time","content":"2025-08-05T17:24:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-08T02:51:24.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"13.支持MCP Client的AI对话实现\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-05T17:24:07.000Z\\",\\"dateModified\\":\\"2025-08-08T02:51:24.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、项目初始化","slug":"一、项目初始化","link":"#一、项目初始化","children":[{"level":3,"title":"1. 项目创建","slug":"_1-项目创建","link":"#_1-项目创建","children":[]},{"level":3,"title":"2. 项目配置","slug":"_2-项目配置","link":"#_2-项目配置","children":[]}]},{"level":2,"title":"二、MCP Client实现","slug":"二、mcp-client实现","link":"#二、mcp-client实现","children":[{"level":3,"title":"1. 初始化ChatClient","slug":"_1-初始化chatclient","link":"#_1-初始化chatclient","children":[]},{"level":3,"title":"2. 实现聊天对话","slug":"_2-实现聊天对话","link":"#_2-实现聊天对话","children":[]},{"level":3,"title":"3. 前端聊天页面实现","slug":"_3-前端聊天页面实现","link":"#_3-前端聊天页面实现","children":[]},{"level":3,"title":"4. 使用测试","slug":"_4-使用测试","link":"#_4-使用测试","children":[]}]},{"level":2,"title":"三、小结","slug":"三、小结","link":"#三、小结","children":[]}],"git":{"createdTime":1754621484000,"updatedTime":1754621484000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":4.84,"words":1451},"filePathRelative":"spring/springai/基础篇/13.支持MCP Client的AI对话实现.md","localizedDate":"2025年8月5日","excerpt":"<h1> 13.支持MCP Client的AI对话实现</h1>\\n<p>前面介绍了通过SpringAI来实现MCP Server，接下来我们再看一下，通过SpringAI来实现一个支持上次实现的<code>MCP Client</code>的<code>AI</code>对话</p>\\n<h2> 一、项目初始化</h2>\\n<p>SpringAI MCP客户端的starter，提供了MCP客户端的自动配置，支持多种传输方式（本地+网络），支持同步、异步的调用</p>\\n<h3> 1. 项目创建</h3>\\n<p>创建一个SpringBoot项目，并引入SpringAI依赖，基本流程如 <a href=\\"/tutorial/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/01.%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AASpringAI-Demo%E5%B7%A5%E7%A8%8B.html\\" target=\\"blank\\">创建一个SpringAI-Demo工程</a></p>","copyright":{},"autoDesc":true}');export{e as data};
