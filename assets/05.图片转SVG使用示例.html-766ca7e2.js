import{_ as e,V as c,W as u,X as n,Y as s,Z as t,a0 as o,F as l}from"./framework-23f3cf9b.js";const i="/tutorial/imgs/column/quick-media/image/parseSvg-out1.svg",k="/tutorial/imgs/column/quick-media/image/parseSvg-out2.svg",r="/tutorial/imgs/column/quick-media/image/d5137769-1836-cc20-c1eb-20af1109dc7a.jpg",d="/tutorial/imgs/column/quick-media/image/dlam.svg",p="/tutorial/imgs/column/quick-media/image/lyf.png",m="/tutorial/imgs/column/quick-media/image/lyf.svg",v="/tutorial/imgs/column/quick-media/image/lyf2.svg",g={},b={href:"https://github.com/liuyueyi/quick-media/tree/master/plugins/image-plugin",target:"_blank",rel:"noopener noreferrer"},f=n("h2",{id:"_1-基本原理",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-基本原理","aria-hidden":"true"},"#"),s(" 1. 基本原理")],-1),h=n("p",null,"我们知道图片是由一个一个的像素点组成的，将图片转换为svg的一个思路就是将图片中的每个像素点直接转换为svg中的矩形颜色块，这样就可以直接生成一个对应的svg文本了",-1),q={href:"https://github.com/liuyueyi/quick-media/blob/master/plugins/image-plugin/src/test/java/com/github/hui/quick/plugin/test/feat/svg/SvgParseTest.java",target:"_blank",rel:"noopener noreferrer"},y=o(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">SVG_START</span> <span class="token operator">=</span> <span class="token string">&quot;&lt;?xml version=\\&quot;1.0\\&quot; encoding=\\&quot;UTF-8\\&quot; ?&gt;\\n&quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;&lt;svg xmlns=\\&quot;http://www.w3.org/2000/svg\\&quot;\\n&quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;        viewBox=\\&quot;0 0 {width} {height}\\&quot;\\n&quot;</span> <span class="token operator">+</span>
            <span class="token string">&quot;        style=\\&quot;width: 100%; height: 100%; overflow: auto; fill: {BG_COLOR}\\&quot;&gt;\\n&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token constant">SVG_END</span> <span class="token operator">=</span> <span class="token string">&quot;\\n&lt;/svg&gt;&quot;</span><span class="token punctuation">;</span>


<span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toRect</span><span class="token punctuation">(</span><span class="token class-name">String</span> color<span class="token punctuation">,</span> <span class="token keyword">int</span> w<span class="token punctuation">,</span> <span class="token keyword">int</span> h<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&quot;&lt;rect&quot;</span> <span class="token operator">+</span> <span class="token string">&quot; fill=\\&quot;&quot;</span> <span class="token operator">+</span> color <span class="token operator">+</span> <span class="token string">&quot;\\&quot; height=\\&quot;&quot;</span> <span class="token operator">+</span> h <span class="token operator">+</span> <span class="token string">&quot;\\&quot; width=\\&quot;&quot;</span> <span class="token operator">+</span> w <span class="token operator">+</span> <span class="token string">&quot;\\&quot; y=\\&quot;&quot;</span> <span class="token operator">+</span> y <span class="token operator">+</span> <span class="token string">&quot;\\&quot; x=\\&quot;&quot;</span> <span class="token operator">+</span> x <span class="token operator">+</span> <span class="token string">&quot;\\&quot;/&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">basicParse</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://spring.hhui.top/spring-blog/css/images/avatar.jpg&quot;</span><span class="token punctuation">;</span>

    <span class="token class-name">BufferedImage</span> bufferedImage <span class="token operator">=</span> <span class="token class-name">ImageLoadUtil</span><span class="token punctuation">.</span><span class="token function">getImageByPath</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> h <span class="token operator">=</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token constant">SVG_START</span><span class="token punctuation">,</span> <span class="token string">&quot;{width}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;{height}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;{BG_COLOR}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;white&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;{FONT_COLOR}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> w<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y <span class="token operator">&lt;</span> h<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> color <span class="token operator">=</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getRGB</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>color <span class="token operator">==</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">.</span><span class="token function">getRGB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// 背景直接不要</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token class-name">String</span> htmlColor <span class="token operator">=</span> <span class="token class-name">ColorUtil</span><span class="token punctuation">.</span><span class="token function">int2htmlColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">toRect</span><span class="token punctuation">(</span>htmlColor<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token constant">SVG_END</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FileWriteUtil</span><span class="token punctuation">.</span><span class="token function">saveContent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/parseSvg-out1.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+i+`" alt="输出图" tabindex="0" loading="lazy"><figcaption>输出图</figcaption></figure><p>上面实现就是基本的像素块的替换了，可以看到输出的svg文本较大；接下来我们可以再优化一下，首先利用<code>ImgPixelWrapper</code>将图片转换为像素块（降低精度），然后再将像素块的图片转换为svg</p><p>因此可以对上面的实现进行一个微调</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2svg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>
    <span class="token class-name">BufferedImage</span> pixelImg <span class="token operator">=</span> <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span><span class="token string">&quot;https://spring.hhui.top/spring-blog/css/images/avatar.jpg&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span>size<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">PIXEL_COLOR_AVG</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asBufferedImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> w <span class="token operator">=</span> pixelImg<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> h <span class="token operator">=</span> pixelImg<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">StringBuilder</span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> s <span class="token operator">=</span> <span class="token class-name">StrUtil</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token constant">SVG_START</span><span class="token punctuation">,</span> <span class="token string">&quot;{width}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;{height}&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;{BG_COLOR}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;white&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;{FONT_COLOR}&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;black&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> w<span class="token punctuation">;</span> i <span class="token operator">+=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> h<span class="token punctuation">;</span> j <span class="token operator">+=</span> size<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">int</span> color <span class="token operator">=</span> pixelImg<span class="token punctuation">.</span><span class="token function">getRGB</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Color</span> c <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">250</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">250</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">250</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token class-name">String</span> htmlColor <span class="token operator">=</span> <span class="token class-name">ColorUtil</span><span class="token punctuation">.</span><span class="token function">int2htmlColor</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
            builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">toRect</span><span class="token punctuation">(</span>htmlColor<span class="token punctuation">,</span> size<span class="token punctuation">,</span> size<span class="token punctuation">,</span> i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    builder<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token constant">SVG_END</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;over&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FileWriteUtil</span><span class="token punctuation">.</span><span class="token function">saveContent</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/parseSvg-out2.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> builder<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>比如上面设置<code>size = 8</code>，相当于将原图精度损失8倍，对应生成的svg如下</p><figure><img src="`+k+`" alt="输出图" tabindex="0" loading="lazy"><figcaption>输出图</figcaption></figure><h2 id="_2-使用示例" tabindex="-1"><a class="header-anchor" href="#_2-使用示例" aria-hidden="true">#</a> 2. 使用示例</h2><h3 id="_2-1-参数说明" tabindex="-1"><a class="header-anchor" href="#_2-1-参数说明" aria-hidden="true">#</a> 2.1 参数说明</h3><p>核心参数四个，其中source传图为必填</p><table><thead><tr><th>参数名</th><th>类型</th><th>说明</th><th>是否必填</th></tr></thead><tbody><tr><td><code>source</code></td><td><code>BufferedImage</code></td><td>原始图</td><td>是</td></tr><tr><td><code>blockSize</code></td><td><code>int</code></td><td>对于转字符图时，它控制字符大小；对于灰度/像素处理时，这个表示像素化的处理操作</td><td>非必填，默认 <code>4</code></td></tr><tr><td><code>scaleRate</code></td><td><code>Double</code></td><td>缩放比例，1 表示输出的图不缩放； &gt; 1，表示生成的图，按倍数扩大</td><td>非必填，默认 <code>1</code></td></tr><tr><td><code>bgPredicate</code></td><td><code>Predicate&lt;Color&gt;</code></td><td>背景色判断方式，传参为 <code>intColor</code>，如果返回<code>true</code>，表示认定为背景色；否则不是</td><td>非必填，默认纯白色为背景</td></tr></tbody></table><h3 id="_2-2-使用示例" tabindex="-1"><a class="header-anchor" href="#_2-2-使用示例" aria-hidden="true">#</a> 2.2 使用示例</h3><p>使用姿势形如</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">SvgParserWrapper</span>
      <span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>png<span class="token punctuation">)</span> <span class="token comment">// 制定图片</span>
      <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span> <span class="token comment">// 设置背景判断方式</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">50</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">60</span>
                  <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">55</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">62</span>
                  <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">60</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0xd7</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0x5f</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0xf0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token comment">// 将svg输出到指定文件中，若目录不存在会自动创建缺省的目录</span>
      <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是一个简单的使用示例</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">png2svg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token comment">// 图片转svg</span>
    <span class="token class-name">String</span> png <span class="token operator">=</span> <span class="token string">&quot;https://ci.xiaohongshu.com/d5137769-1836-cc20-c1eb-20af1109dc7a?imageView2/2/w/1080/format/jpg&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">SvgParserWrapper</span>
            <span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>png<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setScaleRate</span><span class="token punctuation">(</span><span class="token number">0.3f</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">50</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">60</span>
                        <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">55</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">62</span>
                        <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">60</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0xd7</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0x5f</span> <span class="token operator">&amp;&amp;</span> c<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0xf0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/dlam.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----over----&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>原图</th><th>svg图</th></tr></thead><tbody><tr><td><img src="`+r+'" height="500px"></td><td><img src="'+d+`" height="500px"></td></tr></tbody></table><p>接下来再看一个真实人像的转换过程，如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parsePhoto</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> photo <span class="token operator">=</span> <span class="token string">&quot;/tmp/quick-media/lyf.png&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">SvgParserWrapper</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>photo<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setScaleRate</span><span class="token punctuation">(</span><span class="token number">0.4</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">getAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/quick-media/lyf.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;---over---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token comment">// 用文字进行替换颜色单元格</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">parsePhoto</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> txt <span class="token operator">=</span> <span class="token string">&quot;刘亦菲&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">AtomicInteger</span> ato <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AtomicInteger</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> photo <span class="token operator">=</span> <span class="token string">&quot;d:/quick-media/lyf.png&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">SvgParserWrapper</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>photo<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setScaleRate</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> c<span class="token punctuation">.</span><span class="token function">getAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSvgCellParse</span><span class="token punctuation">(</span><span class="token punctuation">(</span>color<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> size<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token comment">// 使用文字来填充像素单元格</span>
                <span class="token keyword">return</span> <span class="token class-name">ImgPixelHelper</span><span class="token punctuation">.</span><span class="token function">getSvgTxtCell</span><span class="token punctuation">(</span>txt<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>ato<span class="token punctuation">.</span><span class="token function">getAndAdd</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> color<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> size<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;d:/quick-media/lyf2.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;---over---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,19),w={href:"https://fc.sinaimg.cn/large/ea98bce0gy1h6u8ge7y66j22q55wi4qs.jpg",target:"_blank",rel:"noopener noreferrer"},_=o('<p>对比结果如下</p><table><thead><tr><th>原图</th><th>svg图</th></tr></thead><tbody><tr><td><img src="'+p+'" height="500px"></td><td><img src="'+m+'" height="500px"></td></tr><tr><td><img src="'+p+'" height="500px"></td><td><img src="'+v+'" height="500px"></td></tr></tbody></table>',2);function S(x,B){const a=l("ExternalLinkIcon");return c(),u("div",null,[n("blockquote",null,[n("p",null,[s("本文为 "),n("a",b,[s("image-plugin"),t(a)]),s(" 中图转SVG的使用参考示例")])]),f,h,n("p",null,[s("一个基本的转换实现可以参见 "),n("a",q,[s("SvgParseTest.java"),t(a)])]),y,n("blockquote",null,[n("p",null,[s("说明：原图来自网上 "),n("a",w,[s("https://www.5youqu.com/bizhi/124906.html"),t(a)]),s("，做了背景剔除")])]),_])}const R=e(g,[["render",S],["__file","05.图片转SVG使用示例.html.vue"]]);export{R as default};
