import{_ as p}from"./愤怒的小猪-d8a92cb7.js";import{_ as e}from"./花花草草-6c939957.js";import{_ as o,V as c,W as l,X as i,Y as n,Z as s,$ as u,a1 as a,F as r}from"./framework-094145d2.js";const k="/tutorial/imgs/qrcode/basic/level.jpg",d="/tutorial/imgs/qrcode/basic/qrInfo.jpg",m="/tutorial/imgs/qrcode/basic/qr.svg",v="/tutorial/imgs/qrcode/basic/qr.jpg",g="/tutorial/imgs/qrcode/basic/colorQr.png",b="/tutorial/imgs/qrcode/basic/colorQr2.png",f="/tutorial/imgs/qrcode/img/logo_override.png",h="/tutorial/imgs/qrcode/img/bg_default.png",y="/tutorial/imgs/qrcode/img/ft_basic.png",q={},x=n("p",null,"3.x版本的二维码做了较大的改进，使用姿势与之前的2.0相比，大体上是一致的；但是细节处有一些差异，在实际使用时，请以3.0系列的使用手册为准",-1),_=a(`<p>本片作为图片二维码的第一篇，将主要介绍一些最常规的基本使用姿势，对于进阶的使用请看后续的详细章节</p><h2 id="_1-依赖引入" tabindex="-1"><a class="header-anchor" href="#_1-依赖引入" aria-hidden="true">#</a> 1. 依赖引入</h2><blockquote><p>项目已发布到maven中央仓库，因此无需额外操作，直接依赖即可</p></blockquote><p>对于maven进行项目管理，可以在pom.xml文件中，添加下面的依赖，请注意使用最新的版本</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>mvnrepository<span class="token punctuation">.</span>com<span class="token operator">/</span>artifact<span class="token operator">/</span>com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>liuyueyi<span class="token punctuation">.</span>media<span class="token operator">/</span>qrcode<span class="token operator">-</span>plugin <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">&gt;</span></span>
    <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>liuyueyi<span class="token punctuation">.</span>media<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>qrcode<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span>
    <span class="token generics"><span class="token punctuation">&lt;</span>version<span class="token punctuation">&gt;</span></span><span class="token number">3.0</span><span class="token number">.1</span><span class="token operator">&lt;</span><span class="token operator">/</span>version<span class="token operator">&gt;</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对于gradle进行项目管理，可以再gradle文件中，添加下面的依赖</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code><span class="token comment">// https://mvnrepository.com/artifact/com.github.liuyueyi.media/qrcode-plugin</span>
implementation <span class="token string">&#39;com.github.liuyueyi.media:qrcode-plugin:3.0.0&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-二维码各元素说明" tabindex="-1"><a class="header-anchor" href="#_2-二维码各元素说明" aria-hidden="true">#</a> 2. 二维码各元素说明</h2><p>对于Quick-Media项目而言，我们针对最终生成的二维码，进行了以下几个层级的区分</p><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>如上图所示，从上到下，分为四层</p><ul><li>前置图</li><li>logo</li><li>二维码</li><li>背景图</li></ul><p>上一层的内容会覆盖下一层的内容，一般通过opacity来设置上一层资源的透明度，其值越偏向于0，则透明度越高</p><p>其次再看一下二维码的各要素</p><figure><img src="'+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>定位探测图形/码眼：即二维码中的三个回字型图案 <ul><li>LT(left top) 表示左上</li><li>LD(left down) 表示左下</li><li>RT(right top) 表示右上</li></ul></li><li>码元/信息点：即二维码中的黑色小方块</li><li>背景点：即二维码中的白色小方块</li></ul><p>上面的三类信息，都支持定制，根据给定的样式、资源进行渲染</p><h2 id="_3-使用姿势" tabindex="-1"><a class="header-anchor" href="#_3-使用姿势" aria-hidden="true">#</a> 3. 使用姿势</h2><h3 id="_3-1-基本使用" tabindex="-1"><a class="header-anchor" href="#_3-1-基本使用" aria-hidden="true">#</a> 3.1 基本使用</h3><p>最简单的使用姿势无非就是给如一段文本，然后输出对应的二维码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;https://hhui.top/?type=欢迎关注一灰灰的站点&quot;</span><span class="token punctuation">;</span>
<span class="token class-name">BufferedImage</span> img <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>使用姿势非常简单，三段式使用姿势：</p><ul><li><code>QrCodeGenV3.of()</code> 传参为需要二维码的正文信息；返回的是一个 <code>QrCodeV3Options</code> 对象</li><li>重点注意这个配置类<code>QrCodeV3Options</code>，后面二维码的各种参数配置、输出格式、资源信息指定，都是通过它来进行的，以 <code>build()</code> 方法表示完成相应的参数配置，此时返回<code>QrCodeGenV3</code>对象</li><li><code>asXxx</code> 表示输出二维码，当前中支持多种格式的输出，如base64加密后的文本，BufferedImage，svg文本，文件，二进制流</li></ul><p>在实际的使用时，可以省略<code>QrCodeV3Options.build()</code>方法的显示调用，即在参数设置完成之后，直接接上<code>asXxx</code>输出二维码</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 直接生成二维码，保存到 /tmp/qr.png 图片</span>
<span class="token keyword">boolean</span> file <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/qr.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-基础参数设置" tabindex="-1"><a class="header-anchor" href="#_3-2-基础参数设置" aria-hidden="true">#</a> 3.2 基础参数设置</h3><p>常规的二维码配置中，有错误级别，边框留白程度，生成二维码大小，输出文件格式等设置，在本实例中，实现上面的配置将是一件非常简单省心的事情</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QrSvgGenTest</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> prefix <span class="token operator">=</span> <span class="token string">&quot;/tmp&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;http://weixin.qq.com/r/FS9waAPEg178rUcL93oH&quot;</span><span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Before</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">OSUtil</span><span class="token punctuation">.</span><span class="token function">isWinOS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            prefix <span class="token operator">=</span> <span class="token string">&quot;d://quick-media&quot;</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>


    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">basicConfigAsSvg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
                <span class="token comment">// 设置二维码大小为300x300</span>
                <span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置容错级别为L，官方支持 L/M/Q/H ，容错基本依次递增</span>
                <span class="token punctuation">.</span><span class="token function">setErrorCorrection</span><span class="token punctuation">(</span><span class="token class-name">ErrorCorrectionLevel<span class="token punctuation">.</span>L</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置边框留白，0表示不希望有边框，默认是1，最大值为4</span>
                <span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置编码格式</span>
                <span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置生成二维码样式，下面表示输出svg格式的矢量二维码</span>
                <span class="token punctuation">.</span><span class="token function">setQrType</span><span class="token punctuation">(</span><span class="token class-name">QrType</span><span class="token punctuation">.</span><span class="token constant">SVG</span><span class="token punctuation">)</span>
                <span class="token comment">// 保存二维码到 qr.svg 文件中</span>
                <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/qr.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意上面的 <code>basicConfigAsSvg()</code>，当生成文件的时候，<code>setQrType()</code> 是可以省略的，默认会根据宝成文件名的后缀进行推测，需要创建的是矢量的svg二维码还是普通的图片二维码</p><p>如当我们希望生成jpg格式的二维码时，可以如下操作（注意指定 picType = JPG，否则生成二维码可能会出现偏红的场景）</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">basicConfigAsJpg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
                <span class="token comment">// 设置二维码大小为300x300</span>
                <span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置容错级别为L，官方支持 L/M/Q/H ，容错基本依次递增</span>
                <span class="token punctuation">.</span><span class="token function">setErrorCorrection</span><span class="token punctuation">(</span><span class="token class-name">ErrorCorrectionLevel<span class="token punctuation">.</span>L</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置边框留白，0表示不希望有边框，默认是1，最大值为4</span>
                <span class="token punctuation">.</span><span class="token function">setPadding</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token comment">// 设置编码格式</span>
                <span class="token punctuation">.</span><span class="token function">setCode</span><span class="token punctuation">(</span><span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span>
                <span class="token comment">// 默认输出的是png格式二维码，这里</span>
                <span class="token punctuation">.</span><span class="token function">setPicType</span><span class="token punctuation">(</span><span class="token class-name">PicTypeEnum</span><span class="token punctuation">.</span><span class="token constant">JPG</span><span class="token punctuation">)</span>
                <span class="token comment">// 保存二维码到 qr.svg 文件中</span>
                <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/qr.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是上面两个实例的实际输出</p><table><thead><tr><th style="text-align:center;">basicConfigAsSvg</th><th style="text-align:center;">basicConfigAsJpg</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="`+m+'" alt="" loading="lazy"></td><td style="text-align:center;"><img src="'+v+`" alt="" loading="lazy"></td></tr></tbody></table><h3 id="_3-3-颜色样式设置" tabindex="-1"><a class="header-anchor" href="#_3-3-颜色样式设置" aria-hidden="true">#</a> 3.3 颜色样式设置</h3><p>最常见的个性二维码就是设置二维码的颜色了，我们支持设置探测图形、码元、背景点的颜色，如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">colorAsPng</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
            <span class="token comment">// 设置二维码大小为500x500</span>
            <span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
            <span class="token comment">// 设置绘制的二维码样式为小矩形</span>
            <span class="token punctuation">.</span><span class="token function">setDrawStyle</span><span class="token punctuation">(</span><span class="token class-name">DrawStyle</span><span class="token punctuation">.</span><span class="token constant">MINI_RECT</span><span class="token punctuation">)</span>
            <span class="token comment">// 设置背景点为浅灰</span>
            <span class="token punctuation">.</span><span class="token function">setBgColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">LIGHT_GRAY</span><span class="token punctuation">)</span>
            <span class="token comment">// 设置信息点/码元为蓝色</span>
            <span class="token punctuation">.</span><span class="token function">setPreColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLUE</span><span class="token punctuation">)</span>
            <span class="token comment">// 设置探测图形颜色 洋红</span>
            <span class="token punctuation">.</span><span class="token function">setDetectSpecial</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setDetectColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">MAGENTA</span><span class="token punctuation">)</span>
            <span class="token comment">// 保存二维码到 qr.svg 文件中</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/colorQr.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>几个颜色的设置</strong></p><ul><li>背景点颜色设置： setBgColor(xxx)</li><li>信息点颜色设置： setPreColor(xxx)</li><li>探测图形颜色设置: setDetectColor <ul><li>对于探测图形，还可以分别设置外层和内层的颜色</li><li>setDetectOutColor 设置外层颜色</li><li>setDetectInColor 设置内层颜色</li></ul></li><li>其次设置颜色时，支持三种传参模式 <ul><li>color对象</li><li>int: 注意jdk的color转int之后，透明度是高两位，请不要省略</li><li>string: html格式颜色</li></ul></li></ul><p><strong>绘制样式指定</strong></p><p>通过指定DrawStyle为MINI_RECT，输出小矩形样式的二维码，当前插件内嵌了矩形、圆、三角形、小矩形、圆角矩形、五边形、星星、六边形、八边形等几种几何样式，具体的使用将在后续的几何渲染篇进行介绍</p><p>示例如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">colorAsPngV2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
  <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
            <span class="token comment">// 设置二维码大小为500x500</span>
            <span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
            <span class="token comment">// 设置绘制的二维码样式为圆形</span>
            <span class="token punctuation">.</span><span class="token function">setDrawStyle</span><span class="token punctuation">(</span><span class="token class-name">DrawStyle</span><span class="token punctuation">.</span><span class="token constant">CIRCLE</span><span class="token punctuation">)</span>
            <span class="token comment">// 设置背景点为 玛瑙灰， 请不要省略前面的 0xff</span>
            <span class="token punctuation">.</span><span class="token function">setBgColor</span><span class="token punctuation">(</span><span class="token number">0xffcfccc9</span><span class="token punctuation">)</span>
            <span class="token comment">// 设置信息点/码元为 满天星紫</span>
            <span class="token punctuation">.</span><span class="token function">setPreColor</span><span class="token punctuation">(</span><span class="token string">&quot;#2e317c&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setDetectSpecial</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token comment">// 外层颜色：牵牛紫</span>
            <span class="token punctuation">.</span><span class="token function">setDetectOutColor</span><span class="token punctuation">(</span><span class="token string">&quot;#681752&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">// 内层颜色：青蛤壳紫</span>
            <span class="token punctuation">.</span><span class="token function">setDetectInColor</span><span class="token punctuation">(</span><span class="token string">&quot;#bc84a8&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">// 保存二维码到 qr.svg 文件中</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/colorQr2.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面是上面两个实例的实际输出</p><table><thead><tr><th style="text-align:center;">colorAsPng</th><th style="text-align:center;">colorAsPngV2</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="`+g+'" alt="" loading="lazy"></td><td style="text-align:center;"><img src="'+b+`" alt="" loading="lazy"></td></tr></tbody></table><h3 id="_3-4-logo设置" tabindex="-1"><a class="header-anchor" href="#_3-4-logo设置" aria-hidden="true">#</a> 3.4 logo设置</h3><p>这一节将简单介绍二维码添加logo的使用姿势，更多详情请移步 <a href="">logo使用实例</a></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 若希望logo是覆盖在二维码上的，则可以设置
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logoOverride</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setLogo</span><span class="token punctuation">(</span><span class="token string">&quot;logo.jpg&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/logo_override.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>直接通过 <code>setLogo()</code> 来指定logo的资源图片，上面这种表示从相对路径加载资源文件；同样我们也是支持直接从网络中获取图片</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">logoOverride</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setLogo</span><span class="token punctuation">(</span><span class="token string">&quot;https://blog.hhui.top/hexblog/images/avatar.jpg&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/logo_override.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出如下</p><figure><img src="`+f+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>关于logo的设置，还支持下面几个配置</p><ul><li>setLogoRate: 设置logo大小</li><li>setLogoBorderColor: logo边框颜色</li><li>setLogoOutBorderColor: logo外层边框颜色</li><li>setLogo(new QrResource().setImg().setPicStyle(PicStyle.CIRCLE)): 圆行logo，圆角logo</li></ul><h3 id="_3-5-背景设置" tabindex="-1"><a class="header-anchor" href="#_3-5-背景设置" aria-hidden="true">#</a> 3.5 背景设置</h3><p>设置二维码的背景也是非常常见的需求，我们支持三种样式的背景选择</p><ul><li>BgStyle.OVERRIDE: 通常应用于背景图与二维码等大小的场景，将二维码全覆盖到背景图上，然后设置二维码的透明度，这个也是默认的背景样式</li><li>BgStyle.FILL: 将二维码绘制在背景图上的指定区域</li><li>BgStyle.PENETRATE: 背景图穿透显示, 即二维码主题色为透明，由背景图的颜色进行填充，因此当背景图时渐变色彩时，我们可以得到一个渐变的二维码</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">defaultBg</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">throws</span> <span class="token class-name">Exception</span>  <span class="token punctuation">{</span>
        <span class="token comment">// 可以直接加载网络图片，为了避免网络资源丢失，原图下载到测试资源目录下</span>
<span class="token comment">//            String bg = &quot;http://ww1.sinaimg.cn/large/8154e929gy1g8vho8x6r0j20b40b43yl.jpg&quot;;</span>
      <span class="token class-name">String</span> bg <span class="token operator">=</span> <span class="token string">&quot;bgs/xjs.jpg&quot;</span><span class="token punctuation">;</span>
      <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
              <span class="token comment">// 设置背景图</span>
              <span class="token punctuation">.</span><span class="token function">setBgResource</span><span class="token punctuation">(</span>bg<span class="token punctuation">)</span>
              <span class="token comment">// 设置二维码透明度</span>
              <span class="token punctuation">.</span><span class="token function">setBgOpacity</span><span class="token punctuation">(</span><span class="token number">0.5f</span><span class="token punctuation">)</span>
              <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/bq_default.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际输出结果如下</p><figure><img src="`+h+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-6-前置图设置" tabindex="-1"><a class="header-anchor" href="#_3-6-前置图设置" aria-hidden="true">#</a> 3.6 前置图设置</h3><p>前置图从层级来看在最上层，主要用于给二维码添加一些装饰修饰，其使用姿势与背景图差不多，唯一需要重点注意的是ftX,ftY这个坐标值</p><p>这个坐标表示的是二维码在前置图上绘制的坐标点；因此当前置图小于二维码时，这个坐标可以为负数</p><p>当前置图大于二维码时，若前置图为png，存在透明区域，可以通过设置 fillColor 参数来指定透明区域的填充色；</p><blockquote><p>更多的使用姿势，请移步 <a href="">二维码前置图使用实例</a></p></blockquote><p>一个简单的使用实例如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">basicFt</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSize</span><span class="token punctuation">(</span><span class="token number">1340</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFtResource</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QrResource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setImg</span><span class="token punctuation">(</span><span class="token string">&quot;ft/ft_1.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFtX</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFtY</span><span class="token punctuation">(</span><span class="token number">130</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFtFillColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span>prefix <span class="token operator">+</span> <span class="token string">&quot;/ft_basic.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出图如</p><figure><img src="`+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-模板使用" tabindex="-1"><a class="header-anchor" href="#_4-模板使用" aria-hidden="true">#</a> 4. 模板使用</h2><p>二维码插件提供了丰富的自定义渲染支持，因此对于一些个性化的二维码生成时，可能会发现设置这些参数会变得非常的复杂；为了解决这个问题，3.x 版本特意支持了模板参数</p>',70),w={href:"https://hhui.top/quick/quick-media/qrcode/3.0%E8%B5%84%E6%BA%90%E6%A8%A1%E6%9D%BF/",target:"_blank",rel:"noopener noreferrer"},C=a(`<p>模板使用示例</p><ul><li>svg矢量二维码： setSvgTemplate(String)</li><li>图片二维码: setImgTemplate(String)</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">svgTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// 第一步，读取模板内容</span>
    <span class="token class-name">String</span> svgTemplate <span class="token operator">=</span> <span class="token class-name">FileReadUtil</span><span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span><span class="token string">&quot;svg/愤怒小猪svg.template&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 输出svg格式的二维码，这里除了指定模板文件之外，还设置了二维码默认的大小500</span>
    <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;http://weixin.qq.com/r/FS9waAPEg178rUcL93oH&quot;</span><span class="token punctuation">;</span>
    <span class="token keyword">boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSvgTemplate</span><span class="token punctuation">(</span>svgTemplate<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;./愤怒的小猪.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">imgTplTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token class-name">FileReadUtil</span><span class="token punctuation">.</span><span class="token function">readAll</span><span class="token punctuation">(</span><span class="token string">&quot;tpl/flower.tpl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> msg <span class="token operator">=</span> <span class="token string">&quot;http://weixin.qq.com/r/FS9waAPEg178rUcL93oH&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Boolean</span> ans <span class="token operator">=</span> <span class="token class-name">QrCodeGenV3</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setW</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setImgTemplate</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;./flower.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;over&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th style="text-align:center;">svgTemplate</th><th style="text-align:center;">imgTplTest</th></tr></thead><tbody><tr><td style="text-align:center;"><img src="`+p+'" alt="愤怒的小猪" loading="lazy"></td><td style="text-align:center;"><img src="'+e+'" style="max-height:600px;"></td></tr></tbody></table><p>在使用图片资源模板时，请注意，由于图片的资源模板为json格式，因此需要使用第三方的json序列化工具进行反序列化，当前qrcode-plugin内部提供了gson/fastjson/jackson三种序列化框架的支持，但是qrcode-plugin本身不提供对第三方json包的依赖，所以在使用时，请确保项目本身是引入了上面三个依赖包中的任意一个，否则就需要显示依赖一个了</p><h2 id="_5-小结" tabindex="-1"><a class="header-anchor" href="#_5-小结" aria-hidden="true">#</a> 5. 小结</h2><p>本文作为3.x使用教程的概览，介绍了定制二维码的基本使用姿势，若发现上面的内容不满足您的需求场景，请查看后续的高级使用教程示例</p>',7);function S(j,E){const t=r("ExternalLinkIcon");return c(),l("div",null,[x,i(" more "),_,n("blockquote",null,[n("p",null,[s("模板定义: "),n("a",w,[s("3.x资源模板定义"),u(t)])])]),C])}const V=o(q,[["render",S],["__file","3.x二维码基本使用姿势.html.vue"]]);export{V as default};
