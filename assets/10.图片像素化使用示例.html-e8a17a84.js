import{_ as m,V as v,W as b,Y as n,Z as a,$ as p,a1 as c,F as g}from"./framework-094145d2.js";const e="/tutorial/imgs/column/quick-media/image/gray_alg.png",o="/tutorial/imgs/column/quick-media/image/gray_avg.png",i="/tutorial/imgs/column/quick-media/image/pixelColorAvg.png",l="/tutorial/imgs/column/quick-media/image/charColor.png",u="/tutorial/imgs/column/quick-media/image/charGray.png",d="/tutorial/imgs/column/quick-media/image/charGray.svg",k="/tutorial/imgs/column/quick-media/image/charSeq.png",r="/tutorial/imgs/column/quick-media/image/charBorder.jpg",s="/tutorial/imgs/column/quick-media/image/nezha.jpeg",h="/tutorial/imgs/column/quick-media/image/nezha.png",f="/tutorial/imgs/column/quick-media/image/slake.jpeg",y="/tutorial/imgs/column/quick-media/image/xhr.gif",_="/tutorial/imgs/column/quick-media/image/outV1.gif",x="/tutorial/imgs/column/quick-media/image/outV2.gif",S={},C={href:"https://github.com/liuyueyi/quick-media/tree/master/plugins/image-plugin",target:"_blank",rel:"noopener noreferrer"},q=c(`<h2 id="_1-项目依赖" tabindex="-1"><a class="header-anchor" href="#_1-项目依赖" aria-hidden="true">#</a> 1. 项目依赖</h2><p>直接从中央仓库，导入最新依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- https://mvnrepository.com/artifact/com.github.liuyueyi.media/image-plugin --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.github.liuyueyi.media<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>image-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 请使用最新版本号替换下面的版本 --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-参数说明" tabindex="-1"><a class="header-anchor" href="#_2-参数说明" aria-hidden="true">#</a> 2. 参数说明</h2><p>相关参数配置由<code>com.github.hui.quick.plugin.image.wrapper.pixel.ImgPixelOptions</code>实体类进行装载，对应的参数说明如下</p><table><thead><tr><th>参数名</th><th>类型</th><th>说明</th><th>是否必要</th></tr></thead><tbody><tr><td><code>source</code></td><td><code>BufferedImage</code></td><td>原图</td><td>与下面的gifSource必须有一个存在</td></tr><tr><td><code>gifSource</code></td><td><code>GifDecoder</code></td><td>gif 图</td><td>于上的source必须有一个存在</td></tr><tr><td><code>pixelType</code></td><td><code>IPixelStyle</code></td><td>转换类型</td><td>否，默认为<code>CHAR_COLOR</code></td></tr><tr><td><code>blockSize</code></td><td><code>int</code></td><td>对于转字符图时，它控制字符大小；对于灰度/像素处理时，这个表示像素化的处理操作</td><td>否 1</td></tr><tr><td><code>fontSize</code></td><td><code>int</code></td><td>字体大小</td><td>否</td></tr><tr><td><code>chars</code></td><td><code>String</code></td><td>字符图时，用于渲染的字符集</td><td><code>$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/|()1{}[]?-_+~&lt;&gt;i!lI;:,\\&quot;^&#39;. </code></td></tr><tr><td><code>font</code></td><td><code>Font</code></td><td>字符字体</td><td>否，默认黑色字体</td></tr><tr><td><code>rate</code></td><td><code>Double</code></td><td>缩放比例，1 表示输出的图不缩放； &gt; 1，表示生成的图，按倍数扩大</td><td>否，默认1</td></tr><tr><td><code>picType</code></td><td><code>String</code></td><td>输出图片类型</td><td>否，默认<code>png</code></td></tr><tr><td><code>bgChar</code></td><td><code>Character</code></td><td>背景字符，默认值为空格</td><td>否，默认为空格</td></tr><tr><td><code>bgColor</code></td><td><code>Color</code></td><td>字符图/svg 图的背景色</td><td>否，默认白色</td></tr><tr><td><code>fontColor</code></td><td><code>Color</code></td><td>字符图/svg 图的字体色</td><td>否，默认黑色</td></tr><tr><td><code>bgPredicate</code></td><td><code>Predicate&lt;Integer&gt;</code></td><td>背景色判断方式，传参为 intColor，如果返回 true，表示认定为背景色；否则不是</td><td>否，默认颜色rbga == 0时为背景</td></tr></tbody></table><p>上面的配置参数中，重点关注一下 <code>PixelType</code>，它表明了具体的转换策略</p><table><thead><tr><th>类型</th><th>说明</th><th>示例图</th></tr></thead><tbody><tr><td>GRAY_ALG</td><td>基于灰度公式将图片灰度化</td><td><img src="`+e+'" alt="" loading="lazy"></td></tr><tr><td>GRAY_AVG</td><td>基于灰度均值将图片灰度化</td><td><img src="'+o+'" alt="" loading="lazy"></td></tr><tr><td>PIXEL_COLOR_AVG</td><td>图片像素化时，采用颜色均值</td><td><img src="'+i+'" alt="" loading="lazy"></td></tr><tr><td>CHAR_COLOR</td><td>图片转字符图</td><td><img src="'+l+'" alt="" loading="lazy"></td></tr><tr><td>CHAR_GRAY</td><td>图片转灰度字符图</td><td><img src="'+u+'" alt="" loading="lazy"></td></tr><tr><td>CHAR_BLACK</td><td>图片转纯黑白字符，常用于svg输出</td><td><img src="'+d+'" alt="" loading="lazy"></td></tr><tr><td>CHAR_SEQ_SCALE_UP</td><td>图片转文字图，根据字符顺序绘画，且支持按比例放大</td><td><img src="'+k+'" alt="" loading="lazy"></td></tr><tr><td>BLACK_CHAR_BORDER</td><td>只针对有颜色的边框进行渲染，常用于文本输出</td><td><img src="'+r+'" alt="" loading="lazy"></td></tr></tbody></table><h2 id="_3-使用示例" tabindex="-1"><a class="header-anchor" href="#_3-使用示例" aria-hidden="true">#</a> 3. 使用示例</h2>',9),w={href:"https://github.com/liuyueyi/quick-media/blob/master/plugins/image-plugin/src/test/java/com/github/hui/quick/plugin/test/pixel/BasicPixelTest.java",target:"_blank",rel:"noopener noreferrer"},A=c(`<p>根据实际需要，选择不同的处理枚举，如</p><h3 id="case1-希望对图片进行灰度处理时" tabindex="-1"><a class="header-anchor" href="#case1-希望对图片进行灰度处理时" aria-hidden="true">#</a> case1: 希望对图片进行灰度处理时：</h3><ul><li><code>PixelStyleEnum.GRAY_ALG</code></li><li><code>PixelStyleEnum.GRAY_AVG</code></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGrayAlg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://pic.rmb.bdstatic.com/bjh/down/cbfbc690d1ea27f3afbe3733f49d7dac.jpeg&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">GRAY_ALG</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/gray_alg.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGrayAvg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://pic.rmb.bdstatic.com/bjh/down/cbfbc690d1ea27f3afbe3733f49d7dac.jpeg&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">GRAY_AVG</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/gray_avg.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出如下:</p><table><thead><tr><th>样式</th><th>原图</th><th>转换图</th></tr></thead><tbody><tr><td>GRAY_ALG</td><td><img src="`+s+'" alt="" loading="lazy"></td><td><img src="'+e+'" alt="" loading="lazy"></td></tr><tr><td>GRAY_AVG</td><td><img src="'+s+'" alt="" loading="lazy"></td><td><img src="'+o+`" alt="" loading="lazy"></td></tr></tbody></table><h3 id="case2-希望将图片转换像素块图时" tabindex="-1"><a class="header-anchor" href="#case2-希望将图片转换像素块图时" aria-hidden="true">#</a> case2: 希望将图片转换像素块图时</h3><p>主要需要设置 <code>blockSize</code> 参数，将其设置&gt;1，此时可使用的转换类型方式为</p><ul><li><code>PixelStyleEnum.GRAY_ALG</code></li><li><code>PixelStyleEnum.GRAY_AVG</code></li><li><code>PixelStyleEnum.PIXEL_COLOR_AVG</code></li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPixelColorAvg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://pic.rmb.bdstatic.com/bjh/down/cbfbc690d1ea27f3afbe3733f49d7dac.jpeg&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">PIXEL_COLOR_AVG</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/pixelColorAvg.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出如下:</p><table><thead><tr><th>样式</th><th>原图</th><th>转换图</th></tr></thead><tbody><tr><td>PIXEL_COLOR_AVG</td><td><img src="`+s+'" alt="" loading="lazy"></td><td><img src="'+i+`" alt="" loading="lazy"></td></tr></tbody></table><h3 id="case3-将图转换为字符图时" tabindex="-1"><a class="header-anchor" href="#case3-将图转换为字符图时" aria-hidden="true">#</a> case3: 将图转换为字符图时</h3><p>可以输出图片也可以输出svg，常用的转换类型方式为</p><ul><li><code>PixelStyleEnum.CHAR_COLOR</code></li><li><code>PixelStyleEnum.CHAR_GRAY</code></li><li><code>PixelStyleEnum.CHAR_BLACK</code>：常用于输出svg字符图、二维字符数组</li><li><code>PixelStyleEnum.CHAR_SEQ_SCALE_UP</code>: 它于上面三个的区别在于根据传入的文字进行顺序渲染，且对输出图片会按照文字的大小进行等比例放大、以确保文字可见</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCharColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://pic.rmb.bdstatic.com/bjh/down/cbfbc690d1ea27f3afbe3733f49d7dac.jpeg&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">CHAR_COLOR</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/charColor.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCharGray</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://pic.rmb.bdstatic.com/bjh/down/cbfbc690d1ea27f3afbe3733f49d7dac.jpeg&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">CHAR_GRAY</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/charGray.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCharBlack</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
<span class="token comment">//            String img = &quot;https://pic.rmb.bdstatic.com/bjh/down/cbfbc690d1ea27f3afbe3733f49d7dac.jpeg&quot;;</span>
        <span class="token comment">// 使用抠图后的人物图</span>
        <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;pixel/nezha.png&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setRate</span><span class="token punctuation">(</span><span class="token number">0.6</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setChars</span><span class="token punctuation">(</span><span class="token string">&quot;$@B%8&amp;WM#*oahkbdpqwmZO0QLCJUYXzcvunxrjft/\\\\|()1{}[]?-_+~&lt;&gt;i!lI;:,\\\\\\&quot;^\`&#39;  &quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">CHAR_BLACK</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">asSvgFile</span><span class="token punctuation">(</span><span class="token string">&quot;d://tmp/CharGray.svg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/**
 * 使用文字来组装图片
 *
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCharPicture</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;pixel/nezha-mini.png&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setChars</span><span class="token punctuation">(</span><span class="token string">&quot;哪吒魔童降世&quot;</span><span class="token punctuation">)</span>
            <span class="token comment">// 字体文件下载地址: https://www.diyiziti.com/Builder/446</span>
            <span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">&quot;font/潇洒体.ttf&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFontSize</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span>color <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>color <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token class-name">Color</span> rc <span class="token operator">=</span> <span class="token class-name">ColorUtil</span><span class="token punctuation">.</span><span class="token function">int2color</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token comment">// 将白色当作背景色</span>
                <span class="token keyword">return</span> <span class="token punctuation">(</span>rc<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">245</span> <span class="token operator">&amp;&amp;</span> rc<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">245</span> <span class="token operator">&amp;&amp;</span> rc<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">245</span><span class="token punctuation">)</span> <span class="token operator">||</span> rc<span class="token punctuation">.</span><span class="token function">getAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">CHAR_SEQ_SCALE_UP</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/charSeq.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;---- over ---&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>样式</th><th>原图</th><th>转换图</th></tr></thead><tbody><tr><td>CHAR_COLOR</td><td><img src="`+s+'" alt="" loading="lazy"></td><td><img src="'+l+'" alt="" loading="lazy"></td></tr><tr><td>CHAR_GRAY</td><td><img src="'+s+'" alt="" loading="lazy"></td><td><img src="'+u+'" alt="" loading="lazy"></td></tr><tr><td>CHAR_BLACK</td><td><img src="'+s+'" alt="" loading="lazy"></td><td><img src="'+d+'" alt="" loading="lazy"></td></tr><tr><td>CHAR_SEQ_SCALE_UP</td><td><img src="'+h+'" alt="" loading="lazy"></td><td><img src="'+k+`" alt="" loading="lazy"></td></tr></tbody></table><h3 id="case4-输出字符画" tabindex="-1"><a class="header-anchor" href="#case4-输出字符画" aria-hidden="true">#</a> case4: 输出字符画</h3><p>将图片转换为ascii或者特定的字符画，可用</p><ul><li><code>PixelStyleEnum.CHAR_BLACK</code></li><li><code>PixelStyleEnum.BLACK_CHAR_BORDER</code>: 与上面的区别在于它希望输入的是线图</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCharBorder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;pixel/slake.jpeg&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> out <span class="token operator">=</span> <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setChars</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBgChar</span><span class="token punctuation">(</span><span class="token char">&#39; &#39;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">BLACK_CHAR_BORDER</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                    <span class="token annotation punctuation">@Override</span>
                    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> color<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>color <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>

                        <span class="token class-name">Color</span> rc <span class="token operator">=</span> <span class="token class-name">ColorUtil</span><span class="token punctuation">.</span><span class="token function">int2color</span><span class="token punctuation">(</span>color<span class="token punctuation">)</span><span class="token punctuation">;</span>
                        <span class="token keyword">if</span> <span class="token punctuation">(</span>rc<span class="token punctuation">.</span><span class="token function">getAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                            <span class="token comment">// 透明的直接过滤掉</span>
                            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                        <span class="token punctuation">}</span>
                        <span class="token comment">// 将白色当作背景色</span>
                        <span class="token keyword">return</span> rc<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">40</span> <span class="token operator">&amp;&amp;</span> rc<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">40</span> <span class="token operator">&amp;&amp;</span> rc<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">40</span><span class="token punctuation">;</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">asChars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> t <span class="token operator">:</span> out<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>样式</th><th>原图</th><th>转换图</th></tr></thead><tbody><tr><td>BLACK_CHAR_BORDER</td><td><img src="`+f+'" width="600px"></td><td><img src="'+r+`" alt="" loading="lazy"></td></tr></tbody></table><h3 id="case5-gif图转换" tabindex="-1"><a class="header-anchor" href="#case5-gif图转换" aria-hidden="true">#</a> case5: GIF图转换</h3><p>上面除了给出对静态图的处理之外，我们还额外支持gif图的转换，需要注意的是gif图时，只支持输出为gif，不支持输出svg格式</p><p>基本使用姿势与前面一致，区别在于传入的图片为gif格式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGif</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://img.zcool.cn/community/01565859a4ea21a801211d251e1cbc.gif&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">CHAR_COLOR</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setRate</span><span class="token punctuation">(</span><span class="token number">2d</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFontStyle</span><span class="token punctuation">(</span><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">BOLD</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/outV1.gif&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testGifV2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://img.zcool.cn/community/01565859a4ea21a801211d251e1cbc.gif&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBlockSize</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">CHAR_SEQ_SCALE_UP</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setChars</span><span class="token punctuation">(</span><span class="token string">&quot;小黄人&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBgPredicate</span><span class="token punctuation">(</span>c <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                <span class="token class-name">Color</span> color <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">return</span> color<span class="token punctuation">.</span><span class="token function">getAlpha</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">||</span> <span class="token punctuation">(</span>color<span class="token punctuation">.</span><span class="token function">getBlue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">245</span> <span class="token operator">&amp;&amp;</span> color<span class="token punctuation">.</span><span class="token function">getRed</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">245</span> <span class="token operator">&amp;&amp;</span> color<span class="token punctuation">.</span><span class="token function">getGreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">245</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFontStyle</span><span class="token punctuation">(</span><span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">BOLD</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asFile</span><span class="token punctuation">(</span><span class="token string">&quot;/tmp/outV2.gif&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><table><thead><tr><th>原图</th><th>v1</th><th>v2</th></tr></thead><tbody><tr><td><img src="`+y+'" alt="" loading="lazy"></td><td><img src="'+_+'" alt="" loading="lazy"></td><td><img src="'+x+'" alt="" loading="lazy"></td></tr></tbody></table>',27);function P(R,E){const t=g("ExternalLinkIcon");return v(),b("div",null,[n("blockquote",null,[n("p",null,[a("本文为 "),n("a",C,[a("image-plugin"),p(t)]),a(" 中土拍你像素化相关操作的使用参考示例")])]),q,n("blockquote",null,[n("p",null,[a("所有的使用姿势，可以在源码对应的test工程中获取 "),n("a",w,[a("BasicPixelTest.java"),p(t)])])]),A])}const B=m(S,[["render",P],["__file","10.图片像素化使用示例.html.vue"]]);export{B as default};
