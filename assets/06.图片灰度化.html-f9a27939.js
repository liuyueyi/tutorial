import{_ as e,V as o,W as c,X as n,Y as s,Z as p,a0 as t,F as l}from"./framework-23f3cf9b.js";const u="/tutorial/imgs/211112/00.jpg",i={},k=t(`<p>本文通过一个简单的实例，演示如何使用java来实现图片灰度化处理，主要借助下面两种策略来处理颜色</p><p><strong>灰度化公式</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>avgColor <span class="token operator">=</span> red <span class="token operator">*</span> <span class="token number">0.299f</span> <span class="token operator">+</span> green <span class="token operator">*</span> <span class="token number">0.587f</span> <span class="token operator">+</span> blue <span class="token operator">*</span> <span class="token number">0.114f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>均值方式</strong></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>avgColor <span class="token operator">=</span> <span class="token punctuation">(</span>red <span class="token operator">+</span> green <span class="token operator">+</span> blue<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3.0f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>基于上面两种方式，我们要实现一个图片灰度化的处理，无非就是获取图片的每个像素点的颜色，然后计算avgColor，再用新的颜色填充即可</p><p>一个基础的实现演示如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Color</span> <span class="token function">avg1</span><span class="token punctuation">(</span><span class="token keyword">int</span> red<span class="token punctuation">,</span> <span class="token keyword">int</span> green<span class="token punctuation">,</span> <span class="token keyword">int</span> blue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> avg <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span>red <span class="token operator">*</span> <span class="token number">0.299f</span> <span class="token operator">+</span> green <span class="token operator">*</span> <span class="token number">0.587f</span> <span class="token operator">+</span> blue <span class="token operator">*</span> <span class="token number">0.114f</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>avg<span class="token punctuation">,</span> avg<span class="token punctuation">,</span> avg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">private</span> <span class="token class-name">Color</span> <span class="token function">avg2</span><span class="token punctuation">(</span><span class="token keyword">int</span> red<span class="token punctuation">,</span> <span class="token keyword">int</span> green<span class="token punctuation">,</span> <span class="token keyword">int</span> blue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> avg <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span>red <span class="token operator">+</span> green <span class="token operator">+</span> blue<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>avg<span class="token punctuation">,</span> avg<span class="token punctuation">,</span> avg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testRender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> file <span class="token operator">=</span> <span class="token string">&quot;http://i0.download.fd.52shubiao.com/t_960x600/g1/M00/10/17/oYYBAFWvR5-IeXHuAAd5kPb8eSgAACm0QF50xIAB3mo414.jpg&quot;</span><span class="token punctuation">;</span>
    <span class="token comment">// 从网络上下载图片</span>
    <span class="token class-name">BufferedImage</span> img <span class="token operator">=</span> <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span><span class="token class-name">FileReadUtil</span><span class="token punctuation">.</span><span class="token function">getStreamByFileName</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">int</span> w <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> h <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 创建新的灰度图片画板</span>
    <span class="token class-name">BufferedImage</span> gray <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> img<span class="token punctuation">.</span><span class="token function">getType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> gray<span class="token punctuation">.</span><span class="token function">createGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> x <span class="token operator">&lt;</span> w<span class="token punctuation">;</span> x<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> y<span class="token operator">&lt;</span>h<span class="token punctuation">;</span> y<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// 针对像素点的颜色灰度化之后，重新绘制</span>
            <span class="token keyword">int</span> color <span class="token operator">=</span> img<span class="token punctuation">.</span><span class="token function">getRGB</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">Color</span> grayColor <span class="token operator">=</span> <span class="token function">avg1</span><span class="token punctuation">(</span><span class="token punctuation">(</span>color <span class="token operator">&amp;</span> <span class="token number">0xff0000</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>color <span class="token operator">&amp;</span> <span class="token number">0xff00</span><span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">8</span><span class="token punctuation">,</span> color <span class="token operator">&amp;</span> <span class="token number">0x0000ff</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>grayColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
            g2d<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">&quot;渲染完成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>生成原图与灰度图的对比如下</p><figure><img src="`+u+'" alt="输出图" tabindex="0" loading="lazy"><figcaption>输出图</figcaption></figure><p>注意上面的实现，其中加载网络图片的具体实现，之前的博文有介绍，有兴趣的小伙伴可以参考: 封装一个根据路径获取文件资源的工具类</p>',11),r={href:"https://github.com/liuyueyi/quick-media",target:"_blank",rel:"noopener noreferrer"},d=t(`<p>使用这个项目的 image-plugins 之后，生成一个灰度图就很简单了</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testImgGrayAlg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> img <span class="token operator">=</span> <span class="token string">&quot;https://c-ssl.duitang.com/uploads/item/201809/16/20180916175034_Gr2hk.thumb.1000_0.jpeg&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">BufferedImage</span> out <span class="token operator">=</span> <span class="token class-name">ImgPixelWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setSourceImg</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setPixelType</span><span class="token punctuation">(</span><span class="token class-name">PixelStyleEnum</span><span class="token punctuation">.</span><span class="token constant">GRAY_ALG</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">asBufferedImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>out<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2),m=n("thead",null,[n("tr",null,[n("th",null,"原图"),n("th",null,"svg图")])],-1),v={href:"/imgs/column/quick-media/image/20180916175034_Gr2hk.jpeg",target:"_blank",rel:"noopener noreferrer"},g={href:"/imgs/column/quick-media/image/gray.png",target:"_blank",rel:"noopener noreferrer"};function b(f,y){const a=l("ExternalLinkIcon");return o(),c("div",null,[k,n("p",null,[s("此外介绍一个更好用的姿势，直接使用开源项目 "),n("a",r,[s("quick-media/image-plugins"),p(a)]),s(" 来实现灰度处理")]),d,n("table",null,[m,n("tbody",null,[n("tr",null,[n("td",null,[n("a",v,[s("20180916175034_Gr2hk.jpeg"),p(a)])]),n("td",null,[n("a",g,[p(a)])])])])])])}const h=e(i,[["render",b],["__file","06.图片灰度化.html.vue"]]);export{h as default};
