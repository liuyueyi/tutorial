import{_ as p,V as e,W as o,X as c,Y as n,Z as s,$ as t,a1 as l,F as u}from"./framework-094145d2.js";const i={},k=n("p",null,"本文将作为es系列第二篇，在前文项目搭建的基础上，先来看一下es的基本操作姿势，如何实现CURD",-1),r=l(`<h2 id="i-项目搭建" tabindex="-1"><a class="header-anchor" href="#i-项目搭建" aria-hidden="true">#</a> I. 项目搭建</h2><h3 id="_1-项目依赖" tabindex="-1"><a class="header-anchor" href="#_1-项目依赖" aria-hidden="true">#</a> 1. 项目依赖</h3><p>本项目借助<code>SpringBoot 2.2.1.RELEASE</code> + <code>maven 3.5.3</code> + <code>IDEA</code>进行开发</p><p>开一个web服务用于测试</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.elasticsearch.client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>elasticsearch-rest-high-level-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-配置信息" tabindex="-1"><a class="header-anchor" href="#_2-配置信息" aria-hidden="true">#</a> 2. 配置信息</h3><p>配置文件application.yml，注意下面的配置信息，下面采用的是由我们自己来解析配置的方式</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">elasticsearch</span><span class="token punctuation">:</span>
  <span class="token key atrule">host</span><span class="token punctuation">:</span> localhost
  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9200</span>
  <span class="token key atrule">user</span><span class="token punctuation">:</span> elastic
  <span class="token key atrule">pwd</span><span class="token punctuation">:</span> test123
  <span class="token key atrule">connTimeout</span><span class="token punctuation">:</span> <span class="token number">3000</span>
  <span class="token key atrule">socketTimeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
  <span class="token key atrule">connectionRequestTimeout</span><span class="token punctuation">:</span> <span class="token number">500</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ii-curd实例" tabindex="-1"><a class="header-anchor" href="#ii-curd实例" aria-hidden="true">#</a> II. CURD实例</h2><h3 id="_1-配置" tabindex="-1"><a class="header-anchor" href="#_1-配置" aria-hidden="true">#</a> 1. 配置</h3><p>注意，本文介绍的es是添加了权限验证，因此我们在于es进行交互时，需要在请求头中携带验证信息，注意下面的实现姿势</p><p>读取配置，初始化RestHighLevelClient，和前文介绍的差不多</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Getter</span>
<span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ElasticsearchConfiguration</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.host}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> host<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.port}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> port<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.connTimeout}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> connTimeout<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.socketTimeout}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> socketTimeout<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.connectionRequestTimeout}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> connectionRequestTimeout<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.user}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> user<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${elasticsearch.pwd}&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> pwd<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Bean</span><span class="token punctuation">(</span>destroyMethod <span class="token operator">=</span> <span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> name <span class="token operator">=</span> <span class="token string">&quot;client&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">RestHighLevelClient</span> <span class="token function">initRestClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">RestClientBuilder</span> builder <span class="token operator">=</span> <span class="token class-name">RestClient</span><span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">HttpHost</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> port<span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">setRequestConfigCallback</span><span class="token punctuation">(</span>requestConfigBuilder <span class="token operator">-&gt;</span> requestConfigBuilder
                        <span class="token punctuation">.</span><span class="token function">setConnectTimeout</span><span class="token punctuation">(</span>connTimeout<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setSocketTimeout</span><span class="token punctuation">(</span>socketTimeout<span class="token punctuation">)</span>
                        <span class="token punctuation">.</span><span class="token function">setConnectionRequestTimeout</span><span class="token punctuation">(</span>connectionRequestTimeout<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestHighLevelClient</span><span class="token punctuation">(</span>builder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestOptions</span> <span class="token function">requestOptions</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> auth <span class="token operator">=</span> <span class="token string">&quot;Basic &quot;</span> <span class="token operator">+</span> <span class="token class-name">Base64Utils</span><span class="token punctuation">.</span><span class="token function">encodeToString</span><span class="token punctuation">(</span><span class="token punctuation">(</span>user <span class="token operator">+</span> <span class="token string">&quot;:&quot;</span> <span class="token operator">+</span> pwd<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">RequestOptions<span class="token punctuation">.</span>Builder</span> build <span class="token operator">=</span> <span class="token class-name">RequestOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT</span><span class="token punctuation">.</span><span class="token function">toBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        build<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">,</span> auth<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> build<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-添加数据" tabindex="-1"><a class="header-anchor" href="#_2-添加数据" aria-hidden="true">#</a> 2. 添加数据</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Component</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">BasicCurdDemo</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RestHighLevelClient</span> client<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">RequestOptions</span> requestOptions<span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token constant">TEST_ID</span> <span class="token operator">=</span> <span class="token string">&quot;11123-33345-66543-55231&quot;</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * 新增数据
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addDoc</span><span class="token punctuation">(</span><span class="token class-name">String</span> indexName<span class="token punctuation">,</span> <span class="token class-name">Object</span> obj<span class="token punctuation">,</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token comment">// 指定索引</span>
        <span class="token class-name">IndexRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">IndexRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;_doc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 文档内容，source传参，第一种时按照 fieldName, fieldValue 成对的方式传入；下面是采用json串 + 指定ContentType的方式传入</span>
        request<span class="token punctuation">.</span><span class="token function">source</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 指定特殊的id，不指定时自动生成id</span>
        request<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">IndexResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;添加数据返回结果: &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加数据，注意是利用 <code>IndexRequest</code> 来构建请求对象，添加文档时有几个注意事项</p><ul><li><code>request.source()</code> : 具体需要上传的文档，就是通过它挂上去的，我们这里采用的是json方式</li><li><code>request.id()</code>: 如果上传的文档需要指定id，则可以使用它；若未指定，则表明自动生成id</li></ul><p>发起请求: <code>client.index()</code></p><h3 id="_3-查询数据" tabindex="-1"><a class="header-anchor" href="#_3-查询数据" aria-hidden="true">#</a> 3. 查询数据</h3><p>这里先介绍一个基础的根据id进行查询的实例case，更多的查询姿势后面会详细介绍</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 查询结果
 *
 * <span class="token keyword">@param</span> <span class="token parameter">indexName</span>
 * <span class="token keyword">@param</span> <span class="token parameter">id</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">Exception</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> indexName<span class="token punctuation">,</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">GetRequest</span> getRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GetRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">,</span> <span class="token string">&quot;_doc&quot;</span><span class="token punctuation">,</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">GetResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>getRequest<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;查询结果:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-增量更新数据" tabindex="-1"><a class="header-anchor" href="#_3-增量更新数据" aria-hidden="true">#</a> 3. 增量更新数据</h3><p>根据主键进行更新文档，如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 更新文档，根据id进行更新，增量更新，存在的字段，覆盖；新增的字段，插入；旧字段，保留
 *
 * <span class="token keyword">@param</span> <span class="token parameter">indexName</span>
 * <span class="token keyword">@param</span> <span class="token parameter">docId</span>
 * <span class="token keyword">@param</span> <span class="token parameter">obj</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateDoc</span><span class="token punctuation">(</span><span class="token class-name">String</span> indexName<span class="token punctuation">,</span> <span class="token class-name">String</span> docId<span class="token punctuation">,</span> <span class="token class-name">Object</span> obj<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">UpdateRequest</span> updateRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    updateRequest<span class="token punctuation">.</span><span class="token function">index</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    updateRequest<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;_doc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    updateRequest<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>docId<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 设置数据</span>
    updateRequest<span class="token punctuation">.</span><span class="token function">doc</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">XContentType</span><span class="token punctuation">.</span><span class="token constant">JSON</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">UpdateResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>updateRequest<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;更新数据返回：&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong></p><ul><li>上面的实现属于增量更新策略</li><li>即：新传的文档，若key之前已经存在，则覆盖更新；若之前不存在，则插入；之前文档中未被覆盖的数据依然保留</li></ul><h3 id="_4-全量更新" tabindex="-1"><a class="header-anchor" href="#_4-全量更新" aria-hidden="true">#</a> 4. 全量更新</h3><p>另外一个根据条件进行更新的使用case如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 条件更新
 *
 * <span class="token keyword">@param</span> <span class="token parameter">indexName</span>
 * <span class="token keyword">@param</span> <span class="token parameter">query</span>
 * <span class="token keyword">@param</span> <span class="token parameter">data</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateByCondition</span><span class="token punctuation">(</span><span class="token class-name">String</span> indexName<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> query<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> data<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">UpdateByQueryRequest</span> updateRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateByQueryRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> query<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">QueryBuilder</span> queryBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TermQueryBuilder</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        updateRequest<span class="token punctuation">.</span><span class="token function">setQuery</span><span class="token punctuation">(</span>queryBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// 更新值脚本，精确的更新方式</span>
    <span class="token comment">// ctx._source[&#39;xx&#39;].add(&#39;新增字段&#39;)</span>
    <span class="token comment">// 条件判定 if(ctx._source.addr == &#39;hubei&#39;) { ctx._source.addr = &#39;wuhan&#39;;}</span>
    <span class="token class-name">String</span> source <span class="token operator">=</span> <span class="token string">&quot;ctx._source.name=&#39;1hui&#39;;&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Script</span> script <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Script</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
    updateRequest<span class="token punctuation">.</span><span class="token function">setScript</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">BulkByScrollResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">updateByQuery</span><span class="token punctuation">(</span>updateRequest<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;条件更新返回: &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">get</span><span class="token punctuation">(</span>indexName<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;0---------------------0&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 采用全量覆盖式更新，直接使用data中的数据，覆盖之前的文档内容</span>
    source <span class="token operator">=</span> <span class="token string">&quot;ctx._source=params&quot;</span><span class="token punctuation">;</span>
    script <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Script</span><span class="token punctuation">(</span><span class="token class-name">ScriptType</span><span class="token punctuation">.</span><span class="token constant">INLINE</span><span class="token punctuation">,</span> <span class="token string">&quot;painless&quot;</span><span class="token punctuation">,</span> source<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">;</span>
    updateRequest<span class="token punctuation">.</span><span class="token function">setScript</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span>
    response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">updateByQuery</span><span class="token punctuation">(</span>updateRequest<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;条件更新返回: &quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">get</span><span class="token punctuation">(</span>indexName<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-删除数据" tabindex="-1"><a class="header-anchor" href="#_5-删除数据" aria-hidden="true">#</a> 5. 删除数据</h3><p>直接根据id进行删除</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 根据id进行删除
 *
 * <span class="token keyword">@param</span> <span class="token parameter">indexName</span>
 * <span class="token keyword">@param</span> <span class="token parameter">id</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">delete</span><span class="token punctuation">(</span><span class="token class-name">String</span> indexName<span class="token punctuation">,</span> <span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">DeleteRequest</span> deleteRequest <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    deleteRequest<span class="token punctuation">.</span><span class="token function">type</span><span class="token punctuation">(</span><span class="token string">&quot;_doc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    deleteRequest<span class="token punctuation">.</span><span class="token function">id</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">DeleteResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>deleteRequest<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;删除后返回&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6-条件删除数据" tabindex="-1"><a class="header-anchor" href="#_6-条件删除数据" aria-hidden="true">#</a> 6. 条件删除数据</h3><p>根据条件进行匹配删除</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 条件删除
 *
 * <span class="token keyword">@param</span> <span class="token parameter">indexName</span>
 * <span class="token keyword">@param</span> <span class="token parameter">query</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteByQuery</span><span class="token punctuation">(</span><span class="token class-name">String</span> indexName<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> query<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">DeleteByQueryRequest</span> request <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DeleteByQueryRequest</span><span class="token punctuation">(</span>indexName<span class="token punctuation">)</span><span class="token punctuation">;</span>
    request<span class="token punctuation">.</span><span class="token function">types</span><span class="token punctuation">(</span><span class="token string">&quot;_doc&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map<span class="token punctuation">.</span>Entry</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> entry <span class="token operator">:</span> query<span class="token punctuation">.</span><span class="token function">entrySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">QueryBuilder</span> queryBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TermQueryBuilder</span><span class="token punctuation">(</span>entry<span class="token punctuation">.</span><span class="token function">getKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> entry<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        request<span class="token punctuation">.</span><span class="token function">setQuery</span><span class="token punctuation">(</span>queryBuilder<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token class-name">BulkByScrollResponse</span> response <span class="token operator">=</span> client<span class="token punctuation">.</span><span class="token function">deleteByQuery</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> requestOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;条件删除:&quot;</span> <span class="token operator">+</span> response<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">get</span><span class="token punctuation">(</span>indexName<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-测试case" tabindex="-1"><a class="header-anchor" href="#_7-测试case" aria-hidden="true">#</a> 7. 测试case</h3><p>写一个测试demo，将上面的case都跑一遍</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testOperate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">String</span> index <span class="token operator">=</span> <span class="token string">&quot;basic_demo&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> doc <span class="token operator">=</span> <span class="token function">newMap</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;一灰灰&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token string">&quot;skills&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;python&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 新增</span>
    <span class="token function">addDoc</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> doc<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 查询</span>
    <span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 更新</span>
    doc<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    doc<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;一灰灰blog&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    doc<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;addr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hubei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">updateDoc</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">,</span> doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token function">updateByCondition</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token function">newMap</span><span class="token punctuation">(</span><span class="token string">&quot;addr&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;hubei&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">newMap</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yihuihui&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;site&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;https://hhui.top&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">get</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 删除文档</span>
    <span class="token function">delete</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token constant">TEST_ID</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> <span class="token function">newMap</span><span class="token punctuation">(</span><span class="token class-name">K</span> k<span class="token punctuation">,</span> <span class="token class-name">V</span> v<span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> kv<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">K</span><span class="token punctuation">,</span> <span class="token class-name">V</span><span class="token punctuation">&gt;</span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> kv<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">K</span><span class="token punctuation">)</span> kv<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token class-name">V</span><span class="token punctuation">)</span> kv<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> map<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 1. 添加数据</span>
添加数据返回结果: IndexResponse<span class="token punctuation">[</span>index<span class="token operator">=</span>basic_demo,type<span class="token operator">=</span>_doc,id<span class="token operator">=</span><span class="token number">11123</span>-33345-66543-55231,version<span class="token operator">=</span><span class="token number">1</span>,result<span class="token operator">=</span>created,seqNo<span class="token operator">=</span><span class="token number">34</span>,primaryTerm<span class="token operator">=</span><span class="token number">4</span>,shards<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">&quot;total&quot;</span>:2,<span class="token string">&quot;successful&quot;</span>:1,<span class="token string">&quot;failed&quot;</span>:0<span class="token punctuation">}</span><span class="token punctuation">]</span>

<span class="token comment"># 2. 查询数据</span>
查询结果:<span class="token punctuation">{</span><span class="token string">&quot;_index&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;basic_demo&quot;</span>,<span class="token string">&quot;_type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;_doc&quot;</span>,<span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;11123-33345-66543-55231&quot;</span>,<span class="token string">&quot;_version&quot;</span>:1,<span class="token string">&quot;_seq_no&quot;</span>:34,<span class="token string">&quot;_primary_term&quot;</span>:4,<span class="token string">&quot;found&quot;</span>:true,<span class="token string">&quot;_source&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;skills&quot;</span>:<span class="token punctuation">[</span><span class="token string">&quot;java&quot;</span>,<span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>,<span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;一灰灰&quot;</span>,<span class="token string">&quot;age&quot;</span>:10<span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># 3. 增量更新</span>
<span class="token number">2022</span>-03-28 <span class="token number">19</span>:56:08.781  WARN <span class="token number">18332</span> --- <span class="token punctuation">[</span>/O dispatcher <span class="token number">1</span><span class="token punctuation">]</span> org.elasticsearch.client.RestClient      <span class="token builtin class-name">:</span> request <span class="token punctuation">[</span>POST http://localhost:9200/basic_demo/_doc/11123-33345-66543-55231/_update?timeout<span class="token operator">=</span>1m<span class="token punctuation">]</span> returned <span class="token number">1</span> warnings: <span class="token punctuation">[</span><span class="token number">299</span> Elasticsearch-7.12.0-78722783c38caa25a70982b5b042074cde5d3b3a <span class="token string">&quot;[types removal] Specifying types in document update requests is deprecated, use the endpoint /{index}/_update/{id} instead.&quot;</span><span class="token punctuation">]</span>
更新数据返回：UpdateResponse<span class="token punctuation">[</span>index<span class="token operator">=</span>basic_demo,type<span class="token operator">=</span>_doc,id<span class="token operator">=</span><span class="token number">11123</span>-33345-66543-55231,version<span class="token operator">=</span><span class="token number">2</span>,seqNo<span class="token operator">=</span><span class="token number">35</span>,primaryTerm<span class="token operator">=</span><span class="token number">4</span>,result<span class="token operator">=</span>updated,shards<span class="token operator">=</span>ShardInfo<span class="token punctuation">{</span>total<span class="token operator">=</span><span class="token number">2</span>, <span class="token assign-left variable">successful</span><span class="token operator">=</span><span class="token number">1</span>, <span class="token assign-left variable">failures</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
查询结果:<span class="token punctuation">{</span><span class="token string">&quot;_index&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;basic_demo&quot;</span>,<span class="token string">&quot;_type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;_doc&quot;</span>,<span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;11123-33345-66543-55231&quot;</span>,<span class="token string">&quot;_version&quot;</span>:2,<span class="token string">&quot;_seq_no&quot;</span>:35,<span class="token string">&quot;_primary_term&quot;</span>:4,<span class="token string">&quot;found&quot;</span>:true,<span class="token string">&quot;_source&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;skills&quot;</span>:<span class="token punctuation">[</span><span class="token string">&quot;java&quot;</span>,<span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>,<span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;一灰灰blog&quot;</span>,<span class="token string">&quot;age&quot;</span>:10,<span class="token string">&quot;addr&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;hubei&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>

<span class="token comment"># 4. 全量条件更新</span>
条件更新返回: BulkByScrollResponse<span class="token punctuation">[</span>took<span class="token operator">=</span>970ms,timed_out<span class="token operator">=</span>false,sliceId<span class="token operator">=</span>null,updated<span class="token operator">=</span><span class="token number">1</span>,created<span class="token operator">=</span><span class="token number">0</span>,deleted<span class="token operator">=</span><span class="token number">0</span>,batches<span class="token operator">=</span><span class="token number">1</span>,versionConflicts<span class="token operator">=</span><span class="token number">0</span>,noops<span class="token operator">=</span><span class="token number">0</span>,retries<span class="token operator">=</span><span class="token number">0</span>,throttledUntil<span class="token operator">=</span>0s,bulk_failures<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>,search_failures<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
查询结果:<span class="token punctuation">{</span><span class="token string">&quot;_index&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;basic_demo&quot;</span>,<span class="token string">&quot;_type&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;_doc&quot;</span>,<span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;11123-33345-66543-55231&quot;</span>,<span class="token string">&quot;_version&quot;</span>:3,<span class="token string">&quot;_seq_no&quot;</span>:36,<span class="token string">&quot;_primary_term&quot;</span>:4,<span class="token string">&quot;found&quot;</span>:true,<span class="token string">&quot;_source&quot;</span>:<span class="token punctuation">{</span><span class="token string">&quot;skills&quot;</span>:<span class="token punctuation">[</span><span class="token string">&quot;java&quot;</span>,<span class="token string">&quot;python&quot;</span><span class="token punctuation">]</span>,<span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;1hui&quot;</span>,<span class="token string">&quot;addr&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;hubei&quot;</span>,<span class="token string">&quot;age&quot;</span>:10<span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="iii-不能错过的源码和相关知识点" tabindex="-1"><a class="header-anchor" href="#iii-不能错过的源码和相关知识点" aria-hidden="true">#</a> III. 不能错过的源码和相关知识点</h2><h3 id="_0-项目" tabindex="-1"><a class="header-anchor" href="#_0-项目" aria-hidden="true">#</a> 0. 项目</h3><p><strong>系列博文</strong></p>`,43),d={href:"https://mp.weixin.qq.com/s?__biz=MzU3MTAzNTMzMQ==&mid=2247487412&idx=1&sn=9d8afecd4dc4dcc2a016a89709a4cf34&chksm=fce71418cb909d0e59e4599a4460642614104c3d254b691165f0f3630f198458073e908714a3&token=1796894300&lang=zh_CN#rd",target:"_blank",rel:"noopener noreferrer"},m=n("p",null,[n("strong",null,"源码")],-1),v={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/142-search-es",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"_1-微信公众号-一灰灰blog",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-微信公众号-一灰灰blog","aria-hidden":"true"},"#"),s(" 1. 微信公众号: 一灰灰Blog")],-1),q=n("p",null,"尽信书则不如，以上内容，纯属一家之言，因个人能力有限，难免有疏漏和错误之处，如发现bug或者有更好的建议，欢迎批评指正，不吝感激",-1),h=n("p",null,"下面一灰灰的个人博客，记录所有学习和工作中的博文，欢迎大家前去逛逛",-1),y={href:"https://blog.hhui.top",target:"_blank",rel:"noopener noreferrer"},f={href:"http://spring.hhui.top",target:"_blank",rel:"noopener noreferrer"},_=n("figure",null,[n("img",{src:"https://spring.hhui.top/spring-blog/imgs/info/info.png",alt:"一灰灰blog",tabindex:"0",loading:"lazy"}),n("figcaption",null,"一灰灰blog")],-1);function w(x,S){const a=u("ExternalLinkIcon");return e(),o("div",null,[k,c(" more "),r,n("ul",null,[n("li",null,[n("a",d,[s("SpringBoot系列之ES基本项目搭建"),t(a)])])]),m,n("ul",null,[n("li",null,[s("工程："),n("a",v,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("源码："),n("a",b,[s("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/142-search-es"),t(a)])])]),g,q,h,n("ul",null,[n("li",null,[s("一灰灰Blog个人博客 "),n("a",y,[s("https://blog.hhui.top"),t(a)])]),n("li",null,[s("一灰灰Blog-Spring专题博客 "),n("a",f,[s("http://spring.hhui.top"),t(a)])])]),_])}const T=p(i,[["render",w],["__file","02.220331-SpringBoot系列之ES文档基本操作CURD实例演示.html.vue"]]);export{T as default};
