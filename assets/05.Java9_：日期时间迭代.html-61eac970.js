const a=JSON.parse('{"key":"v-306659d7","path":"/java/jdk/jdk8_/05.Java9_%EF%BC%9A%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E8%BF%AD%E4%BB%A3.html","title":"05.Java 9+：日期时间的焕新升级，你跟上了吗？","lang":"zh-CN","frontmatter":{"order":5,"title":"05.Java 9+：日期时间的焕新升级，你跟上了吗？","tag":["jdk","AIGen"],"category":["Java"],"date":"2025-02-14T13:58:09.000Z","keywords":["Java","JDK9","日期"],"description":"嘿，Java开发者们！是不是每次看到日期时间处理就头大？别担心，Java 9+来帮你搞定！今天咱们就聊聊Java日期时间处理的前世今生，顺便看看Java 9+给我们带来了哪些惊喜。 1. Java日期时间处理的前世今生 想象一下，你正在开发一个电商系统，突然老板说：“嘿，我们的订单日期处理太慢了，能不能优化一下？”你心里想：“这不就是Java的老毛病吗？”别急，Java 9+已经帮你解决了这些问题。 在Java早期，我们主要靠java.util.Date和java.util.Calendar来处理日期时间。但这两个家伙实在是让人头疼。Date类是可变的，多线程环境下很容易出问题；它的很多方法还被弃用了，用起来特别不方便。Calendar类虽然功能多一些，但API设计太繁琐，代码写起来又长又容易出错。","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/java/jdk/jdk8_/05.Java9_%EF%BC%9A%E6%97%A5%E6%9C%9F%E6%97%B6%E9%97%B4%E8%BF%AD%E4%BB%A3.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"05.Java 9+：日期时间的焕新升级，你跟上了吗？"}],["meta",{"property":"og:description","content":"嘿，Java开发者们！是不是每次看到日期时间处理就头大？别担心，Java 9+来帮你搞定！今天咱们就聊聊Java日期时间处理的前世今生，顺便看看Java 9+给我们带来了哪些惊喜。 1. Java日期时间处理的前世今生 想象一下，你正在开发一个电商系统，突然老板说：“嘿，我们的订单日期处理太慢了，能不能优化一下？”你心里想：“这不就是Java的老毛病吗？”别急，Java 9+已经帮你解决了这些问题。 在Java早期，我们主要靠java.util.Date和java.util.Calendar来处理日期时间。但这两个家伙实在是让人头疼。Date类是可变的，多线程环境下很容易出问题；它的很多方法还被弃用了，用起来特别不方便。Calendar类虽然功能多一些，但API设计太繁琐，代码写起来又长又容易出错。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-14T10:52:18.000Z"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"AIGen"}],["meta",{"property":"article:published_time","content":"2025-02-14T13:58:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-14T10:52:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05.Java 9+：日期时间的焕新升级，你跟上了吗？\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-14T13:58:09.000Z\\",\\"dateModified\\":\\"2025-02-14T10:52:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"1. Java日期时间处理的前世今生","slug":"_1-java日期时间处理的前世今生","link":"#_1-java日期时间处理的前世今生","children":[]},{"level":2,"title":"2. Java 8日期时间API基础回顾","slug":"_2-java-8日期时间api基础回顾","link":"#_2-java-8日期时间api基础回顾","children":[{"level":3,"title":"2.1 核心类介绍","slug":"_2-1-核心类介绍","link":"#_2-1-核心类介绍","children":[]},{"level":3,"title":"2.2 常用操作示例","slug":"_2-2-常用操作示例","link":"#_2-2-常用操作示例","children":[]}]},{"level":2,"title":"3. Java 9+对日期时间的优化亮点","slug":"_3-java-9-对日期时间的优化亮点","link":"#_3-java-9-对日期时间的优化亮点","children":[{"level":3,"title":"3.1 Java9 新增方法增强功能","slug":"_3-1-java9-新增方法增强功能","link":"#_3-1-java9-新增方法增强功能","children":[]},{"level":3,"title":"3.2 Java 16中的 InstantSource 接口","slug":"_3-2-java-16中的-instantsource-接口","link":"#_3-2-java-16中的-instantsource-接口","children":[]},{"level":3,"title":"3.3 性能与内存优化","slug":"_3-3-性能与内存优化","link":"#_3-3-性能与内存优化","children":[]},{"level":3,"title":"3.4 时区处理的改进","slug":"_3-4-时区处理的改进","link":"#_3-4-时区处理的改进","children":[]}]},{"level":2,"title":"4. 实际应用案例与代码演示","slug":"_4-实际应用案例与代码演示","link":"#_4-实际应用案例与代码演示","children":[{"level":3,"title":"4.1 业务场景中的优化体现","slug":"_4-1-业务场景中的优化体现","link":"#_4-1-业务场景中的优化体现","children":[]},{"level":3,"title":"4.2 性能对比","slug":"_4-2-性能对比","link":"#_4-2-性能对比","children":[]}]},{"level":2,"title":"5. 开发者如何平滑过渡与升级","slug":"_5-开发者如何平滑过渡与升级","link":"#_5-开发者如何平滑过渡与升级","children":[{"level":3,"title":"5.1 升级步骤与注意事项","slug":"_5-1-升级步骤与注意事项","link":"#_5-1-升级步骤与注意事项","children":[]},{"level":3,"title":"5.2 学习资源推荐","slug":"_5-2-学习资源推荐","link":"#_5-2-学习资源推荐","children":[]}]},{"level":2,"title":"6. 总结与展望","slug":"_6-总结与展望","link":"#_6-总结与展望","children":[]}],"git":{"createdTime":1739530338000,"updatedTime":1739530338000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":8.98,"words":2693},"filePathRelative":"java/jdk/jdk8+/05.Java9+：日期时间迭代.md","localizedDate":"2025年2月14日","excerpt":"<p>嘿，Java开发者们！是不是每次看到日期时间处理就头大？别担心，Java 9+来帮你搞定！今天咱们就聊聊Java日期时间处理的前世今生，顺便看看Java 9+给我们带来了哪些惊喜。</p>\\n<h2> 1. Java日期时间处理的前世今生</h2>\\n<p>想象一下，你正在开发一个电商系统，突然老板说：“嘿，我们的订单日期处理太慢了，能不能优化一下？”你心里想：“这不就是Java的老毛病吗？”别急，Java 9+已经帮你解决了这些问题。</p>\\n<p>在Java早期，我们主要靠<code>java.util.Date</code>和<code>java.util.Calendar</code>来处理日期时间。但这两个家伙实在是让人头疼。<code>Date</code>类是可变的，多线程环境下很容易出问题；它的很多方法还被弃用了，用起来特别不方便。<code>Calendar</code>类虽然功能多一些，但API设计太繁琐，代码写起来又长又容易出错。</p>","copyright":{},"autoDesc":true}');export{a as data};
