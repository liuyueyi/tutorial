const e=JSON.parse('{"key":"v-3091368a","path":"/spring/springai/%E8%BF%9B%E9%98%B6%E7%AF%87/A05.%E4%BD%BF%E7%94%A8LangGraph4J%E5%AE%9E%E7%8E%B0Agent%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9.html","title":"05.使用LangGraph4J实现Agent路由选择","lang":"zh-CN","frontmatter":{"order":5,"title":"05.使用LangGraph4J实现Agent路由选择","tag":["Spring","SpringAI"],"category":["SpringAI"],"date":"2025-08-12T11:15:07.000Z","keywords":"SpringAI","description":"05.使用LangGraph4J实现Agent路由选择 在 创建一个Langgraph4j示例工程 这一篇文章中，我们介绍了如何创建一个 LangGraph4j 的示例工程； 在上文中介绍到 LangGraph4j 时，就提到了它有一个重要的特性，就是可以定义循环图，使不同的组件（代理、工具或自定义逻辑）能够以有状态的方式进行交互","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/spring/springai/%E8%BF%9B%E9%98%B6%E7%AF%87/A05.%E4%BD%BF%E7%94%A8LangGraph4J%E5%AE%9E%E7%8E%B0Agent%E8%B7%AF%E7%94%B1%E9%80%89%E6%8B%A9.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"05.使用LangGraph4J实现Agent路由选择"}],["meta",{"property":"og:description","content":"05.使用LangGraph4J实现Agent路由选择 在 创建一个Langgraph4j示例工程 这一篇文章中，我们介绍了如何创建一个 LangGraph4j 的示例工程； 在上文中介绍到 LangGraph4j 时，就提到了它有一个重要的特性，就是可以定义循环图，使不同的组件（代理、工具或自定义逻辑）能够以有状态的方式进行交互"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-13T04:04:22.000Z"}],["meta",{"property":"article:tag","content":"Spring"}],["meta",{"property":"article:tag","content":"SpringAI"}],["meta",{"property":"article:published_time","content":"2025-08-12T11:15:07.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-13T04:04:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"05.使用LangGraph4J实现Agent路由选择\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-08-12T11:15:07.000Z\\",\\"dateModified\\":\\"2025-08-13T04:04:22.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"一、项目创建","slug":"一、项目创建","link":"#一、项目创建","children":[{"level":3,"title":"1. 创建LangGraph4j + SpringAI项目","slug":"_1-创建langgraph4j-springai项目","link":"#_1-创建langgraph4j-springai项目","children":[]},{"level":3,"title":"2. 配置大模型密钥","slug":"_2-配置大模型密钥","link":"#_2-配置大模型密钥","children":[]}]},{"level":2,"title":"二、创建一个地点的旅游推荐Agent","slug":"二、创建一个地点的旅游推荐agent","link":"#二、创建一个地点的旅游推荐agent","children":[{"level":3,"title":"1. 工作流程","slug":"_1-工作流程","link":"#_1-工作流程","children":[]},{"level":3,"title":"2. 基本概念科普","slug":"_2-基本概念科普","link":"#_2-基本概念科普","children":[]},{"level":3,"title":"3. Node实现","slug":"_3-node实现","link":"#_3-node实现","children":[]},{"level":3,"title":"4. 节点连接","slug":"_4-节点连接","link":"#_4-节点连接","children":[]},{"level":3,"title":"5. 输出PlantUML","slug":"_5-输出plantuml","link":"#_5-输出plantuml","children":[]},{"level":3,"title":"6. Agent封装","slug":"_6-agent封装","link":"#_6-agent封装","children":[]},{"level":3,"title":"7. 测试验证","slug":"_7-测试验证","link":"#_7-测试验证","children":[]}]},{"level":2,"title":"三、小结","slug":"三、小结","link":"#三、小结","children":[]}],"git":{"createdTime":1755057862000,"updatedTime":1755057862000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":10.07,"words":3020},"filePathRelative":"spring/springai/进阶篇/A05.使用LangGraph4J实现Agent路由选择.md","localizedDate":"2025年8月12日","excerpt":"<h1> 05.使用LangGraph4J实现Agent路由选择</h1>\\n<p>在 <a href=\\"/tutorial/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/14.%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AALanggraph4j%E5%AE%9E%E4%BE%8B%E5%B7%A5%E7%A8%8B.html\\" target=\\"blank\\">创建一个Langgraph4j示例工程</a> 这一篇文章中，我们介绍了如何创建一个 LangGraph4j 的示例工程；</p>\\n<p>在上文中介绍到 <code>LangGraph4j</code> 时，就提到了它有一个重要的特性，就是可以定义循环图，使不同的组件（代理、工具或自定义逻辑）能够以有状态的方式进行交互</p>","copyright":{},"autoDesc":true}');export{e as data};
