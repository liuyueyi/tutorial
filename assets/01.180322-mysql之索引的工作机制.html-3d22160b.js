import{_ as e,V as p,W as o,X as t,Y as s,Z as a,$ as l,a1 as r,F as c}from"./framework-094145d2.js";const i="/tutorial/imgs/180322/180322_INDEX1.png",k="/tutorial/imgs/180322/180322_INDEX2.png",u={},d=s("h1",{id:"mysql之高性能索引",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mysql之高性能索引","aria-hidden":"true"},"#"),a(" mysql之高性能索引")],-1),b=s("p",null,"当db的量达到一定数量级之后，每次进行全表扫描效率就会很低，因此一个常见的方案是建立一些必要的索引作为优化手段，那么问题就来了：",-1),m=s("ul",null,[s("li",null,"那么什么是索引呢？"),s("li",null,"索引的实现原理是怎样的？"),s("li",null,"我们通常说的聚集索引，非聚集索引的区别是什么？"),s("li",null,"如何创建和使用索引呢？")],-1),v=r('<h2 id="i-索引介绍" tabindex="-1"><a class="header-anchor" href="#i-索引介绍" aria-hidden="true">#</a> I. 索引介绍</h2><p>MySQL官方对索引的定义为：索引是帮助MySQL高效获取数据的数据结构。简而言之,索引是数据结构</p><h3 id="_1-几种树的结构" tabindex="-1"><a class="header-anchor" href="#_1-几种树的结构" aria-hidden="true">#</a> 1. 几种树的结构</h3><h4 id="a-b-树" tabindex="-1"><a class="header-anchor" href="#a-b-树" aria-hidden="true">#</a> a. B+树</h4><p>单来说就是一种为磁盘或者其他存储设备而设计的一种平衡二叉树,在B+tree中所有记录都按照key的大小存放在叶子结点上，各叶子结点直接用指针连接</p><h4 id="b-二叉树" tabindex="-1"><a class="header-anchor" href="#b-二叉树" aria-hidden="true">#</a> b. 二叉树</h4><p>二叉树的规则是父节点大于左孩子节点，小于右孩子节点</p><h4 id="c-平衡二叉树" tabindex="-1"><a class="header-anchor" href="#c-平衡二叉树" aria-hidden="true">#</a> c. 平衡二叉树</h4><p>首先是一个二叉树，但是要求任意一个节点的左右孩子节点的高度差不大于1</p><h4 id="d-b树" tabindex="-1"><a class="header-anchor" href="#d-b树" aria-hidden="true">#</a> d. B树</h4><p>首先是一个平衡二叉树，但是又要求每个叶子节点到根节点的距离相等</p><p>那么B树和B+树的区别是什么呢？</p><ul><li>B+树的叶子节点可以包含一个指针，指向另一个叶子节点</li><li>B+树键值的拷贝存在非叶子节点；键值+记录存储在叶子节点</li></ul><h3 id="_2-innodb引擎之b-树" tabindex="-1"><a class="header-anchor" href="#_2-innodb引擎之b-树" aria-hidden="true">#</a> 2. InnoDB引擎之B+树</h3><p>mysql的InnnoDB引擎采用的B+树，只有叶子节点存储对应的数据列，有以下好处</p><ul><li>叶子结点通常包含较多的记录，具有较高的扇出性(可理解为每个节点对应的下层节点较多)，因此树的高度较低(3~4)，而树的高度也决定了磁盘IO的次数，从而影响了数据库的性能。一般情况下，IO次数与树的高度是一致的</li><li>对于组合索引，B+tree索引是按照索引列名(从左到右的顺序)进行顺序排序的，因此可以将随机IO转换为顺序IO提升IO效率;并且可以支持order by \\group等排序需求;适合范围查询</li></ul><h3 id="_3-hash索引" tabindex="-1"><a class="header-anchor" href="#_3-hash索引" aria-hidden="true">#</a> 3. hash索引</h3><p>hash索引，相比较于B树而言，不需要从根节点到叶子节点的遍历，可以一次定位到位置，查询效率更高，但缺点也很明显</p><ul><li>仅能满足&quot;=&quot;,&quot;IN&quot;和&quot;&lt;=&gt;&quot;查询，不能使用范围查询 <ul><li>因为是通过hash值进行计算，所以只能精确查询，hash值是没什么规律的，不能保证顺序和原来一致，所以范围查询不行</li></ul></li><li>无法进行排序 <ul><li>原因同上</li></ul></li><li>不支持部分索引 <ul><li>hash值的计算，是根据完整的几个索引列计算，如果少了其中一个乃至几个，这个hash值就没法计算了</li></ul></li><li>hash碰撞</li></ul><h3 id="_4-聚集索引与非聚集索引" tabindex="-1"><a class="header-anchor" href="#_4-聚集索引与非聚集索引" aria-hidden="true">#</a> 4. 聚集索引与非聚集索引</h3><h4 id="a-聚集索引" tabindex="-1"><a class="header-anchor" href="#a-聚集索引" aria-hidden="true">#</a> a. 聚集索引</h4><p>InnoDB的数据文件本身就是索引文件，B+Tree的叶子节点上的data就是数据本身，key为主键，非叶子节点存放&lt;key,address&gt;，address就是下一层的地址</p><p>聚簇索引的结构图:</p><figure><img src="'+i+'" alt="数据结构" tabindex="0" loading="lazy"><figcaption>数据结构</figcaption></figure><h4 id="b-非聚集索引" tabindex="-1"><a class="header-anchor" href="#b-非聚集索引" aria-hidden="true">#</a> b. 非聚集索引</h4><p>非聚簇索引，叶子节点上的data是主键(即聚簇索引的主键，所以聚簇索引的key，不能过长)。为什么存放的主键，而不是记录所在地址呢，理由相当简单，因为记录所在地址并不能保证一定不会变，但主键可以保证</p><p>非聚簇索引结构图：</p><figure><img src="'+k+`" alt="数据结构" tabindex="0" loading="lazy"><figcaption>数据结构</figcaption></figure><p>从非聚集索引的结构上，可以看出这种场景下的定位流程：</p><ul><li>先通过非聚集索引，定位到对应的叶子节点，找到对应的主键</li><li>根据上面找到的主键，在聚集索引中，定位到对应的叶子节点（获取数据）</li></ul><h3 id="_5-索引的优点" tabindex="-1"><a class="header-anchor" href="#_5-索引的优点" aria-hidden="true">#</a> 5. 索引的优点</h3><ul><li>避免全表扫描（当走不到索引时，就只能一个一个的去匹配；如果走索引，则可以根据B树来定位）</li><li>使用索引可以帮助服务器避免排序或者临时表 （叶子节点上的指针，可以有效的支持范围查询；此外叶子节点本身就是根据key进行排序的）</li><li>索引将随机IO变成顺序IO</li></ul><h3 id="_6-适用范围" tabindex="-1"><a class="header-anchor" href="#_6-适用范围" aria-hidden="true">#</a> 6. 适用范围</h3><p>索引并不是适用于任何情况。对于中型、大型表适用。对于小型表全表扫描更高效。而对于特大型表，考虑”分区”技术</p><h2 id="ii-索引的使用原则" tabindex="-1"><a class="header-anchor" href="#ii-索引的使用原则" aria-hidden="true">#</a> II. 索引的使用原则</h2><p>一般我们在创建表的时候，需要指定primary key, 这样就可以确定聚集索引了，那么如何添加非聚集索引呢？</p><h3 id="_1-索引的几个语法" tabindex="-1"><a class="header-anchor" href="#_1-索引的几个语法" aria-hidden="true">#</a> 1. 索引的几个语法</h3><p><strong>创建索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 创建索引</span>
<span class="token keyword">create</span> <span class="token keyword">index</span> <span class="token identifier"><span class="token punctuation">\`</span>idx_img<span class="token punctuation">\`</span></span> <span class="token keyword">on</span> newuser<span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>img<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 查看</span>
<span class="token keyword">show</span> <span class="token keyword">create</span> <span class="token keyword">table</span> newuser\\G<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show create table newuser<span class="token punctuation">\\</span>G
*************************** <span class="token number">1</span>. row ***************************
       Table: newuser
Create Table: CREATE TABLE <span class="token variable"><span class="token variable">\`</span>newuser<span class="token variable">\`</span></span> <span class="token punctuation">(</span>
  <span class="token variable"><span class="token variable">\`</span>userId<span class="token variable">\`</span></span> bigint<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> NOT NULL AUTO_INCREMENT COMMENT <span class="token string">&#39;用户id&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>username<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户登录名&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>nickname<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户昵称&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>password<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户登录密码 &amp; 密文根式&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>address<span class="token variable">\`</span></span> text COMMENT <span class="token string">&#39;用户地址&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>email<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户邮箱&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>phone<span class="token variable">\`</span></span> bigint<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;0&#39;</span> COMMENT <span class="token string">&#39;用户手机号&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>img<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户头像&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>extra<span class="token variable">\`</span></span> text,
  <span class="token variable"><span class="token variable">\`</span>isDeleted<span class="token variable">\`</span></span> tinyint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> unsigned NOT NULL DEFAULT <span class="token string">&#39;0&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>created<span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  <span class="token variable"><span class="token variable">\`</span>updated<span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>userId<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>idx_username<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>username<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>idx_nickname<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>nickname<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>idx_email<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>email<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>idx_phone<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>phone<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>idx_img<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>img<span class="token variable">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token assign-left variable">ENGINE</span><span class="token operator">=</span>InnoDB <span class="token assign-left variable">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">3</span> DEFAULT <span class="token assign-left variable">CHARSET</span><span class="token operator">=</span>utf8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>另一种常见的添加索引方式</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> newuser <span class="token keyword">add</span> <span class="token keyword">index</span> <span class="token identifier"><span class="token punctuation">\`</span>idx_extra_img<span class="token punctuation">\`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>isDeleted<span class="token punctuation">\`</span></span><span class="token punctuation">,</span> <span class="token identifier"><span class="token punctuation">\`</span>img<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">-- 查看索引</span>
<span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> newuser<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出结果</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>+---------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
<span class="token operator">|</span> Table   <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name      <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> Null <span class="token operator">|</span> Index_type <span class="token operator">|</span> Comment <span class="token operator">|</span> Index_comment <span class="token operator">|</span>
+---------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> PRIMARY       <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> userId      <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_username  <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> username    <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span> YES  <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_nickname  <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> nickname    <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_email     <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> email       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_phone     <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> phone       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_img       <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> img         <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span> YES  <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_extra_img <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> isDeleted   <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_extra_img <span class="token operator">|</span>            <span class="token number">2</span> <span class="token operator">|</span> img         <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span> YES  <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
+---------+------------+---------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>删除索引</strong></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">drop</span> <span class="token keyword">index</span> <span class="token identifier"><span class="token punctuation">\`</span>idx_extra_img<span class="token punctuation">\`</span></span> <span class="token keyword">on</span> newuser<span class="token punctuation">;</span>
<span class="token keyword">drop</span> <span class="token keyword">index</span> <span class="token identifier"><span class="token punctuation">\`</span>idx_img<span class="token punctuation">\`</span></span> <span class="token keyword">on</span> newuser<span class="token punctuation">;</span>

<span class="token comment">-- 查看索引</span>
<span class="token keyword">show</span> <span class="token keyword">index</span> <span class="token keyword">from</span> newuser<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show index from newuser<span class="token punctuation">;</span>
+---------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
<span class="token operator">|</span> Table   <span class="token operator">|</span> Non_unique <span class="token operator">|</span> Key_name     <span class="token operator">|</span> Seq_in_index <span class="token operator">|</span> Column_name <span class="token operator">|</span> Collation <span class="token operator">|</span> Cardinality <span class="token operator">|</span> Sub_part <span class="token operator">|</span> Packed <span class="token operator">|</span> Null <span class="token operator">|</span> Index_type <span class="token operator">|</span> Comment <span class="token operator">|</span> Index_comment <span class="token operator">|</span>
+---------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">0</span> <span class="token operator">|</span> PRIMARY      <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> userId      <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_username <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> username    <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span> YES  <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_nickname <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> nickname    <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_email    <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> email       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
<span class="token operator">|</span> newuser <span class="token operator">|</span>          <span class="token number">1</span> <span class="token operator">|</span> idx_phone    <span class="token operator">|</span>            <span class="token number">1</span> <span class="token operator">|</span> phone       <span class="token operator">|</span> A         <span class="token operator">|</span>           <span class="token number">3</span> <span class="token operator">|</span>     NULL <span class="token operator">|</span> NULL   <span class="token operator">|</span>      <span class="token operator">|</span> BTREE      <span class="token operator">|</span>         <span class="token operator">|</span>               <span class="token operator">|</span>
+---------+------------+--------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>强制走索引的一种方式</strong></p><p>语法： <code>select * from table force index(索引) where xxx</code></p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> newuser <span class="token keyword">force</span> <span class="token keyword">index</span><span class="token punctuation">(</span><span class="token keyword">PRIMARY</span><span class="token punctuation">)</span> <span class="token keyword">where</span> userId <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- +----+-------------+---------+-------+---------------+---------+---------+------+------+-------------+</span>
<span class="token comment">-- | id | select_type | table   | type  | possible_keys | key     | key_len | ref  | rows | Extra       |</span>
<span class="token comment">-- +----+-------------+---------+-------+---------------+---------+---------+------+------+-------------+</span>
<span class="token comment">-- |  1 | SIMPLE      | newuser | range | PRIMARY       | PRIMARY | 8       | NULL |    4 | Using where |</span>
<span class="token comment">-- +----+-------------+---------+-------+---------------+---------+---------+------+------+-------------+</span>


<span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> newuser <span class="token keyword">where</span> userId <span class="token operator">not</span> <span class="token operator">in</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
<span class="token comment">-- | id | select_type | table   | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
<span class="token comment">-- |  1 | SIMPLE      | newuser | ALL  | PRIMARY       | NULL | NULL    | NULL |    3 | Using where |</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-索引使用规则" tabindex="-1"><a class="header-anchor" href="#_2-索引使用规则" aria-hidden="true">#</a> 2. 索引使用规则</h3><p>当一个表内有多个索引时，如何判断自己的sql是否走到了索引，走的是哪个索引呢？</p><p>可以通过 <code>explain</code> 关键字来进行辅助判断，当然在实际写sql时，我们也有必要了解下索引匹配的规则，避免设置了一些冗余的索引，或者写出一些走不到索引的sql</p><p>测试的表结构如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>*************************** <span class="token number">1</span>. row ***************************
       Table: newuser
Create Table: CREATE TABLE <span class="token variable"><span class="token variable">\`</span>newuser<span class="token variable">\`</span></span> <span class="token punctuation">(</span>
  <span class="token variable"><span class="token variable">\`</span>userId<span class="token variable">\`</span></span> bigint<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> NOT NULL AUTO_INCREMENT COMMENT <span class="token string">&#39;用户id&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>username<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户登录名&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>nickname<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户昵称&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>password<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户登录密码 &amp; 密文根式&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>address<span class="token variable">\`</span></span> text COMMENT <span class="token string">&#39;用户地址&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>email<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户邮箱&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>phone<span class="token variable">\`</span></span> bigint<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> NOT NULL DEFAULT <span class="token string">&#39;0&#39;</span> COMMENT <span class="token string">&#39;用户手机号&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>img<span class="token variable">\`</span></span> varchar<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span> DEFAULT <span class="token string">&#39;&#39;</span> COMMENT <span class="token string">&#39;用户头像&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>extra<span class="token variable">\`</span></span> text,
  <span class="token variable"><span class="token variable">\`</span>isDeleted<span class="token variable">\`</span></span> tinyint<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> unsigned NOT NULL DEFAULT <span class="token string">&#39;0&#39;</span>,
  <span class="token variable"><span class="token variable">\`</span>created<span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  <span class="token variable"><span class="token variable">\`</span>updated<span class="token variable">\`</span></span> int<span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span> NOT NULL,
  PRIMARY KEY <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>userId<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>idx_username<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>username<span class="token variable">\`</span></span><span class="token punctuation">)</span>,
  KEY <span class="token variable"><span class="token variable">\`</span>idx_nickname_email_phone<span class="token variable">\`</span></span> <span class="token punctuation">(</span><span class="token variable"><span class="token variable">\`</span>nickname<span class="token variable">\`</span></span>,<span class="token variable"><span class="token variable">\`</span>email<span class="token variable">\`</span></span>,<span class="token variable"><span class="token variable">\`</span>phone<span class="token variable">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token assign-left variable">ENGINE</span><span class="token operator">=</span>InnoDB <span class="token assign-left variable">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">3</span> DEFAULT <span class="token assign-left variable">CHARSET</span><span class="token operator">=</span>utf8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="a-最左前缀匹配原则" tabindex="-1"><a class="header-anchor" href="#a-最左前缀匹配原则" aria-hidden="true">#</a> a. 最左前缀匹配原则</h4><p>这个主要是针对多列非聚簇索引而言，比如有下面这个索引<code>idx_nickname_email_phone(nickname, email, phone)</code>, nickname 定义在email的前面，那么下面这几个语句对应的情况是</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 走索引</span>
<span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> newuser <span class="token keyword">where</span> nickname<span class="token operator">=</span><span class="token string">&#39;小灰灰&#39;</span> <span class="token operator">and</span> email<span class="token operator">=</span><span class="token string">&#39;greywolf@xxx.com&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 1. 匹配nickname，可以走索引</span>
<span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> newuser <span class="token keyword">where</span> nickname<span class="token operator">=</span><span class="token string">&#39;小灰灰&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 输出:</span>
<span class="token comment">-- +----+-------------+---------+------+--------------------+--------------------+---------+-------+------+-----------------------+</span>
<span class="token comment">-- | id | select_type | table   | type | possible_keys      | key                | key_len | ref   | rows | Extra                 |</span>
<span class="token comment">-- +----+-------------+---------+------+--------------------+--------------------+---------+-------+------+-----------------------+</span>
<span class="token comment">-- |  1 | SIMPLE      | newuser | ref  | idx_nickname_email | idx_nickname_email | 92      | const |    1 | Using index condition |</span>
<span class="token comment">-- +----+-------------+---------+------+--------------------+--------------------+---------+-------+------+-----------------------+</span>


<span class="token comment">-- 2. 虽然匹配了email, 但是不满足最左匹配，不走索引</span>
<span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> newuser <span class="token keyword">where</span> email<span class="token operator">=</span><span class="token string">&#39;greywolf@xxx.com&#39;</span><span class="token punctuation">;</span>

<span class="token comment">-- 输出</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
<span class="token comment">-- | id | select_type | table   | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
<span class="token comment">-- |  1 | SIMPLE      | newuser | ALL  | NULL          | NULL | NULL    | NULL |    3 | Using where |</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-无法跳过某个列使用后续索引列" tabindex="-1"><a class="header-anchor" href="#b-无法跳过某个列使用后续索引列" aria-hidden="true">#</a> b. 无法跳过某个列使用后续索引列</h4><p>即对索引<code>idx_nickname_email_phone(nickname, email, phone)</code>, 如果你的sql中，只有 nickname 和 phone, 那么phone走不到索引，因为不能跳过中间的email走索引</p><h4 id="c-范围查询后的列无法使用索引" tabindex="-1"><a class="header-anchor" href="#c-范围查询后的列无法使用索引" aria-hidden="true">#</a> c. 范围查询后的列无法使用索引</h4><p>如 &gt;, &lt;, between, like这种就是范围查询，下面的sql中，email 和phone都无法走到索引，因为nickname使用了范围查询</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> newuser <span class="token keyword">where</span> nickname <span class="token operator">like</span> <span class="token string">&#39;小灰%&#39;</span> <span class="token operator">and</span> email<span class="token operator">=</span><span class="token string">&#39;greywolf@xxx.com&#39;</span> <span class="token operator">and</span> phone<span class="token operator">=</span><span class="token number">15971112301</span> <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="d-列作为函数参数或表达式的一部分" tabindex="-1"><a class="header-anchor" href="#d-列作为函数参数或表达式的一部分" aria-hidden="true">#</a> d. 列作为函数参数或表达式的一部分</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 走不到索引</span>
<span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> newuser <span class="token keyword">where</span> userId<span class="token operator">+</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">limit</span> <span class="token number">1</span><span class="token punctuation">;</span>


<span class="token comment">-- 输出</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
<span class="token comment">-- | id | select_type | table   | type | possible_keys | key  | key_len | ref  | rows | Extra       |</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
<span class="token comment">-- |  1 | SIMPLE      | newuser | ALL  | NULL          | NULL | NULL    | NULL |    3 | Using where |</span>
<span class="token comment">-- +----+-------------+---------+------+---------------+------+---------+------+------+-------------+</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-索引缺点" tabindex="-1"><a class="header-anchor" href="#_3-索引缺点" aria-hidden="true">#</a> 3. 索引缺点</h3><ul><li>虽然索引大大提高了查询速度，同时却会降低更新表的速度，如对表进行INSERT、UPDATE和DELETE。因为更新表时，MySQL不仅要保存数据，还要保存一下索引文件。</li><li>建立索引会占用磁盘空间的索引文件。一般情况这个问题不太严重，但如果你在一个大表上创建了多种组合索引，索引文件的会膨胀很快。</li></ul><h3 id="_4-注意事项" tabindex="-1"><a class="header-anchor" href="#_4-注意事项" aria-hidden="true">#</a> 4. 注意事项</h3><ul><li>索引不会包含有NULL值的列</li><li>使用短索引</li><li>索引列排序 <ul><li>MySQL查询只使用一个索引，因此如果where子句中已经使用了索引的话，那么order by中的列是不会使用索引的。因此数据库默认排序可以符合要求的情况下不要使用排序操作；尽量不要包含多个列的排序，如果需要最好给这些列创建复合索引</li></ul></li><li>like语句操作 <ul><li>一般情况下不鼓励使用like操作，如果非使用不可，如何使用也是一个问题。like “%aaa%” 不会使用索引而like “aaa%”可以使用索引</li></ul></li><li>不要在列上进行运算 <ul><li>select * from users where YEAR(adddate)&lt;2007;</li></ul></li><li>尽量不使用NOT IN和&lt;&gt;操作</li></ul><h3 id="_5-sql使用策略" tabindex="-1"><a class="header-anchor" href="#_5-sql使用策略" aria-hidden="true">#</a> 5. sql使用策略</h3><h4 id="a-使用一个sql代替多个sql" tabindex="-1"><a class="header-anchor" href="#a-使用一个sql代替多个sql" aria-hidden="true">#</a> a. 使用一个sql代替多个sql</h4><p>通常建议是使用一个sql来替代多个sql的查询</p><p>当然若sql执行效率很低，或者出现delete等导致锁表的操作时，也可以采用多个sql，避免阻塞其他sql</p><h4 id="b-分解关联查询" tabindex="-1"><a class="header-anchor" href="#b-分解关联查询" aria-hidden="true">#</a> b. 分解关联查询</h4><p>将关联join尽量放在应用中来做，尽量执行小而简单的的sql</p><ul><li>分解后的sql简单，利于使用mysql缓存</li><li>执行分解后的sql，减少锁竞争</li><li>更好的扩展性和维护性（sql简单）</li><li>关联sql使用的是内嵌循环算法nestloop，而应用中可以使用hashmap等结构处理数据，效率更高</li></ul><h4 id="c-count" tabindex="-1"><a class="header-anchor" href="#c-count" aria-hidden="true">#</a> c. count</h4><ul><li>count(*) 统计的是行数</li><li>count(列名) 统计的是列不为null的数量</li></ul><h4 id="d-limit" tabindex="-1"><a class="header-anchor" href="#d-limit" aria-hidden="true">#</a> d. limit</h4><ul><li>limit offset, size; 分页查询，会查询出 offset + size 条数据，获取最后的size条数据</li></ul><p>如 <code>limit 1000, 20</code> 则会查询出满足条件的1020条数据，然后将最后的20个返回，所以尽量避免大翻页查询</p><h4 id="e-union" tabindex="-1"><a class="header-anchor" href="#e-union" aria-hidden="true">#</a> e. union</h4><p>需要将where、order by、limit 这些限制放入到每个子查询，才能重分提升效率。另外如非必须，尽量使用Union all，因为union会给每个子查询的临时表加入distinct，对每个临时表做唯一性检查，效率较差。</p><h3 id="_6-mysql使用查询" tabindex="-1"><a class="header-anchor" href="#_6-mysql使用查询" aria-hidden="true">#</a> 6. mysql使用查询</h3><h4 id="a-查看索引" tabindex="-1"><a class="header-anchor" href="#a-查看索引" aria-hidden="true">#</a> a. 查看索引</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token comment">-- 单位为GB</span>
<span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>index_length<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39; GB&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;Total Index Size&#39;</span>
<span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span> <span class="token keyword">WHERE</span> table_schema <span class="token operator">LIKE</span> <span class="token string">&#39;databaseName&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-查看表空间" tabindex="-1"><a class="header-anchor" href="#b-查看表空间" aria-hidden="true">#</a> b. 查看表空间</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token function">SUM</span><span class="token punctuation">(</span>data_length<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39; GB&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;Total Data Size&#39;</span>   
<span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span> <span class="token keyword">WHERE</span> table_schema <span class="token operator">LIKE</span> <span class="token string">&#39;databaseName&#39;</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-查看数据库中所有表的信息" tabindex="-1"><a class="header-anchor" href="#c-查看数据库中所有表的信息" aria-hidden="true">#</a> c. 查看数据库中所有表的信息</h4><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span>table_schema<span class="token punctuation">,</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">,</span>table_name<span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;Table Name&#39;</span><span class="token punctuation">,</span>   
    table_rows <span class="token keyword">AS</span> <span class="token string">&#39;Number of Rows&#39;</span><span class="token punctuation">,</span>   
    CONCAT<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span>data_length<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39; G&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;Data Size&#39;</span><span class="token punctuation">,</span>   
    CONCAT<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span>index_length<span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39; G&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> <span class="token string">&#39;Index Size&#39;</span> <span class="token punctuation">,</span>   
    CONCAT<span class="token punctuation">(</span><span class="token function">ROUND</span><span class="token punctuation">(</span><span class="token punctuation">(</span>data_length<span class="token operator">+</span>index_length<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token operator">*</span><span class="token number">1024</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39; G&#39;</span><span class="token punctuation">)</span> <span class="token keyword">AS</span><span class="token string">&#39;Total&#39;</span>  
<span class="token keyword">FROM</span> information_schema<span class="token punctuation">.</span><span class="token keyword">TABLES</span>   
<span class="token keyword">WHERE</span> table_schema <span class="token operator">LIKE</span> <span class="token string">&#39;databaseName&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h3>`,93),h={href:"http://blog.csdn.net/lemon89/article/details/50193891",target:"_blank",rel:"noopener noreferrer"};function g(_,L){const n=c("ExternalLinkIcon");return p(),o("div",null,[d,b,m,t(" more "),v,s("ul",null,[s("li",null,[s("a",h,[a("深入理解Mysql——高性能索引与高性能SQL"),l(n)])])])])}const x=e(u,[["render",g],["__file","01.180322-mysql之索引的工作机制.html.vue"]]);export{x as default};
