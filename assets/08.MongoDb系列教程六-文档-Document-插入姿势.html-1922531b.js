import{_ as n,V as a,W as t,X as e,Y as s,a1 as p}from"./framework-094145d2.js";const i="/tutorial/imgs/200326/05.jpg",o={},d=s("p",null,"文档相当于关系数据库中数据行，也是我们最关心的数据本身；以BSON格式存储（和json区别不大）",-1),c=s("p",null,"我们通常所说业务开发者的CURD四大技能，在mongodb中，就是针对Document而言，接下来我们先看一下文档的新增使用姿势",-1),l=p(`<h3 id="_1-基本语法" tabindex="-1"><a class="header-anchor" href="#_1-基本语法" aria-hidden="true">#</a> 1. 基本语法</h3><p>插入语法： <code>db.collection.insert()</code></p><p>因为集合不要求定义数据结构，所以插入的文档格式理论上可以完全不一样，可以拥有完全不同的数据结构，相同的字段拥有不同的数据类型</p><h3 id="_2-实例演示" tabindex="-1"><a class="header-anchor" href="#_2-实例演示" aria-hidden="true">#</a> 2. 实例演示</h3><p>下面给出几个实例进行说明</p><p><strong>基本数据类型插入</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 插入两个数据，注意age的数据类型不一样哦</span>
db.doc_demo.insert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;yihui&#39;</span>, <span class="token string">&#39;age&#39;</span><span class="token builtin class-name">:</span> <span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
db.doc_demo.insert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;address&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;China&#39;</span>, <span class="token string">&#39;age&#39;</span><span class="token builtin class-name">:</span> <span class="token number">18.8</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>数组类型插入</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.doc_demo.insert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;yihui&#39;</span>, <span class="token string">&#39;skill&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token string">&#39;java&#39;</span>, <span class="token string">&#39;python&#39;</span>, <span class="token string">&#39;php&#39;</span>, <span class="token string">&#39;js&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Object类型插入</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.doc_demo.insert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;name&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;yihui&#39;</span>, <span class="token string">&#39;site&#39;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span><span class="token string">&#39;blog&#39;</span><span class="token builtin class-name">:</span><span class="token string">&#39;https://blog.hhui.top&#39;</span>, <span class="token string">&#39;spring&#39;</span><span class="token builtin class-name">:</span> <span class="token string">&#39;https://spring.hhui.top&#39;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-数据类型" tabindex="-1"><a class="header-anchor" href="#_3-数据类型" aria-hidden="true">#</a> 3. 数据类型</h3><p>mongodb支持的基本数据类型，除了我们常见的string,int,float,boolean之外，还有一些其他的;</p><table><thead><tr><th>数据类型</th><th>说明</th></tr></thead><tbody><tr><td>String</td><td>字符串， UTF8编码</td></tr><tr><td>Integer</td><td>整型，32/64位</td></tr><tr><td>Boolean</td><td>布尔</td></tr><tr><td>Double</td><td>浮点</td></tr><tr><td>Min/Max keys</td><td>将一个值与 BSON（二进制的 JSON）元素的最低值和最高值相对比</td></tr><tr><td>Array</td><td>数组</td></tr><tr><td>Timestamp</td><td>时间戳，记录文档修改或添加的具体时间</td></tr><tr><td>Object</td><td>内嵌文档</td></tr><tr><td>Null</td><td>创建空值</td></tr><tr><td>Symbol</td><td>符号。该数据类型基本上等同于字符串类型，但不同的是，它一般用于采用特殊符号类型的语言。</td></tr><tr><td>Date</td><td>日期，用 UNIX 时间格式来存储当前日期或时间。你可以指定自己的日期时间：创建 Date 对象，传入年月日信息。</td></tr><tr><td>ObjectID</td><td>对象ID</td></tr><tr><td>Binary Data</td><td>二进制</td></tr><tr><td>code</td><td>代码类型。用于在文档中存储 JavaScript 代码。</td></tr><tr><td>Regular expression</td><td>正则表达式类型。用于存储正则表达式。</td></tr></tbody></table><p><strong>ObjectId 类似唯一主键</strong>，可以很快的去生成和排序，包含 12 bytes，含义是：</p><ul><li>前 4 个字节表示创建 unix 时间戳,格林尼治时间 UTC 时间，比北京时间晚了 8 个小时</li><li>接下来的 3 个字节是机器标识码</li><li>紧接的两个字节由进程 id 组成 PID</li><li>最后三个字节是随机数</li></ul>',17);function r(u,g){return a(),t("div",null,[d,c,e(" more "),l])}const b=n(o,[["render",r],["__file","08.MongoDb系列教程六-文档-Document-插入姿势.html.vue"]]);export{b as default};
