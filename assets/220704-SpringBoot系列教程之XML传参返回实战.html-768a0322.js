import{_ as e,V as o,W as c,X as l,Y as n,Z as s,$ as t,a1 as p,F as i}from"./framework-094145d2.js";const u={},r=n("p",null,"最近在准备使用微信公众号来做个人站点的登录，发现微信的回调协议居然是xml格式的，之前使用json传输的较多，结果发现换成xml之后，好像并没有想象中的那么顺利，比如回传的数据始终拿不到，返回的数据对方不认等",-1),k=n("p",null,"接下来我们来实际看一下，一个传参和返回都是xml的SpringBoot应用，究竟是怎样的",-1),d=p(`<h2 id="i-项目搭建" tabindex="-1"><a class="header-anchor" href="#i-项目搭建" aria-hidden="true">#</a> I. 项目搭建</h2><p>本文创建的实例工程采用<code>SpringBoot 2.2.1.RELEASE</code> + <code>maven 3.5.3</code> + <code>idea</code>进行开发</p><h3 id="_1-pom依赖" tabindex="-1"><a class="header-anchor" href="#_1-pom依赖" aria-hidden="true">#</a> 1. pom依赖</h3><p>具体的SpringBoot项目工程创建就不赘述了，对于pom文件中，需要重点关注下面两个依赖类</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.fasterxml.jackson.dataformat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jackson-dataformat-xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-接口调研" tabindex="-1"><a class="header-anchor" href="#_2-接口调研" aria-hidden="true">#</a> 2. 接口调研</h3>`,6),m={href:"https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_standard_messages.html",target:"_blank",rel:"noopener noreferrer"},g=p(`<p>其定义的推送参数如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>xml</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToUserName</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[toUser]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToUserName</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FromUserName</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[fromUser]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FromUserName</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CreateTime</span><span class="token punctuation">&gt;</span></span>1348831860<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CreateTime</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MsgType</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[text]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MsgType</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[this is a test]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Content</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MsgId</span><span class="token punctuation">&gt;</span></span>1234567890123456<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MsgId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MsgDataId</span><span class="token punctuation">&gt;</span></span>xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MsgDataId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Idx</span><span class="token punctuation">&gt;</span></span>xxxx<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Idx</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>xml</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要求返回的结果如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>xml</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToUserName</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[toUser]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToUserName</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FromUserName</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[fromUser]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FromUserName</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CreateTime</span><span class="token punctuation">&gt;</span></span>12345678<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CreateTime</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MsgType</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[text]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MsgType</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">&gt;</span></span><span class="token cdata">&lt;![CDATA[你好]]&gt;</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Content</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>xml</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的结构看起来还好，但是需要注意的是外层标签为<code>xml</code>，内层标签都是大写开头的；而微信识别返回是大小写敏感的</p><h2 id="ii-实战" tabindex="-1"><a class="header-anchor" href="#ii-实战" aria-hidden="true">#</a> II. 实战</h2><p>项目工程搭建完毕之后，首先定义一个接口，用于接收xml传参，并返回xml对象；</p><p>那么核心的问题就是如何定义传参为xml，返回也是xml呢？</p><blockquote><p>没错：就是请求头 + 返回头</p></blockquote><h3 id="_1-rest接口" tabindex="-1"><a class="header-anchor" href="#_1-rest接口" aria-hidden="true">#</a> 1.REST接口</h3><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XmlRest</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * curl -X POST &#39;http://localhost:8080/xml/callback&#39; -H &#39;content-type:application/xml&#39; -d &#39;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>xml</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>URL</span><span class="token punctuation">&gt;</span></span>&lt;![CDATA[https://hhui.top]]&gt;<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>URL</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ToUserName</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>![CDATA[一灰灰blog]]</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ToUserName</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>FromUserName</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>![CDATA[123]]</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>FromUserName</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>CreateTime</span><span class="token punctuation">&gt;</span></span>1655700579<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>CreateTime</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MsgType</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>![CDATA[text]]</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MsgType</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Content</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>![CDATA[测试]]</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Content</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MsgId</span><span class="token punctuation">&gt;</span></span>11111111<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MsgId</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>xml</span><span class="token punctuation">&gt;</span></span>&#39; -i
     *
     * <span class="token keyword">@param</span> <span class="token parameter">msg</span>
     * <span class="token keyword">@param</span> <span class="token parameter">request</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;xml/callback&quot;</span><span class="token punctuation">,</span>
            consumes <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;application/xml&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/xml&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
            produces <span class="token operator">=</span> <span class="token string">&quot;application/xml;charset=utf-8&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">WxTxtMsgResVo</span> <span class="token function">callBack</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">WxTxtMsgReqVo</span> msg<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">WxTxtMsgResVo</span> res <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WxTxtMsgResVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">setFromUserName</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getToUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">setToUserName</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span><span class="token function">getFromUserName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">currentTimeMillis</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">setMsgType</span><span class="token punctuation">(</span><span class="token string">&quot;text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;hello: &quot;</span> <span class="token operator">+</span> <span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意上面的接口定义，POST传参，请求头和返回头都是 <code>application/xml</code></p><h3 id="_2-请求参数与返回结果对象定义" tabindex="-1"><a class="header-anchor" href="#_2-请求参数与返回结果对象定义" aria-hidden="true">#</a> 2.请求参数与返回结果对象定义</h3><p>上面的接口中定义了<code>WxTxtMsgReqVo</code>来接收传参，定义<code>WxTxtMsgResVo</code>来返回结果，由于我们采用的是xml协议传输数据，这里需要借助<code>JacksonXmlRootElement</code>和<code>JacksonXmlProperty</code>注解；它们的实际作用与json传输时，使用<code>JsonProperty</code>来指定json key的作用相仿</p><p>下面是具体的实体定义</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@JacksonXmlRootElement</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;xml&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WxTxtMsgReqVo</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> toUserName<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> fromUserName<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;CreateTime&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createTime<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;MsgType&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msgType<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;Content&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;MsgId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msgId<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;MsgDataId&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msgDataId<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;Idx&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> idx<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token annotation punctuation">@JacksonXmlRootElement</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;xml&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">WxTxtMsgResVo</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> toUserName<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> fromUserName<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;CreateTime&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">Long</span> createTime<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;MsgType&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> msgType<span class="token punctuation">;</span>
    <span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;Content&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点说明：</p><ul><li>JacksonXmlRootElement 注解，定义返回的xml文档中最外层的标签名</li><li>JacksonXmlProperty 注解，定义每个属性值对应的标签名</li><li>无需额外添加<code>&lt;![CDATA[...]]&gt;</code>，这个会自动添加，防转义</li></ul><h3 id="_3-测试" tabindex="-1"><a class="header-anchor" href="#_3-测试" aria-hidden="true">#</a> 3.测试</h3><p>然后访问测试一下，直接通过curl来发送xml请求</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">curl</span> <span class="token parameter variable">-X</span> POST <span class="token string">&#39;http://localhost:8080/xml/callback&#39;</span> <span class="token parameter variable">-H</span> <span class="token string">&#39;content-type:application/xml&#39;</span> <span class="token parameter variable">-d</span> <span class="token string">&#39;&lt;xml&gt;&lt;URL&gt;&lt;![CDATA[https://hhui.top]]&gt;&lt;/URL&gt;&lt;ToUserName&gt;&lt;![CDATA[一灰灰blog]]&gt;&lt;/ToUserName&gt;&lt;FromUserName&gt;&lt;![CDATA[123]]&gt;&lt;/FromUserName&gt;&lt;CreateTime&gt;1655700579&lt;/CreateTime&gt;&lt;MsgType&gt;&lt;![CDATA[text]]&gt;&lt;/MsgType&gt;&lt;Content&gt;&lt;![CDATA[测试]]&gt;&lt;/Content&gt;&lt;MsgId&gt;11111111&lt;/MsgId&gt;&lt;/xml&gt;&#39;</span> <span class="token parameter variable">-i</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>实际响应如下</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>HTTP/1.1 <span class="token number">200</span>
Content-Type: application/xml<span class="token punctuation">;</span><span class="token assign-left variable">charset</span><span class="token operator">=</span>utf-8
Transfer-Encoding: chunked
Date: Tue, 05 Jul <span class="token number">2022</span> 01:20:32 GMT

<span class="token operator">&lt;</span>xml<span class="token operator">&gt;</span><span class="token operator">&lt;</span>ToUserName<span class="token operator">&gt;</span><span class="token number">12</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>/ToUserName<span class="token operator">&gt;</span><span class="token operator">&lt;</span>FromUserName<span class="token operator">&gt;</span>一灰灰blog<span class="token operator">&lt;</span>/FromUserName<span class="token operator">&gt;</span><span class="token operator">&lt;</span>CreateTime<span class="token operator">&gt;</span><span class="token number">165698403</span><span class="token operator"><span class="token file-descriptor important">2</span>&lt;</span>/CreateTime<span class="token operator">&gt;</span><span class="token operator">&lt;</span>MsgType<span class="token operator">&gt;</span>text<span class="token operator">&lt;</span>/MsgType<span class="token operator">&gt;</span><span class="token operator">&lt;</span>Content<span class="token operator">&gt;</span>hello: <span class="token number">2022</span>-07-05T09:20:32.15<span class="token operator"><span class="token file-descriptor important">5</span>&lt;</span>/Content<span class="token operator">&gt;</span><span class="token operator">&lt;</span>/xml<span class="token operator">&gt;</span>%   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-问题记录" tabindex="-1"><a class="header-anchor" href="#_4-问题记录" aria-hidden="true">#</a> 4.问题记录</h3><h4 id="_4-1-httpmediatypenotsupportedexception异常" tabindex="-1"><a class="header-anchor" href="#_4-1-httpmediatypenotsupportedexception异常" aria-hidden="true">#</a> 4.1 HttpMediaTypeNotSupportedException异常</h4><p>通过前面的方式搭建项目之后，在实际测试时，可能会遇到下面的异常情况<code>Resolved [org.springframework.web.HttpMediaTypeNotSupportedException: Content type &#39;application/xml;charset=UTF-8&#39; not supported]</code></p><p>当出现这个问题时，表明是没有对应的Convert来处理<code>application/xml</code>格式的请求头</p><p>对应的解决方案则是主动注册上</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XmlWebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureMessageConverters</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">HttpMessageConverter</span><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> converters<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        converters<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2XmlHttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-2-其他json接口也返回xml数据" tabindex="-1"><a class="header-anchor" href="#_4-2-其他json接口也返回xml数据" aria-hidden="true">#</a> 4.2 其他json接口也返回xml数据</h4><p>另外一个场景则是配置了前面的xml之后，导致项目中其他正常的json传参、返回的接口也开始返回xml格式的数据了，此时解决方案如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XmlWebConfig</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcConfigurer</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 配置这个，默认返回的是json格式数据；若指定了xml返回头，则返回xml格式数据
     *
     * <span class="token keyword">@param</span> <span class="token parameter">configurer</span>
     */</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">configureContentNegotiation</span><span class="token punctuation">(</span><span class="token class-name">ContentNegotiationConfigurer</span> configurer<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        configurer<span class="token punctuation">.</span><span class="token function">defaultContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_JSON</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">TEXT_XML</span><span class="token punctuation">,</span> <span class="token class-name">MediaType</span><span class="token punctuation">.</span><span class="token constant">APPLICATION_XML</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_4-3-微信实际回调参数一直拿不到" tabindex="-1"><a class="header-anchor" href="#_4-3-微信实际回调参数一直拿不到" aria-hidden="true">#</a> 4.3 微信实际回调参数一直拿不到</h4><p>这个问题是在实际测试回调的时候遇到的，接口定义之后始终拿不到结果，主要原因就在于最开始没有在定义的实体类上添加 <code>@JacksonXmlProperty</code></p><p>当我们没有指定这个注解时，接收的xml标签名与实体对象的fieldName完全相同，既区分大小写</p><p>所以为了解决这个问题，就是老老实实如上面的写法，在每个成员上添加注解，如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;ToUserName&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> toUserName<span class="token punctuation">;</span>
<span class="token annotation punctuation">@JacksonXmlProperty</span><span class="token punctuation">(</span>localName <span class="token operator">=</span> <span class="token string">&quot;FromUserName&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">private</span> <span class="token class-name">String</span> fromUserName<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-小结" tabindex="-1"><a class="header-anchor" href="#_5-小结" aria-hidden="true">#</a> 5.小结</h3><p>本文主要介绍的是SpringBoot如何支持xml格式的传参与返回，大体上使用姿势与json格式并没有什么区别，但是在实际使用的时候需要注意上面提出的几个问题，避免采坑</p><p>关键知识点提炼如下：</p><ul><li>Post接口上，指定请求头和返回头： <ul><li><code>consumes = {&quot;application/xml&quot;, &quot;text/xml&quot;},</code></li><li><code>produces = &quot;application/xml;charset=utf-8&quot;</code></li></ul></li><li>实体对象，通过<code>JacksonXmlRootElement</code>和<code>JacksonXmlProperty</code>来重命名返回的标签名</li><li>注册<code>MappingJackson2XmlHttpMessageConverter</code>解决HttpMediaTypeNotSupportedException异常</li><li>指定<code>ContentNegotiationConfigurer.defaultContentType</code> 避免出现所有接口返回xml文档</li></ul><h2 id="iii-其他" tabindex="-1"><a class="header-anchor" href="#iii-其他" aria-hidden="true">#</a> III. 其他</h2><h3 id="_0-项目与源码" tabindex="-1"><a class="header-anchor" href="#_0-项目与源码" aria-hidden="true">#</a> 0. 项目与源码</h3>`,43),v={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/204-web-xml",target:"_blank",rel:"noopener noreferrer"};function h(x,y){const a=i("ExternalLinkIcon");return o(),c("div",null,[r,k,l(" more "),d,n("p",null,[s("我们直接使用微信公众号的回调传参、返回来搭建项目服务，微信开发平台文档如: "),n("a",m,[s("基础消息能力"),t(a)])]),g,n("ul",null,[n("li",null,[s("工程："),n("a",v,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("源码："),n("a",b,[s("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/204-web-xml"),t(a)])])])])}const f=e(u,[["render",h],["__file","220704-SpringBoot系列教程之XML传参返回实战.html.vue"]]);export{f as default};
