const e=JSON.parse(`{"key":"v-76990ea0","path":"/java/jdk/jdk8_/07.Java15%EF%BC%9A%E6%96%87%E6%9C%AC%E5%9D%97.html","title":"07.Java 15新特性：文本块，代码书写的新利器","lang":"zh-CN","frontmatter":{"order":7,"title":"07.Java 15新特性：文本块，代码书写的新利器","tag":["jdk","AIGen"],"category":["Java"],"date":"2025-02-14T15:58:09.000Z","keywords":["Java","JDK15","文本块"],"description":"Java 15新特性：文本块，代码书写的新利器！ 传统字符串拼接的痛点 嘿，Java开发者们！有没有遇到过这样的烦恼：写代码时，字符串拼接写得自己都快崩溃了？比如，写SQL查询语句或者HTML代码片段，一不小心就拼错，还得花时间去排查问题。这事儿是不是特别烦人？ 想象一下，你正在写一个SQL查询语句，代码可能是这样的： String sql = \\"SELECT * FROM users \\" + \\"WHERE age &gt; 18 \\" + \\"AND gender = 'male' \\" + \\"ORDER BY username;\\";","head":[["meta",{"property":"og:url","content":"https://liuyueyi.github.io/tutorial/java/jdk/jdk8_/07.Java15%EF%BC%9A%E6%96%87%E6%9C%AC%E5%9D%97.html"}],["meta",{"property":"og:site_name","content":"一灰灰的站点"}],["meta",{"property":"og:title","content":"07.Java 15新特性：文本块，代码书写的新利器"}],["meta",{"property":"og:description","content":"Java 15新特性：文本块，代码书写的新利器！ 传统字符串拼接的痛点 嘿，Java开发者们！有没有遇到过这样的烦恼：写代码时，字符串拼接写得自己都快崩溃了？比如，写SQL查询语句或者HTML代码片段，一不小心就拼错，还得花时间去排查问题。这事儿是不是特别烦人？ 想象一下，你正在写一个SQL查询语句，代码可能是这样的： String sql = \\"SELECT * FROM users \\" + \\"WHERE age &gt; 18 \\" + \\"AND gender = 'male' \\" + \\"ORDER BY username;\\";"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-14T10:52:18.000Z"}],["meta",{"property":"article:tag","content":"jdk"}],["meta",{"property":"article:tag","content":"AIGen"}],["meta",{"property":"article:published_time","content":"2025-02-14T15:58:09.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-14T10:52:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"07.Java 15新特性：文本块，代码书写的新利器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-02-14T15:58:09.000Z\\",\\"dateModified\\":\\"2025-02-14T10:52:18.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"传统字符串拼接的痛点","slug":"传统字符串拼接的痛点","link":"#传统字符串拼接的痛点","children":[]},{"level":2,"title":"Java 15文本块闪亮登场","slug":"java-15文本块闪亮登场","link":"#java-15文本块闪亮登场","children":[{"level":3,"title":"文本块是什么","slug":"文本块是什么","link":"#文本块是什么","children":[]},{"level":3,"title":"文本块的使用规则","slug":"文本块的使用规则","link":"#文本块的使用规则","children":[]},{"level":3,"title":"示例代码","slug":"示例代码","link":"#示例代码","children":[]}]},{"level":2,"title":"文本块在实际开发中的强大应用","slug":"文本块在实际开发中的强大应用","link":"#文本块在实际开发中的强大应用","children":[{"level":3,"title":"SQL语句编写","slug":"sql语句编写","link":"#sql语句编写","children":[]},{"level":3,"title":"HTML代码构建","slug":"html代码构建","link":"#html代码构建","children":[]},{"level":3,"title":"其他场景应用拓展","slug":"其他场景应用拓展","link":"#其他场景应用拓展","children":[]}]},{"level":2,"title":"文本块与传统字符串的深度对比","slug":"文本块与传统字符串的深度对比","link":"#文本块与传统字符串的深度对比","children":[{"level":3,"title":"代码简洁性","slug":"代码简洁性","link":"#代码简洁性","children":[]},{"level":3,"title":"可读性","slug":"可读性","link":"#可读性","children":[]},{"level":3,"title":"维护难度","slug":"维护难度","link":"#维护难度","children":[]}]},{"level":2,"title":"总结与展望","slug":"总结与展望","link":"#总结与展望","children":[]}],"git":{"createdTime":1739530338000,"updatedTime":1739530338000,"contributors":[{"name":"yihui","email":"bangzewu@126.com","commits":1}]},"readingTime":{"minutes":6.68,"words":2005},"filePathRelative":"java/jdk/jdk8+/07.Java15：文本块.md","localizedDate":"2025年2月14日","excerpt":"<h1> Java 15新特性：文本块，代码书写的新利器！</h1>\\n<h2> 传统字符串拼接的痛点</h2>\\n<p>嘿，Java开发者们！有没有遇到过这样的烦恼：写代码时，字符串拼接写得自己都快崩溃了？比如，写SQL查询语句或者HTML代码片段，一不小心就拼错，还得花时间去排查问题。这事儿是不是特别烦人？</p>\\n<p>想象一下，你正在写一个SQL查询语句，代码可能是这样的：</p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token class-name\\">String</span> sql <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"SELECT * FROM users \\"</span> <span class=\\"token operator\\">+</span>\\n             <span class=\\"token string\\">\\"WHERE age &gt; 18 \\"</span> <span class=\\"token operator\\">+</span>\\n             <span class=\\"token string\\">\\"AND gender = 'male' \\"</span> <span class=\\"token operator\\">+</span>\\n             <span class=\\"token string\\">\\"ORDER BY username;\\"</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}`);export{e as data};
