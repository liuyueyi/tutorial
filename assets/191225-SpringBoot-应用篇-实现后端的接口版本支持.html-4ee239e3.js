import{_ as e,V as o,W as c,X as i,Y as n,Z as s,$ as t,a1 as p,F as l}from"./framework-094145d2.js";const u="/tutorial/imgs/191225/00.jpg",k="/tutorial/imgs/191225/01.jpg",r={},d=p("<p>作为一个主职的后端开发者，在平时的工作中，最讨厌的做的事情可以说是参数校验和接口的版本支持了。对于客户端的同学来说，业务的历史包袱会小很多，当出现不兼容的业务变动时，直接开发新的就好；然而后端就没有这么简单了，历史的接口得支持，新的业务也得支持，吭哧吭哧的新加一个服务接口，url又不能和之前的相同，怎么办？只能在某个地方加一个类似<code>v1</code>, <code>v2</code>...</p><p>那么有没有一种不改变url，通过其他的方式来支持版本管理的方式呢？</p><blockquote><p>本文将介绍一种，利用请求头来传递客户端版本，在相同的url中寻找最适合的这个版本请求的接口的实例case</p></blockquote><p>主要用到的知识点为:</p><ul><li>RequestCondition</li><li>RequestMappingHandlerMapping</li></ul>",5),v=p(`<h2 id="i-应用场景" tabindex="-1"><a class="header-anchor" href="#i-应用场景" aria-hidden="true">#</a> I. 应用场景</h2><p>我们希望同一个业务始终用相同的url，即便不同的版本之间业务完全不兼容，通过请求参数中的版本选择最合适的后端接口来响应这个请求</p><h3 id="_1-约定" tabindex="-1"><a class="header-anchor" href="#_1-约定" aria-hidden="true">#</a> 1. 约定</h3><p>需要实现上面的case，首先有两个约定</p><ul><li>每个请求中必须携带版本参数</li><li>每个接口都定义有一个支持的版本</li></ul><h3 id="_2-规则" tabindex="-1"><a class="header-anchor" href="#_2-规则" aria-hidden="true">#</a> 2. 规则</h3><p>明确上面两点前提之后，就是基本规则了</p><p><strong>版本定义</strong></p><p>根据常见的三段式版本设计，版本格式定义如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>x.x.x
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>其中第一个x：对应的是大版本，一般来说只有较大的改动升级，才会改变</li><li>其中第二个x：表示正常的业务迭代版本号，每发布一个常规的app升级，这个数值+1</li><li>最后一个x：主要针对bugfix，比如发布了一个app，结果发生了异常，需要一个紧急修复，需要再发布一个版本，这个时候可以将这个数值+1</li></ul><p><strong>接口选择</strong></p><p>通常的web请求都是通过url匹配规则来选择对应响应接口，但是在我们这里，一个url，可能会有多个不同的接口，该怎么选择呢？</p><ul><li>首先从请求中，获取版本参数 version</li><li>从所有相同的url接口中，根据接口上定义的版本，找到所有小于等于version的接口</li><li>在上面满足条件的接口中，选择版本最大的接口来响应请求</li></ul><h2 id="ii-应用实现" tabindex="-1"><a class="header-anchor" href="#ii-应用实现" aria-hidden="true">#</a> II. 应用实现</h2><p>明确上面的应用场景之后，开始设计与实现</p><h3 id="_1-接口定义" tabindex="-1"><a class="header-anchor" href="#_1-接口定义" aria-hidden="true">#</a> 1. 接口定义</h3><p>首先我们需要一个版本定义的注解，用于标记web服务接口的版本，默认版本好为1.0.0</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Target</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">TYPE</span><span class="token punctuation">,</span> <span class="token class-name">ElementType</span><span class="token punctuation">.</span><span class="token constant">METHOD</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Retention</span><span class="token punctuation">(</span><span class="token class-name">RetentionPolicy</span><span class="token punctuation">.</span><span class="token constant">RUNTIME</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@Documented</span>
<span class="token keyword">public</span> <span class="token annotation punctuation">@interface</span> <span class="token class-name">Api</span> <span class="token punctuation">{</span>

    <span class="token doc-comment comment">/**
     * 版本
     *
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token class-name">String</span> <span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">default</span> <span class="token string">&quot;1.0.0&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其次需要一个版本对应的实体类，注意下面的实现中，默认版本为<code>1.0.0</code>，并实现了<code>Comparable</code>接口，支持版本之间的比较</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiItem</span> <span class="token keyword">implements</span> <span class="token class-name">Comparable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApiItem</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> high <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token keyword">int</span> low <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ApiItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">ApiItem</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHigh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> right<span class="token punctuation">.</span><span class="token function">getHigh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getHigh</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> right<span class="token punctuation">.</span><span class="token function">getHigh</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> right<span class="token punctuation">.</span><span class="token function">getMid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getMid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> right<span class="token punctuation">.</span><span class="token function">getMid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> right<span class="token punctuation">.</span><span class="token function">getLow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getLow</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> right<span class="token punctuation">.</span><span class="token function">getLow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要一个将string格式的版本转换为ApiItem的转换类，并且支持了默认版本为<code>1.0.0</code>的设定</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiConverter</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">ApiItem</span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">String</span> api<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">ApiItem</span> apiItem <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ApiItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>api<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> apiItem<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cells <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>api<span class="token punctuation">,</span> <span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        apiItem<span class="token punctuation">.</span><span class="token function">setHigh</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>cells<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>cells<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            apiItem<span class="token punctuation">.</span><span class="token function">setMid</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>cells<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>cells<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            apiItem<span class="token punctuation">.</span><span class="token function">setLow</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>cells<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> apiItem<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-handlermapping接口选择" tabindex="-1"><a class="header-anchor" href="#_2-handlermapping接口选择" aria-hidden="true">#</a> 2. HandlerMapping接口选择</h3><p>需要一个url，支持多个请求接口，可以考虑通过<code>RequestCondition</code>来实现，下面是具体的实现类</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiCondition</span> <span class="token keyword">implements</span> <span class="token class-name">RequestCondition</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ApiCondition</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token class-name">ApiItem</span> version<span class="token punctuation">;</span>

    <span class="token keyword">public</span> <span class="token class-name">ApiCondition</span><span class="token punctuation">(</span><span class="token class-name">ApiItem</span> version<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>version <span class="token operator">=</span> version<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ApiCondition</span> <span class="token function">combine</span><span class="token punctuation">(</span><span class="token class-name">ApiCondition</span> other<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 选择版本最大的接口</span>
        <span class="token keyword">return</span> version<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>version<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">ApiCondition</span><span class="token punctuation">(</span>version<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">ApiCondition</span><span class="token punctuation">(</span>other<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">ApiCondition</span> <span class="token function">getMatchingCondition</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> version <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">&quot;x-api&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ApiItem</span> item <span class="token operator">=</span> <span class="token class-name">ApiConverter</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// 获取所有小于等于版本的接口</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>version<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token class-name">ApiCondition</span> other<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 获取最大版本对应的接口</span>
        <span class="token keyword">return</span> other<span class="token punctuation">.</span>version<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>虽然上面的实现比较简单，但是有必要注意一下两个逻辑</p><ul><li><code>getMatchingCondition</code>方法中，控制了只有版本小于等于请求参数中的版本的ApiCondition才满足规则</li><li><code>compareTo</code> 指定了当有多个<code>ApiCoondition</code>满足这个请求时，选择最大的版本</li></ul><p>自定义<code>RequestMappingHandlerMapping</code>实现类<code>ApiHandlerMapping</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiHandlerMapping</span> <span class="token keyword">extends</span> <span class="token class-name">RequestMappingHandlerMapping</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">RequestCondition</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCustomTypeCondition</span><span class="token punctuation">(</span><span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> handlerType<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">buildFrom</span><span class="token punctuation">(</span><span class="token class-name">AnnotationUtils</span><span class="token punctuation">.</span><span class="token function">findAnnotation</span><span class="token punctuation">(</span>handlerType<span class="token punctuation">,</span> <span class="token class-name">Api</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">protected</span> <span class="token class-name">RequestCondition</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> <span class="token function">getCustomMethodCondition</span><span class="token punctuation">(</span><span class="token class-name">Method</span> method<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">buildFrom</span><span class="token punctuation">(</span><span class="token class-name">AnnotationUtils</span><span class="token punctuation">.</span><span class="token function">findAnnotation</span><span class="token punctuation">(</span>method<span class="token punctuation">,</span> <span class="token class-name">Api</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">private</span> <span class="token class-name">ApiCondition</span> <span class="token function">buildFrom</span><span class="token punctuation">(</span><span class="token class-name">Api</span> platform<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> platform <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token keyword">new</span> <span class="token class-name">ApiCondition</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ApiItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span>
                <span class="token keyword">new</span> <span class="token class-name">ApiCondition</span><span class="token punctuation">(</span><span class="token class-name">ApiConverter</span><span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>platform<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注册</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ApiAutoConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">WebMvcRegistrations</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">RequestMappingHandlerMapping</span> <span class="token function">getRequestMappingHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ApiHandlerMapping</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于此，一个实现接口版本管理的微框架已经完成；接下来进入测试环节</p><h2 id="iii-测试" tabindex="-1"><a class="header-anchor" href="#iii-测试" aria-hidden="true">#</a> III. 测试</h2><h3 id="case1-方法上添加版本" tabindex="-1"><a class="header-anchor" href="#case1-方法上添加版本" aria-hidden="true">#</a> case1. 方法上添加版本</h3><p>设计三个接口，一个不加上注解，两外两个添加不同版本的注解</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;v1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">V1Rest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;v1/show 1.0.0&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span><span class="token string">&quot;1.1.2&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;v1/show 1.1.2&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span><span class="token string">&quot;1.1.0&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;v1/show 1.1.0&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在发起请求时，分别不带上版本，带指定版本，来测试对应的响应</p><figure><img src="`+u+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>从上面的截图可以看出，请求头中没有版本时，默认给一个<code>1.0.0</code>的版本</li><li>响应的是小于请求版本的接口中，版本最大的哪一个</li></ul><h3 id="case2-类版本-方法版本" tabindex="-1"><a class="header-anchor" href="#case2-类版本-方法版本" aria-hidden="true">#</a> case2. 类版本+方法版本</h3><p>每个方法上添加版本有点蛋疼，在上面的注解定义中，就支持了类上注解，从实现上也可以看出，当方法和类上都有注解时，选择最大的版本</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span><span class="token string">&quot;2.0.0&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;v2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">V2Rest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span><span class="token string">&quot;1.1.0&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show0</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;v2/show0 1.1.0&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;v2/show1 2.0.0&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span><span class="token string">&quot;2.1.1&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;v2/show2 2.1.1&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Api</span><span class="token punctuation">(</span><span class="token string">&quot;2.2.0&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;show&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">show3</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;v2/show3 2.2.0&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据我们的实现规则，show0和show1都会相应 <code>&lt;2.1.1</code> 的版本请求，这个时候会出现冲突；</p><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>从上面的截图中，可以看出来版本小于2.0.0的请求，报的是404错误</li><li>请求版本小于2.1.1的请求，报的是冲突异常</li></ul><h2 id="iv-其他" tabindex="-1"><a class="header-anchor" href="#iv-其他" aria-hidden="true">#</a> IV. 其他</h2><h3 id="_0-项目-相关博文" tabindex="-1"><a class="header-anchor" href="#_0-项目-相关博文" aria-hidden="true">#</a> 0. 项目&amp;相关博文</h3>',48),m={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},b={href:"https://github.com/liuyueyi/spring-boot-demo/blob/master/spring-case/201-web-api-version",target:"_blank",rel:"noopener noreferrer"},g=n("p",null,[n("strong",null,"相关博文")],-1),h={href:"https://mp.weixin.qq.com/s/8kEODHv5SpxUKbjX2c_ZPg",target:"_blank",rel:"noopener noreferrer"};function w(y,f){const a=l("ExternalLinkIcon");return o(),c("div",null,[d,i(" more "),v,n("ul",null,[n("li",null,[s("工程："),n("a",m,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("源码: "),n("a",b,[s("https://github.com/liuyueyi/spring-boot-demo/blob/master/spring-case/201-web-api-version"),t(a)])])]),g,n("ul",null,[n("li",null,[n("a",h,[s("SpringBoot 系列教程 web 篇之自定义请求匹配条件 RequestCondition"),t(a)])])])])}const _=e(r,[["render",w],["__file","191225-SpringBoot-应用篇-实现后端的接口版本支持.html.vue"]]);export{_ as default};
