import{_ as e,V as o,W as l,Y as n,Z as s,$ as t,X as c,a1 as p,F as i}from"./framework-094145d2.js";const u="/tutorial/imgs/220819/00.jpg",r="/tutorial/imgs/220819/01.jpg",k={},d={href:"https://hhui.top/spring/",target:"_blank",rel:"noopener noreferrer"},v=n("p",null,"通过一个小的业务点出发，搭建一个可以实例使用的项目工程，将各种知识点串联起来; 实战演练专题中，每一个项目都是可以独立运行的，包含若干知识点，甚至可以不做修改直接应用于生产项目；",-1),m=n("p",null,[s("今天的实战项目主要解决的业务需求为："),n("code",null,"每日新增用户统计，生成报表，并邮件发送给相关人")],-1),g=n("p",null,"本项目将包含以下知识点：",-1),b=n("ul",null,[n("li",null,"基于MySql的每日新增用户报表统计（如何统计每日新增用户，若日期不连续如何自动补0？）"),n("li",null,"定时执行报表统计任务"),n("li",null,"MyBatis + MySql数据操作"),n("li",null,"邮件发送"),n("li",null,"Thymeleaf引擎实现报表模板渲染")],-1),h=p('<h2 id="i-需求拆解" tabindex="-1"><a class="header-anchor" href="#i-需求拆解" aria-hidden="true">#</a> I. 需求拆解</h2><p>需要相对来说属于比较明确的了，目的就是实现一个自动报表统计的任务，查询出每日的用户新增情况，然后推送给指定的用户</p><p>因此我们将很清晰的知道，我们需要干的事情</p><p><strong>定时任务</strong></p><p>这里重点放在如何来支持这个任务的定时执行，通常来说定时任务会区分为固定时刻执行 + 间隔时长执行两种（注意这种区分主要是为了方便理解，如每天五点执行的任务，也可以理解为每隔24h执行一次）</p><p>前者常见于<code>一次性任务</code>，如本文中的每天统计一次，这种就是相对典型的固定时刻执行的任务；</p><p>后者常见于<code>轮询式任务</code>，如常见的应用探活(每隔30s发一个ping消息，判断服务是否健在）</p><blockquote><p>定时任务的方案非常多，有兴趣的小伙伴可以关注一波“一灰灰blog”公众号，蹲守一个后续</p></blockquote><p>本文将直接采用Spring的定时任务实现需求场景，对这块不熟悉的小伙伴可以看一下我之前的分享的博文</p>',9),y={href:"https://blog.hhui.top/hexblog/2018/08/01/180801-Spring%E4%B9%8B%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://blog.hhui.top/hexblog/2018/08/03/180803-Spring%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},E=p("<p><strong>每日新增用户统计</strong></p><p>每日新增用户统计，实现方式挺多的，比如举几个简单的实现思路</p><ul><li>基于redis的计数器：一天一个key，当天有新用户时，同步的实现计数器+1</li><li>基于数据库，新增一个统计表，包含如日期 + 新增用户数 + 活跃用户数 等字段 <ul><li>有新用户注册时，对应日期的新增用户数，活跃用户数 + 1</li><li>老用户今日首次使用时，活跃用户数 + 1</li></ul></li></ul><p>上面两个方案都需要借助额外的库表来辅助支持，本文则采用直接统计用户表，根据注册时间来聚合统计每日的新增用户数</p><ul><li>优点：简单，无额外要求，适用于数据量小的场景（比如用户量小于百万的）</li><li>缺点：用户量大时，数据库压力大</li></ul><p>关于如何使用mysql进行统计每日新增用户，不熟悉的小伙伴，推荐参考博主之前的分享文章</p>",6),f={href:"https://blog.hhui.top/hexblog/2022/07/07/220707-MySql%E6%8C%89%E6%97%B6%E3%80%81%E5%A4%A9%E3%80%81%E5%91%A8%E3%80%81%E6%9C%88%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1/",target:"_blank",rel:"noopener noreferrer"},q=n("p",null,[n("strong",null,"报表生成&推送用户")],-1),w=n("p",null,"接下来就是将上面统计的数据，生成报表然后推送给用户；首先是如何将数据生成报表？其次则是如何推送给指定用户？",-1),B=n("p",null,"将数据组装成报表的方式通常取决于你选择的推送方式，如飞书、钉钉之类的，有对应的开发api，可以直接推送富文本；",-1),A=n("p",null,"本文的实现姿势则选择的是通过邮件的方式进行发送，why?",-1),x=n("ul",null,[n("li",null,"飞书、钉钉、微信之类的，需要授权，对于不使用这些作为办公软件的小伙伴没什么意义"),n("li",null,"短信需要钱....")],-1),S=n("p",null,"对于邮件，大家应该都有，无论是qq邮箱，还是工作邮箱；基本上对于想要直接跑本文的小伙伴来说，没有什么额外的门槛",-1),M=n("p",null,"关于java/spring如何使用邮箱，对此不太熟悉的小伙伴，可以参考博主之前的分享文章",-1),T={href:"https://spring.hhui.top/spring-blog/2021/08/02/210802-SpringBoot%E7%B3%BB%E5%88%97%E4%B9%8B%E9%82%AE%E4%BB%B6%E5%8F%91%E9%80%81%E5%A7%BF%E5%8A%BF%E4%BB%8B%E7%BB%8D/",target:"_blank",rel:"noopener noreferrer"},I=p(`<blockquote><p>上面文章中介绍的是FreeMaker来实现模板渲染，本文则介绍另外一个知识点，借助Thymleaf来实现数据报表的生成 （一篇文章获取这么多知识点，就问你开不开心O(∩_∩)O）</p></blockquote><h2 id="ii-分布实现" tabindex="-1"><a class="header-anchor" href="#ii-分布实现" aria-hidden="true">#</a> II. 分布实现</h2><h3 id="_1-项目搭建" tabindex="-1"><a class="header-anchor" href="#_1-项目搭建" aria-hidden="true">#</a> 1. 项目搭建</h3><p>首选搭建一个基本的SpringBoot应用，相信这一步大家都很熟悉了；若有不懂的小伙伴，请点赞、评论加博主好友，手把手教你，不收费</p><p>最终的项目依赖如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
  <span class="token comment">&lt;!-- 邮件发送的核心依赖 --&gt;</span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-mail<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>


  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.google.guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>guava<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>31.1-jre<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.mybatis.spring.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mybatis-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>别看上面好像依赖了不少包，实际上各有用处</p><ul><li><code>spring-boot-starter-web</code>: 提供web服务</li><li><code>spring-boot-starter-mail</code>: 发邮件就靠它</li><li><code>mybatis-spring-boot-starter</code>: 数据库操作</li></ul><p>我们的用户存在mysql中，这里使用mybatis来实现db操作（又一个知识点来了，收好不谢）</p><h3 id="_2-数据准备" tabindex="-1"><a class="header-anchor" href="#_2-数据准备" aria-hidden="true">#</a> 2. 数据准备</h3><blockquote><p>文末的源码包含库表结构，初始化数据，可以直接使用</p></blockquote><p>既然模拟的是从数据库中读取每日新增用户，所以我们准备了一张表</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">\`</span>u1<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span>
  <span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token keyword">bigint</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">unsigned</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;主键id&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>email<span class="token punctuation">\`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token string">&#39;&#39;</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;email&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>create_time<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;生成时间&#39;</span><span class="token punctuation">,</span>
  <span class="token identifier"><span class="token punctuation">\`</span>update_time<span class="token punctuation">\`</span></span> <span class="token keyword">timestamp</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">ON</span> <span class="token keyword">UPDATE</span> <span class="token keyword">CURRENT_TIMESTAMP</span> <span class="token keyword">COMMENT</span> <span class="token string">&#39;更新时间&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">\`</span>idx_name<span class="token punctuation">\`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">1</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8mb4 <span class="token keyword">COMMENT</span><span class="token operator">=</span><span class="token string">&#39;u1测试&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),C={href:"https://blog.hhui.top/hexblog/categories/Python/",target:"_blank",rel:"noopener noreferrer"},U=p(`<div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> datetime

<span class="token keyword">def</span> <span class="token function">create_day_time</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>
    now <span class="token operator">=</span> datetime<span class="token punctuation">.</span>datetime<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span>
    now <span class="token operator">=</span> now <span class="token operator">-</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span>days <span class="token operator">=</span> n<span class="token punctuation">)</span>
    <span class="token keyword">return</span> now<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">&quot;%Y-%m-%d %H:%S:%M&quot;</span><span class="token punctuation">)</span>

vals <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">32</span> <span class="token operator">%</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
        <span class="token comment"># 模拟某一天没有用户的场景</span>
        <span class="token keyword">continue</span>
    vals<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&quot;(&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">_灰灰&#39;, &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string">hui@email.com&#39;, &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>create_day_time<span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;, &#39;</span><span class="token interpolation"><span class="token punctuation">{</span>create_day_time<span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token string">&#39;)&quot;</span></span><span class="token punctuation">)</span>

values <span class="token operator">=</span> <span class="token string">&#39;,\\n\\t&#39;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>vals<span class="token punctuation">)</span>
sqls <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f&quot;INSERT INTO story.u1 (name, email, create_time, update_time) VALUES \\n</span><span class="token interpolation"><span class="token punctuation">{</span>values<span class="token punctuation">}</span></span><span class="token string">;&quot;</span></span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sqls<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-全局配置" tabindex="-1"><a class="header-anchor" href="#_3-全局配置" aria-hidden="true">#</a> 3. 全局配置</h3><p>数据准备完毕之后，接下来配置一下db、email相关的参数</p><p><code>resources/application.yml</code> 文件内容如下</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token comment">#邮箱配置</span>
  <span class="token key atrule">mail</span><span class="token punctuation">:</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> smtp.163.com
    <span class="token key atrule">from</span><span class="token punctuation">:</span> xhhuiblog@163.com
    <span class="token comment"># 使用自己的发送方用户名 + 授权码填充</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span>
    <span class="token key atrule">password</span><span class="token punctuation">:</span>
    <span class="token key atrule">default-encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>
    <span class="token key atrule">properties</span><span class="token punctuation">:</span>
      <span class="token key atrule">mail</span><span class="token punctuation">:</span>
        <span class="token key atrule">smtp</span><span class="token punctuation">:</span>
          <span class="token key atrule">auth</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
          <span class="token key atrule">starttls</span><span class="token punctuation">:</span>
            <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
            <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>
    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>3306/story<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai</span>
    <span class="token key atrule">username</span><span class="token punctuation">:</span> root
    <span class="token key atrule">password</span><span class="token punctuation">:</span>


  <span class="token key atrule">thymeleaf</span><span class="token punctuation">:</span>
    <span class="token key atrule">mode</span><span class="token punctuation">:</span> HTML
    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>
    <span class="token key atrule">servlet</span><span class="token punctuation">:</span>
      <span class="token key atrule">content-type</span><span class="token punctuation">:</span> text/html
    <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>

<span class="token key atrule">mybatis</span><span class="token punctuation">:</span>
  <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mapper/<span class="token important">*.xml</span>
  <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.git.hui.demo.report.dao.po
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的配置分为三类</p><ul><li>数据库相关：连接信息，用户名密码， mybatis配置</li><li>thymleaf：模板渲染相关</li><li>email: 邮箱配置相关，请注意若使用博主的源码，在本地运行时，请按照前面介绍的邮箱博文中手把手的教程，获取您自己的邮箱授权信息，填在上面的username, password中</li></ul><h3 id="_4-数据报表统计实现" tabindex="-1"><a class="header-anchor" href="#_4-数据报表统计实现" aria-hidden="true">#</a> 4. 数据报表统计实现</h3><p>接下来就正式进入大家喜闻乐见的编码实现环节，我们直接使用mybaits来实现数据库操作，定义一个统计的接口</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * <span class="token keyword">@author</span> YiHui
 */</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserStatisticMapper</span> <span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * 统计最近多少天内的新增用户数
     *
     * <span class="token keyword">@param</span> <span class="token parameter">days</span> 统计的天数，从当前这一天开始
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserStatisticPo</span><span class="token punctuation">&gt;</span></span> <span class="token function">statisticUserCnt</span><span class="token punctuation">(</span><span class="token keyword">int</span> days<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接口中定义了一个PO对象，就是我们希望返回的数据，其定义就非常清晰简单了，时间 + 数量</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserStatisticPo</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> day<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> count<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面定义的知识接口，具体首先，当然是放在mybatis的传统xml文件中，根据前面application.yml配置，我们的xml文件需要放在 <code>resources/mapper</code> 目录下，具体实现如下</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">mapper</span> <span class="token name">PUBLIC</span> <span class="token string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span> <span class="token string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mapper</span> <span class="token attr-name">namespace</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.git.hui.demo.report.dao.UserStatisticMapper<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resultMap</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>countMap<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.git.hui.demo.report.dao.po.UserStatisticPo<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>day<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>day<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>result</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count<span class="token punctuation">&quot;</span></span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>count<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resultMap</span><span class="token punctuation">&gt;</span></span>

    <span class="token comment">&lt;!-- 统计用户新增  --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>statisticUserCnt<span class="token punctuation">&quot;</span></span> <span class="token attr-name">resultMap</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>countMap<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        SELECT date_table.day as \`day\`, IFNULL(data.cnt, 0) as \`count\`
        from
        (select DATE_FORMAT(create_time, &#39;%Y-%m-%d&#39;) day, count(id) cnt from u1 GROUP BY day) data
            right join
        (SELECT @date := DATE_ADD(@date, interval - 1 day) day from (SELECT @date := DATE_ADD(CURDATE(), interval 1 day) from u1) days limit #{days}) date_table
        on date_table.day = data.day
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mapper</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点看一下上面的sql实现，为什么会一个join逻辑？</p><p>那我们稍稍思考，若我们直接通过日期进行format之后，再group一下统计计数，会有什么问题？给大家3s的思考时间</p><ul><li>1s</li><li>2s</li><li>3s</li></ul><p>好的3s时间到，现在公布答案，当某一天一个新增用户都没有的时候，会发生什么事情？会出现这一天的数据空缺，即返回的列表中，少了一天，不连续了，如果前段的小伙伴基于这个列表数据进行绘图，很有可能出现异常</p><p>所以出于系统的健壮性考虑（即传说中的鲁棒性），我们希望若某一天没有数据，则对应的计数设置为0</p>`,19),j={href:"https://juejin.cn/post/7131369167961358350",target:"_blank",rel:"noopener noreferrer"},D=p(`<h3 id="_5-报表生成实现" tabindex="-1"><a class="header-anchor" href="#_5-报表生成实现" aria-hidden="true">#</a> 5. 报表生成实现</h3><p>数据统计出来之后，接下来就是基于这些数据来生成我们报表，我们借助Thymleaf来实现，因此先写一个html模板，<code>resources/templates/report.html</code></p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.thymeleaf.org<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>UTF-8<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${vo.htmlTitle}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>每日用户统计<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.title22</span> <span class="token punctuation">{</span>
        <span class="token property">font</span><span class="token punctuation">:</span> 16px/24px bold<span class="token punctuation">;</span>
        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>
        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 0 6px<span class="token punctuation">;</span>
        <span class="token property">margin-left</span><span class="token punctuation">:</span> -6px<span class="token punctuation">;</span>
        <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>
        <span class="token property">font-size</span><span class="token punctuation">:</span> 22px<span class="token punctuation">;</span>
        <span class="token property">font-weight</span><span class="token punctuation">:</span> 550<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">.container</span> <span class="token punctuation">{</span>
        <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
        <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>
        <span class="token property">margin</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>
        <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;Microsoft YaHei UI&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Microsoft YaHei&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;微软雅黑&#39;</span><span class="token punctuation">,</span> SimSun<span class="token punctuation">,</span> <span class="token string">&#39;宋体&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">.content</span> <span class="token punctuation">{</span>
        <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 6px 12px<span class="token punctuation">;</span>
        <span class="token property">margin</span><span class="token punctuation">:</span> 6px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">table</span> <span class="token punctuation">{</span>
        <span class="token property">border</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>
        <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>
        <span class="token property">table-layout</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">.thead</span> <span class="token punctuation">{</span>
        <span class="token property">font</span><span class="token punctuation">:</span> 14px/20px bold<span class="token punctuation">;</span>
        <span class="token property">font-weight</span><span class="token punctuation">:</span> 550<span class="token punctuation">;</span>
        <span class="token property">background</span><span class="token punctuation">:</span> #eaeaea<span class="token punctuation">;</span>
        <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5em<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">.tbody</span> <span class="token punctuation">{</span>
        <span class="token property">font</span><span class="token punctuation">:</span> 15px/20px normal<span class="token punctuation">;</span>
        <span class="token property">font-weight</span><span class="token punctuation">:</span> 540<span class="token punctuation">;</span>
        <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token selector">tr &gt; td</span> <span class="token punctuation">{</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 6px 12px<span class="token punctuation">;</span>
        <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #d8d8d8<span class="token punctuation">;</span>
        <span class="token property">max-width</span><span class="token punctuation">:</span> 600px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>content<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title22<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${vo.tableTitle}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>统计标题<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>thead<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>thead<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>#eaeaea<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>日期<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">min-width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> #4040e1</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>新增用户<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tbody<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item: \${vo.list}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>thead<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">background</span><span class="token punctuation">:</span>#eaeaea<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${item.day}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>2022-08-01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">min-width</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span> <span class="token property">color</span><span class="token punctuation">:</span> #4040e1</span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>\${item.count}<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>一个非常简单的table模板，需要接收三个数据，与之对应的vo对象，我们定义如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StatisticVo</span> <span class="token punctuation">{</span>
    <span class="token comment">// 表格数据项，即日期 + 数量的列表</span>
    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserStatisticPo</span><span class="token punctuation">&gt;</span></span> list<span class="token punctuation">;</span>
    <span class="token comment">// 网页的标题</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> htmlTitle<span class="token punctuation">;</span>
    <span class="token comment">// 表格标题</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> tableTitle<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来就是拿到数据之后，将它与模板渲染得到我们希望的数据，这里主要借助的是<code>org.thymeleaf.spring5.SpringTemplateEngine</code></p><p>核心实现如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StatisticAndReportService</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserStatisticMapper</span> userStatisticMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">JavaMailSender</span> javaMailSender<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">Environment</span> environment<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">SpringTemplateEngine</span> templateEngine<span class="token punctuation">;</span>


    <span class="token keyword">public</span> <span class="token class-name">StatisticVo</span> <span class="token function">statisticAddUserReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">UserStatisticPo</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userStatisticMapper<span class="token punctuation">.</span><span class="token function">statisticUserCnt</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">StatisticVo</span> vo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StatisticVo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setHtmlTitle</span><span class="token punctuation">(</span><span class="token string">&quot;每日新增用户统计&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setTableTitle</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;【%s】新增用户报表&quot;</span><span class="token punctuation">,</span> <span class="token class-name">LocalDate</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        vo<span class="token punctuation">.</span><span class="token function">setList</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> vo<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">renderReport</span><span class="token punctuation">(</span><span class="token class-name">StatisticVo</span> vo<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Context</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Context</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        context<span class="token punctuation">.</span><span class="token function">setVariable</span><span class="token punctuation">(</span><span class="token string">&quot;vo&quot;</span><span class="token punctuation">,</span> vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> content <span class="token operator">=</span> templateEngine<span class="token punctuation">.</span><span class="token function">process</span><span class="token punctuation">(</span><span class="token string">&quot;report&quot;</span><span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>   
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),F=n("code",null,'templateEngine.process("report", context)',-1),N={href:"https://spring.hhui.top/spring-blog/2020/06/11/200611-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8BWeb%E7%AF%87%E4%B9%8B%E9%9D%99%E6%80%81%E8%B5%84%E6%BA%90%E9%85%8D%E7%BD%AE/",target:"_blank",rel:"noopener noreferrer"},L=n("p",null,"第二个参数用于封装上下文，传递模板需要使用的参数",-1),R=n("h3",{id:"_5-邮件发送",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-邮件发送","aria-hidden":"true"},"#"),s(" 5. 邮件发送")],-1),O={href:"https://blog.hhui.top/hexblog/2021/10/28/211028-Email%E5%8F%91%E9%80%81%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/",target:"_blank",rel:"noopener noreferrer"},P=p(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 发送邮件的逻辑
 *
 * <span class="token keyword">@param</span> <span class="token parameter">title</span>
 * <span class="token keyword">@param</span> <span class="token parameter">content</span>
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">MessagingException</span></span>
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sendMail</span><span class="token punctuation">(</span><span class="token class-name">String</span> title<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MessagingException</span> <span class="token punctuation">{</span>
    <span class="token class-name">MimeMessage</span> mimeMailMessage <span class="token operator">=</span> javaMailSender<span class="token punctuation">.</span><span class="token function">createMimeMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">MimeMessageHelper</span> mimeMessageHelper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MimeMessageHelper</span><span class="token punctuation">(</span>mimeMailMessage<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//邮件发送人，从前面的配置参数中拿，若没有配置，则使用默认的xhhuiblog@163.com</span>
    mimeMessageHelper<span class="token punctuation">.</span><span class="token function">setFrom</span><span class="token punctuation">(</span>environment<span class="token punctuation">.</span><span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token string">&quot;spring.mail.from&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;xhhuiblog@163.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//邮件接收人，可以是多个</span>
    mimeMessageHelper<span class="token punctuation">.</span><span class="token function">setTo</span><span class="token punctuation">(</span><span class="token string">&quot;bangzewu@126.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//邮件主题</span>
    mimeMessageHelper<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//邮件内容</span>
    mimeMessageHelper<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 解决linux上发送邮件时，抛出异常 JavaMailSender no object DCH for MIME type multipart/mixed</span>
    <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">currentThread</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContextClassLoader</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>mail<span class="token punctuation">.</span></span>Message</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getClassLoader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    javaMailSender<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>mimeMailMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的实现，直接写死了收件人邮箱，即我本人的邮箱，各位大佬在使用的时候，请记得替换一下啊</p><p>上面的实现除了发送邮件这个知识点之外，还有一个隐藏的获取配置参数的知识点，即<code>environment#getProperty()</code>，有兴趣的小伙伴翻博主的站点吧</p><h3 id="_6-定时任务" tabindex="-1"><a class="header-anchor" href="#_6-定时任务" aria-hidden="true">#</a> 6. 定时任务</h3><p>上面几部基本上就把我们的整个任务功能都实现了，从数据库中统计出每日新增用户，然后借助Thymleaf来渲染模板生成报告，然后借助email进行发送</p><p>最后的一步，就是任务的定时执行，直接借助Spring的Schedule来完成我们的目标，这里我们希望每天4:15分执行这个任务，如下配置即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 定时发送，每天4:15分统计一次，发送邮件</span>
<span class="token annotation punctuation">@Scheduled</span><span class="token punctuation">(</span>cron <span class="token operator">=</span> <span class="token string">&quot;0 15 4 * * ?&quot;</span><span class="token punctuation">)</span>
<span class="token comment">//    下上面这个是每分钟执行一次，用于本地测试</span>
<span class="token comment">//    @Scheduled(cron = &quot;0/1 * * * * ?&quot;)</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">autoCalculateUserStatisticAndSendEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">MessagingException</span> <span class="token punctuation">{</span>
        <span class="token class-name">StatisticVo</span> vo <span class="token operator">=</span> <span class="token function">statisticAddUserReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> content <span class="token operator">=</span> <span class="token function">renderReport</span><span class="token punctuation">(</span>vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">sendMail</span><span class="token punctuation">(</span><span class="token string">&quot;新增用户报告&quot;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-测试" tabindex="-1"><a class="header-anchor" href="#_7-测试" aria-hidden="true">#</a> 7. 测试</h3><p>最后测试演练一下，启动方法如下，除了基本的启动注解之外，还指定了mapper接口位置，开启定时任务；感兴趣的小伙伴可以试一下干掉这两个注解会怎样，评论给出你的实测结果吧</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@EnableScheduling</span>
<span class="token annotation punctuation">@MapperScan</span><span class="token punctuation">(</span>basePackages <span class="token operator">=</span> <span class="token string">&quot;com.git.hui.demo.report.dao&quot;</span><span class="token punctuation">)</span>
<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Application</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Application</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>当然我再实际测试的时候，不可能真等到早上四点多来看是否执行，大晚上还是要睡觉的；因此本地测试的时候，可以将上面定时任务改一下，换成每隔一分钟执行一次</p><p>接一个debug的中间图</p><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>打开的内容展示</p><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此外，源码除了实现了定时推送之外，也提供了一个web接口，访问之后直接可以查看报表内容，方便大家调样式，实现如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Controller</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">StatisticReportRest</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">StatisticAndReportService</span> statisticAndReportSchedule<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>path <span class="token operator">=</span> <span class="token string">&quot;report&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">view</span><span class="token punctuation">(</span><span class="token class-name">Model</span> model<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">StatisticVo</span> vo <span class="token operator">=</span> statisticAndReportSchedule<span class="token punctuation">.</span><span class="token function">statisticAddUserReport</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;vo&quot;</span><span class="token punctuation">,</span> vo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> <span class="token string">&quot;report&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-一灰灰的干货总结" tabindex="-1"><a class="header-anchor" href="#_8-一灰灰的干货总结" aria-hidden="true">#</a> 8.一灰灰的干货总结</h3><p>最后进入一灰灰的保留环节，这么“大”一个项目坐下来的，当然是得好好盘一盘它的知识点了，前面的各小节内容中有穿插的指出相应的知识点，接下来如雨的知识点将迎面袭来，不要眨眼</p>`,19),V={href:"https://liuyueyi.github.io/hexblog/2018/08/01/180801-Spring%E4%B9%8B%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},H={href:"https://blog.hhui.top/hexblog/2018/08/03/180803-Spring%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8%E7%AF%87/",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://blog.hhui.top/hexblog/2022/07/07/220707-MySql%E6%8C%89%E6%97%B6%E3%80%81%E5%A4%A9%E3%80%81%E5%91%A8%E3%80%81%E6%9C%88%E8%BF%9B%E8%A1%8C%E6%95%B0%E6%8D%AE%E7%BB%9F%E8%AE%A1/",target:"_blank",rel:"noopener noreferrer"},$={href:"https://spring.hhui.top/spring-blog/categories/SpringBoot/DB%E7%B3%BB%E5%88%97/Mybatis/",target:"_blank",rel:"noopener noreferrer"},z=n("li",null,"数据报表生成，直接字符串拼接？还是模板引擎的渲染？",-1),G={href:"https://hhui.top/spring-web/",target:"_blank",rel:"noopener noreferrer"},W={href:"https://hhui.top/spring-middle/01.email/",target:"_blank",rel:"noopener noreferrer"},J={href:"https://blog.hhui.top/hexblog/2021/10/28/211028-Email%E5%8F%91%E9%80%81%E5%A4%B1%E8%B4%A5%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/",target:"_blank",rel:"noopener noreferrer"},K=n("p",null,"除了上面比较突出的知识点之外，当然还有其他的，如Spring如何读取配置参数，SpringMVC如何向模板中传递上下文，模板语法，静态资源怎么放等等",-1),X=n("p",null,"写到这我自己都惊呆了好么，一篇文章这么多知识点，还有啥好犹豫的，一键三连走起啊，我是一灰灰，这可能是我这个假期内最后一篇实战干货了，马上要开学了，老婆孩子回归之后，后续的更新就靠各位读友的崔更保持了",-1),Z={href:"https://hhui.top/",target:"_blank",rel:"noopener noreferrer"},Q=n("h2",{id:"iii-不能错过的源码和相关知识点",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#iii-不能错过的源码和相关知识点","aria-hidden":"true"},"#"),s(" III. 不能错过的源码和相关知识点")],-1),nn=n("h3",{id:"_0-项目",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_0-项目","aria-hidden":"true"},"#"),s(" 0. 项目")],-1),sn={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},an={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/",target:"_blank",rel:"noopener noreferrer"};function tn(pn,en){const a=i("ExternalLinkIcon");return o(),l("div",null,[n("blockquote",null,[n("p",null,[s("本文节选自 "),n("a",d,[s("《实战演练专题》 "),t(a)])])]),v,m,g,b,c(" more "),h,n("blockquote",null,[n("ul",null,[n("li",null,[n("a",y,[s("180801-Spring之定时任务基本使用篇 - 一灰灰Blog"),t(a)])]),n("li",null,[n("a",_,[s("180803-Spring定时任务高级使用篇 - 一灰灰Blog"),t(a)])])])]),E,n("ul",null,[n("li",null,[n("ul",null,[n("li",null,[n("a",f,[s("220707-MySql按时、天、周、月进行数据统计 - 一灰灰Blog"),t(a)])])])])]),q,w,B,A,x,S,M,n("ul",null,[n("li",null,[n("ul",null,[n("li",null,[n("a",T,[s("【中间件】SpringBoot系列之邮件发送姿势介绍 | 一灰灰Blog"),t(a)])])])])]),I,n("p",null,[s("接下来准备写入一些数据；为了模拟某些天没有新增用户，贴心的一灰灰博主给大家提供基于python的数据生成脚本，源码如下 (python3+，对python不熟的小伙伴，可以到博主的站点进补一下，"),n("a",C,[s("超链"),t(a)]),s(")")]),U,n("p",null,[s("具体的sql说明就不展开了，请查看博文获取更多： "),n("a",j,[s("MySql按时、天、周、月进行数据统计"),t(a)])]),D,n("p",null,[s("模板渲染就一行"),F,s("，第一个参数为模板名，就是上面的html文件名（对于模板文件、静态资源怎么放，放在那儿，这个知识点当然也可以在一灰灰的站点获取，"),n("a",N,[s("超链"),t(a)]),s("）")]),L,R,n("p",null,[s("报表生成之后，就是将它推送给用户，我们这里选定的是邮箱方式，具体实现也比较简单，但是在最终部署到生产环境（如阿里云服务器时，可能会遇到坑，同样明显的知识点，博主会没有分享么？当然不会没有了，"),n("a",O,[s("Email生产环境发送排雷指南，你值得拥有"),t(a)]),s("）")]),P,n("ul",null,[n("li",null,[s("Spring定时任务@Schedule "),n("ul",null,[n("li",null,[s("怎么用？ -> "),n("a",V,[s("180801-Spring之定时任务基本使用篇 - 一灰灰Blog"),t(a)])]),n("li",null,[s("多个任务串行并行，是否会相互影响？自定义线程池怎么整？一个异常会影响其他么？-> "),n("a",H,[s("Spring定时任务高级使用篇 - 一灰灰Blog"),t(a)])])])]),n("li",null,[s("数据库统计每日新增 "),n("ul",null,[n("li",null,[s("mysql直接统计日新增，sql怎么写？ 时间不连续，如何规避？ -> "),n("a",Y,[s("MySql按时、天、周、月进行数据统计 - 一灰灰Blog"),t(a)])]),n("li",null,[s("mybatis操作db怎么玩？ -> "),n("a",$,[s("Mybatis系列教程"),t(a)])])])]),n("li",null,[s("模板渲染 "),n("ul",null,[z,n("li",null,[s("更多的spring web知识点 -> "),n("a",G,[s("一灰灰的SpringWeb专栏 | 免费"),t(a)])])])]),n("li",null,[s("邮件发送 "),n("ul",null,[n("li",null,[s("怎么发邮件？ -> "),n("a",W,[s("SpringBoot无障碍使用邮箱服务"),t(a)])]),n("li",null,[s("如何避免上线不采坑 -> "),n("a",J,[s("Email生产环境发送排雷指南，你值得拥有"),t(a)])])])])]),K,X,n("p",null,[s("本文中所有知识点，都可以在我的个人站点获取，欢迎关注： "),n("a",Z,[s("https://hhui.top/"),t(a)])]),Q,nn,n("ul",null,[n("li",null,[s("工程："),n("a",sn,[s("https://github.com/liuyueyi/spring-boot-demo"),t(a)])]),n("li",null,[s("源码："),n("a",an,[s("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/"),t(a)])])])])}const ln=e(k,[["render",tn],["__file","21.220819-SpringBoot实战实现数据报表统计并定时推送用户.html.vue"]]);export{ln as default};
