import{_ as o,V as c,W as u,Y as n,Z as s,$ as a,a0 as l,a1 as i,F as t}from"./framework-094145d2.js";const r="/tutorial/imgs/column/springai/03-1.webp",k="/tutorial/imgs/column/springai/03-2.webp",d="/tutorial/imgs/column/springai/03-3.webp",m="/tutorial/imgs/column/springai/03-4.webp",v="/tutorial/imgs/column/springai/03-5.webp",g="/tutorial/imgs/column/springai/03-6.webp",b={},f=n("h1",{id:"_03-结构化返回",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_03-结构化返回","aria-hidden":"true"},"#"),s(" 03. 结构化返回")],-1),q=n("p",null,"通常情况下，在我们不显示要求大模型返回什么样的数据结构时，大模型返回的大多不是结构化的数据；对于上层的业务开发来说，将大模型返回的关键信息映射为结构化的数据模型是一个非常难受的事情",-1),h=n("p",null,"SpringAI提供了一系列的返回结果结构化转换器来实现上面的痛点；接下来我们来具体看一下，可以怎么处理返回结果",-1),C=n("h2",{id:"一、实例演示",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#一、实例演示","aria-hidden":"true"},"#"),s(" 一、实例演示")],-1),y=i(`<h3 id="_1-初始化" tabindex="-1"><a class="header-anchor" href="#_1-初始化" aria-hidden="true">#</a> 1. 初始化</h3><p>创建一个MVC的API，用于提供与大模型的交互</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ChatController</span> <span class="token punctuation">{</span>

    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ZhiPuAiChatModel</span> chatModel<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">public</span> <span class="token class-name">ChatController</span><span class="token punctuation">(</span><span class="token class-name">ZhiPuAiChatModel</span> chatModel<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>chatModel <span class="token operator">=</span> chatModel<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-beanoutputconverter" tabindex="-1"><a class="header-anchor" href="#_2-beanoutputconverter" aria-hidden="true">#</a> 2. BeanOutputConverter</h3><p>借助<code>BeanOutputConverter</code>来实现返回结果映射为java的POJO类，首先我们定义一个提示词模板，主要用于查询某个导演的作品</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>帮我返回五个{actor}导演的电影名，要求中文返回
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们希望返回的结构如下:</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;actor&quot;</span><span class="token operator">:</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;movies&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;大话西游之大圣娶亲&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;喜剧之王&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;功夫&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;西游降魔篇&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;长江七号&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因此我们可以定义一个record，用于承接返回的结果</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">record</span> <span class="token class-name">ActorsFilms</span><span class="token punctuation">(</span><span class="token class-name">String</span> actor<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> movies<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>借助<code>ChatClient</code>来实现结果解析</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 基于ChatClient实现返回结果的结构化映射
 *
 * <span class="token keyword">@param</span> <span class="token parameter">actor</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ai/generate&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ActorsFilms</span> <span class="token function">generate</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">PromptTemplate</span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span><span class="token string">&quot;帮我返回五个{actor}导演的电影名，要求中文返回&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Prompt</span> prompt <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> actor<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ActorsFilms</span> films <span class="token operator">=</span> <span class="token class-name">ChatClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">entity</span><span class="token punctuation">(</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> films<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>为什么上面的方式就可以实现结果映射为java的POJO类呢？ 我们可以debug一下<code>ChatClient.create(chatModel).prompt(prompt).call()</code>返回的对象</p><p>从下面的截图中可以看到，在传递给大模型的请求中，context参数中，指定了要求大模型返回的数据格式（这里基于Advisors来实现的上下文数据附加/扩充提示词的功能）</p><figure><img src="`+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>当然也可以显示使用<code>BeanOutputConverter</code>基于<code>ChatModel</code>来实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 基于BeanOutputConverter实现返回结果结构化映射
 *
 * <span class="token keyword">@param</span> <span class="token parameter">actor</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ai/gen2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">ActorsFilms</span> <span class="token function">gen2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">BeanOutputConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">&gt;</span></span> beanOutputConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanOutputConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> format <span class="token operator">=</span> beanOutputConverter<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">PromptTemplate</span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
                帮我返回五个{actor}导演的电影名
                {format}
            &quot;&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Prompt</span> prompt <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> actor<span class="token punctuation">,</span> <span class="token string">&quot;format&quot;</span><span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Generation</span> generation <span class="token operator">=</span> chatModel<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>generation <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> beanOutputConverter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>generation<span class="token punctuation">.</span><span class="token function">getOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意上面的实现，在提示词模板中，新增了 <code>{format}</code>，其值由 <code>BeanOutputConverter</code> 的 <code>getFormat()</code> 方法获取；其实现原理是直接在提示词中添加了结构化的返回结果格式，因此，大模型返回的数据结构，会按照这个格式进行解析</p><p>接下来实际访问看看表现情况</p><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>从多次体验的结果来看，结果的格式与定义的POJO类一致，因此，基于BeanOutputConverter的实现，可以达到我们想要的结果；但是在有限的几次访问尝试中，返现<code>ChatClient</code>方式，返回的结果中actor可能为null，没有正确获取到值，这也侧面说明，大模型返回数据的不可控性</p><h3 id="_3-属性排序" tabindex="-1"><a class="header-anchor" href="#_3-属性排序" aria-hidden="true">#</a> 3. 属性排序</h3><p>借助<code>@JsonPropertyOrder</code>来实现排序，这个注解适用于record和普通的class</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@JsonPropertyOrder</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;movies&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">record</span> <span class="token class-name">ActorsFilms</span><span class="token punctuation">(</span><span class="token class-name">String</span> actor<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> movies<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ai/genList&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">&gt;</span></span> <span class="token function">genList</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor1&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor1<span class="token punctuation">,</span>
                                 <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor2&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;张艺谋&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">&gt;</span></span> actorsFilms <span class="token operator">=</span> <span class="token class-name">ChatClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span>
                    u<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;帮我返回五个{actor1}和{actor2}导演的电影名，要求中文返回&quot;</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">params</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;actor1&quot;</span><span class="token punctuation">,</span> actor1<span class="token punctuation">,</span> <span class="token string">&quot;actor2&quot;</span><span class="token punctuation">,</span> actor2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">entity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ParameterizedTypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> actorsFilms<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+d+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-mapoutputconverter" tabindex="-1"><a class="header-anchor" href="#_4-mapoutputconverter" aria-hidden="true">#</a> 4. MapOutputConverter</h3><p>上面介绍的是返回一个POJO，接下来看一下直接基于<code>MapOutputConverter</code>来实现用map接收返回结果</p><p>这里使用的是上面用过的 <code>ParameterizedTypeReference</code> 来指定返回结果的类型</p><p>基于 <code>ChatClient</code> 的方式</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ai/genMap&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Map</span> <span class="token function">genMap</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> actorsFilms <span class="token operator">=</span> <span class="token class-name">ChatClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span>
                    u<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;帮我返回五个{actor}导演的电影名，要求中文返回&quot;</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span><span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> actor<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">entity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ParameterizedTypeReference</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> actorsFilms<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于<code>MapOutputConverter</code>结合<code>ChatModel</code>来实现</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ai/genMap2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">Map</span> <span class="token function">genMap2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">MapOutputConverter</span> mapOutputConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">MapOutputConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> format <span class="token operator">=</span> mapOutputConverter<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PromptTemplate</span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
                帮我返回五个{actor}导演的电影名，要求中文返回
                {format}
            &quot;&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Prompt</span> prompt <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> actor<span class="token punctuation">,</span> <span class="token string">&quot;format&quot;</span><span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Generation</span> generation <span class="token operator">=</span> chatModel<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> mapOutputConverter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>generation<span class="token punctuation">.</span><span class="token function">getOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>两个接口的返回结果如下图，虽然都是返回的Map，但是仔细看之后，会发现他们的层级并不一样，基于<code>ChatClient</code>返回的层级会多一层，返回的电影被放在了<code>movie</code>属性下，以列表的方式组织；而基于<code>MapOutputConverter</code>返回的就是一层的map，key为数字；</p><p>至于孰优孰劣，这里就不予置评，看个人喜好了</p><figure><img src="`+m+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-listoutputconverter" tabindex="-1"><a class="header-anchor" href="#_5-listoutputconverter" aria-hidden="true">#</a> 5. ListOutputConverter</h3><p>除了上面返回Map的case之外，再看一下返回列表的场景，借助<code>ListOutputConverter</code>来实现，基本上和前面介绍的差异不大</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ai/genList1&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">genList1</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> actorsFilms <span class="token operator">=</span> <span class="token class-name">ChatClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span>u <span class="token operator">-&gt;</span>
                    u<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&quot;帮我返回五个{actor}导演的电影名，要求中文返回&quot;</span><span class="token punctuation">)</span>
                            <span class="token punctuation">.</span><span class="token function">param</span><span class="token punctuation">(</span><span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> actor<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">entity</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ListOutputConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultConversionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> actorsFilms<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/ai/genList2&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token class-name">List</span> <span class="token function">genList2</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;周星驰&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> actor<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">ListOutputConverter</span> listOutputConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ListOutputConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultConversionService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">String</span> format <span class="token operator">=</span> listOutputConverter<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">PromptTemplate</span> template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
                帮我返回五个{actor}导演的电影名，要求中文返回
                {format}
            &quot;&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Prompt</span> prompt <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;actor&quot;</span><span class="token punctuation">,</span> actor<span class="token punctuation">,</span> <span class="token string">&quot;format&quot;</span><span class="token punctuation">,</span> format<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Generation</span> generation <span class="token operator">=</span> chatModel<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>prompt<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> result <span class="token operator">=</span> listOutputConverter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span>generation<span class="token punctuation">.</span><span class="token function">getOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>返回实例如下（你会发现返回数据的不准，当然这个就不属于我们这里的范畴了）</p><figure><img src="`+v+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、小结" tabindex="-1"><a class="header-anchor" href="#二、小结" aria-hidden="true">#</a> 二、小结</h2><p>本文主要介绍在SpringAI中如何结构化的处理大模型返回的结果，从使用方式来看，区分<code>ChatClient</code>和<code>ChatModel</code>两种不同的使用姿势；其中前者更简单</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 方式一：ChatClient通过借助Advisor从上下文获取信息注入到提示词</span>
<span class="token class-name">ChatClient</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>chatModel<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token string">&quot;提示词&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">.</span><span class="token function">entity</span><span class="token punctuation">(</span>xxx返回的对象类型<span class="token punctuation">)</span><span class="token punctuation">;</span>


<span class="token comment">// 方式二：再提示词中明确注入返回对象的格式</span>
<span class="token class-name">BeanOutputConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">&gt;</span></span> beanOutputConverter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BeanOutputConverter</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token class-name">ActorsFilms</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">String</span> format <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanOutputConverter<span class="token punctuation">.</span><span class="token function">getFormat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">String</span> template <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
这里是提示词.
{format}
&quot;&quot;&quot;</span><span class="token punctuation">;</span>

<span class="token class-name">Generation</span> generation <span class="token operator">=</span> chatModel<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">PromptTemplate</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>template<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;format&quot;</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>format<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">ActorsFilms</span> actorsFilms <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>beanOutputConverter<span class="token punctuation">.</span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>generation<span class="token punctuation">.</span><span class="token function">getOutput</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此外，核心发挥作用的是<code>Converter</code>，SpringAI官方提供了下面这些具体的实现，基本上可以覆盖我们90%以上的业务场景； 若覆盖补全，则考虑通过自定义Converter来实现</p><figure><img src="`+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',45),w={href:"https://github.com/liuyueyi/spring-ai-demo/tree/master/S03-structured-output",target:"_blank",rel:"noopener noreferrer"};function _(M,O){const p=t("RouterLink"),e=t("ExternalLinkIcon");return c(),u("div",null,[f,q,h,C,n("p",null,[s("首先我们需要创建一个SpringAI的项目，基本流程同 "),a(p,{to:"/spring/springai/%E5%9F%BA%E7%A1%80%E7%AF%87/01.%E5%88%9B%E5%BB%BA%E4%B8%80%E4%B8%AASpringAI-Demo%E5%B7%A5%E7%A8%8B.html"},{default:l(()=>[s("创建一个SpringAI-Demo工程")]),_:1})]),y,n("p",null,[s("文中所有涉及到的代码，可以到项目中获取 "),n("a",w,[s("https://github.com/liuyueyi/spring-ai-demo"),a(e)])])])}const j=o(b,[["render",_],["__file","03.结构化返回.html.vue"]]);export{j as default};
