import{_ as t,V as p,W as o,X as c,Y as n,Z as s,$ as e,a1 as i,F as l}from"./framework-094145d2.js";const u="/tutorial/imgs/201027/00.jpg",r={},d=n("p",null,[s("GEO用于存储地理信息，最直观的就是我们日常使用的地图app中，如果我想查询我所在地的周边餐饮，就可以利用geo中的以"),n("code",null,"(x,y)"),s("为圆心，以n为半径，扫描坐标在这个圈内的所有餐饮店，这个case借助redis的geo可以很方便的实现")],-1),k=i(`<h2 id="i-基本使用" tabindex="-1"><a class="header-anchor" href="#i-基本使用" aria-hidden="true">#</a> I. 基本使用</h2><h3 id="_1-配置" tabindex="-1"><a class="header-anchor" href="#_1-配置" aria-hidden="true">#</a> 1. 配置</h3><p>我们使用SpringBoot <code>2.2.1.RELEASE</code>来搭建项目环境，直接在<code>pom.xml</code>中添加redis依赖</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-redis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果我们的redis是默认配置，则可以不额外添加任何配置；也可以直接在<code>application.yml</code>配置中，如下</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
  <span class="token key atrule">redis</span><span class="token punctuation">:</span>
    <span class="token key atrule">host</span><span class="token punctuation">:</span> 127.0.0.1
    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">6379</span>
    <span class="token key atrule">password</span><span class="token punctuation">:</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-使用姿势" tabindex="-1"><a class="header-anchor" href="#_2-使用姿势" aria-hidden="true">#</a> 2. 使用姿势</h3><p>geo有6个常见的命令，下面逐一进行解释说明</p><h4 id="a-geoadd-添加" tabindex="-1"><a class="header-anchor" href="#a-geoadd-添加" aria-hidden="true">#</a> a. geoadd 添加</h4><p>存储指定的地理空间位置，一般需要三个基本的参数，经度 + 维度 + 位置名</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">StringRedisTemplate</span> redisTemplate<span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token class-name">GeoBean</span><span class="token punctuation">(</span><span class="token class-name">StringRedisTemplate</span> stringRedisTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>redisTemplate <span class="token operator">=</span> stringRedisTemplate<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token doc-comment comment">/**
 * 添加geo信息
 *
 * <span class="token keyword">@param</span> <span class="token parameter">key</span>       缓存key
 * <span class="token keyword">@param</span> <span class="token parameter">longitude</span> 经度
 * <span class="token keyword">@param</span> <span class="token parameter">latitude</span>  纬度
 * <span class="token keyword">@param</span> <span class="token parameter">member</span>    位置名
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">double</span> longitude<span class="token punctuation">,</span> <span class="token keyword">double</span> latitude<span class="token punctuation">,</span> <span class="token class-name">String</span> member<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// geoadd xhh_pos 114.31 30.52 武汉 116.46 39.92 北京</span>
    redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">)</span><span class="token punctuation">,</span> member<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="b-geopos-获取坐标" tabindex="-1"><a class="header-anchor" href="#b-geopos-获取坐标" aria-hidden="true">#</a> b. geopos 获取坐标</h4><p>上面添加一组坐标 + 地理位置到redis中，如果我们想知道某个位置的坐标，则可以借助<code>geopos</code>来获取</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 获取某个地方的坐标
 *
 * <span class="token keyword">@param</span> <span class="token parameter">key</span>
 * <span class="token keyword">@param</span> <span class="token parameter">member</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> <span class="token function">get</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> member<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// geopos xhh_pos 武汉</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Point</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">position</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> member<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> list<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="c-geodist-获取距离" tabindex="-1"><a class="header-anchor" href="#c-geodist-获取距离" aria-hidden="true">#</a> c. geodist 获取距离</h4><p>计算两个位置之间的距离，比如我已经写入了武汉、北京的经纬度，这个时候希望知道他们两的距离，直接<code>geodist</code>即可</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 判断两个地点的距离
 *
 * <span class="token keyword">@param</span> <span class="token parameter">key</span>
 * <span class="token keyword">@param</span> <span class="token parameter">source</span>
 * <span class="token keyword">@param</span> <span class="token parameter">dest</span>
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">public</span> <span class="token class-name">Distance</span> <span class="token function">distance</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> source<span class="token punctuation">,</span> <span class="token class-name">String</span> dest<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 可以指定距离单位，默认是米, ft-&gt;英尺, mi-&gt;英里</span>
    <span class="token comment">// geodist xhh_pos 武汉 北京 km</span>
    <span class="token keyword">return</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distance</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> source<span class="token punctuation">,</span> dest<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="d-georadius-获取临近元素" tabindex="-1"><a class="header-anchor" href="#d-georadius-获取临近元素" aria-hidden="true">#</a> d. georadius 获取临近元素</h4><p>georadius 以给定的经纬度为中心， 返回与中心的距离不超过给定最大距离的所有位置元素。</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">near</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token keyword">double</span> longitude<span class="token punctuation">,</span> <span class="token keyword">double</span> latitude<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// georadius xhh_pos 114.31 30.52 5km</span>
    <span class="token class-name">Circle</span> circle <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Circle</span><span class="token punctuation">(</span>longitude<span class="token punctuation">,</span> latitude<span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">*</span> <span class="token class-name">Metrics</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">.</span><span class="token function">getMultiplier</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span> args <span class="token operator">=</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span><span class="token punctuation">.</span><span class="token function">newGeoRadiusArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">includeDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">includeCoordinates</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sortAscending</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">GeoResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> circle<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="e-georadiusbymember-获取临近元素" tabindex="-1"><a class="header-anchor" href="#e-georadiusbymember-获取临近元素" aria-hidden="true">#</a> e. georadiusbymember 获取临近元素</h4><p>和上面的作用差不多，区别在于上面参数是经纬度，这里是位置</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">nearByPlace</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">,</span> <span class="token class-name">String</span> member<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// georadiusbymember xhh_pos 武汉 1100 km</span>
    <span class="token class-name">Distance</span> distance <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Distance</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token class-name">Metrics</span><span class="token punctuation">.</span><span class="token constant">KILOMETERS</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span> args <span class="token operator">=</span> <span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoRadiusCommandArgs</span><span class="token punctuation">.</span><span class="token function">newGeoRadiusArgs</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">includeDistance</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">includeCoordinates</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">sortAscending</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">GeoResults</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RedisGeoCommands<span class="token punctuation">.</span>GeoLocation</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">radius</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> member<span class="token punctuation">,</span> distance<span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="f-geohash" tabindex="-1"><a class="header-anchor" href="#f-geohash" aria-hidden="true">#</a> f. geohash</h4><p>GeoHash将二维的经纬度转换成字符串，将二维的经纬度转换为一维的字符串，可以方便业务优化；geohash有自己的一套算法，这里不详细展开，有兴趣的小伙伴可以搜索一下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">geoHash</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// geohash xhh_pos 武汉</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> results <span class="token operator">=</span> redisTemplate<span class="token punctuation">.</span><span class="token function">opsForGeo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">hash</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&quot;北京&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;上海&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;深圳&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-小结" tabindex="-1"><a class="header-anchor" href="#_3-小结" aria-hidden="true">#</a> 3. 小结</h3><p>geo更适用于地图这种业务场景中，关于这块的业务没怎么接触过，也不太好确定诸如百度地图、高德地图这种是否有在真实业务中采用；如果我们把目标缩小一点，改成一个地下车库的导航，统计所在位置周边的空余车位，位置导航，停车位记录，感觉有点靠谱</p><p>注意上面的六个操作命令，没有删除，但如果我们错误的写入了一个数据，难道没法删除么？</p><ul><li>使用 <code>zrem key member</code> 执行删除操作，如上面的case中，删除北京的坐标，可以: <code>zrem xhh_pos 北京</code></li></ul><p>为什么可以这么操作？</p><ul><li>geo的底层存储借助<code>ZSET</code>来实现的，因此zset的操作符都是支持的，geo添加的元素，会通过算法得出一个score，如上面case中的北京，武汉添加之后，zset值为</li></ul><figure><img src="`+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="ii-其他" tabindex="-1"><a class="header-anchor" href="#ii-其他" aria-hidden="true">#</a> II. 其他</h2><h3 id="_0-项目" tabindex="-1"><a class="header-anchor" href="#_0-项目" aria-hidden="true">#</a> 0. 项目</h3><p><strong>系列博文</strong></p>',36),m={href:"https://spring.hhui.top/spring-blog/2020/10/21/201021-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8BRedis%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B9%8BHyperLoglog/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://spring.hhui.top/spring-blog/2020/10/17/201017-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8BRedis%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B9%8B%E5%8F%91%E5%B8%83%E8%AE%A2%E9%98%85/",target:"_blank",rel:"noopener noreferrer"},v={href:"https://spring.hhui.top/spring-blog/2020/10/14/201014-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8BRedis%E9%AB%98%E7%BA%A7%E7%89%B9%E6%80%A7%E4%B9%8BBitmap%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF%E5%8F%8A%E5%BA%94%E7%94%A8%E5%9C%BA%E6%99%AF%E4%BB%8B%E7%BB%8D/",target:"_blank",rel:"noopener noreferrer"},E={href:"https://spring.hhui.top/spring-blog/2020/04/11/200411-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8BRedis%E4%B9%8B%E7%AE%A1%E9%81%93Pipelined%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},h={href:"https://spring.hhui.top/spring-blog/2019/09/27/190927-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B%E4%B9%8BRedis%E9%9B%86%E7%BE%A4%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",target:"_blank",rel:"noopener noreferrer"},b={href:"https://spring.hhui.top/spring-blog/2019/05/13/190513-SpringBoot%E7%B3%BB%E5%88%97%E6%95%99%E7%A8%8B%E5%BA%94%E7%94%A8%E7%AF%87%E4%B9%8B%E5%80%9F%E5%8A%A9Redis%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%AB%99%E7%82%B9%E7%BB%9F%E8%AE%A1%E6%9C%8D%E5%8A%A1/",target:"_blank",rel:"noopener noreferrer"},B={href:"https://spring.hhui.top/spring-blog/2018/12/25/181225-SpringBoot%E5%BA%94%E7%94%A8%E7%AF%87%E4%B9%8B%E5%80%9F%E5%8A%A9Redis%E5%AE%9E%E7%8E%B0%E6%8E%92%E8%A1%8C%E6%A6%9C%E5%8A%9F%E8%83%BD/",target:"_blank",rel:"noopener noreferrer"},A={href:"https://spring.hhui.top/spring-blog/2018/12/12/181212-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87Redis%E4%B9%8BZSet%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},_={href:"https://spring.hhui.top/spring-blog/2018/12/11/181211-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87Redis%E4%B9%8BSet%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},f={href:"https://spring.hhui.top/spring-blog/2018/12/02/181202-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87Redis%E4%B9%8BHash%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://spring.hhui.top/spring-blog/2018/11/09/181109-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87Redis%E4%B9%8BList%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%BD%BF%E7%94%A8%E5%A7%BF%E5%8A%BF/",target:"_blank",rel:"noopener noreferrer"},R={href:"https://spring.hhui.top/spring-blog/2018/11/08/181108-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87Redis%E4%B9%8BString%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E7%9A%84%E8%AF%BB%E5%86%99/",target:"_blank",rel:"noopener noreferrer"},S={href:"https://spring.hhui.top/spring-blog/2018/11/01/181101-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87Redis%E4%B9%8BJedis%E9%85%8D%E7%BD%AE/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://spring.hhui.top/spring-blog/2018/10/29/181029-SpringBoot%E9%AB%98%E7%BA%A7%E7%AF%87Redis%E4%B9%8B%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE/",target:"_blank",rel:"noopener noreferrer"},w=n("p",null,[n("strong",null,"工程源码")],-1),D={href:"https://github.com/liuyueyi/spring-boot-demo",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/122-redis-template",target:"_blank",rel:"noopener noreferrer"};function G(C,j){const a=l("ExternalLinkIcon");return p(),o("div",null,[d,c(" more "),k,n("ul",null,[n("li",null,[n("a",m,[s("【DB系列】Redis高级特性之HyperLoglog"),e(a)])]),n("li",null,[n("a",g,[s("【DB系列】Redis高级特性之发布订阅"),e(a)])]),n("li",null,[n("a",v,[s("【DB系列】Redis高级特性之Bitmap使用姿势及应用场景介绍"),e(a)])]),n("li",null,[n("a",E,[s("【DB系列】Redis之管道Pipelined使用姿势"),e(a)])]),n("li",null,[n("a",h,[s("【DB系列】Redis集群环境配置"),e(a)])]),n("li",null,[n("a",b,[s("【DB系列】借助Redis搭建一个简单站点统计服务（应用篇）"),e(a)])]),n("li",null,[n("a",B,[s("【DB系列】借助Redis实现排行榜功能（应用篇）"),e(a)])]),n("li",null,[n("a",A,[s("【DB系列】Redis之ZSet数据结构使用姿势"),e(a)])]),n("li",null,[n("a",_,[s("【DB系列】Redis之Set数据结构使用姿势"),e(a)])]),n("li",null,[n("a",f,[s("【DB系列】Redis之Hash数据结构使用姿势"),e(a)])]),n("li",null,[n("a",y,[s("【DB系列】Redis之List数据结构使用姿势"),e(a)])]),n("li",null,[n("a",R,[s("【DB系列】Redis之String数据结构的读写"),e(a)])]),n("li",null,[n("a",S,[s("【DB系列】Redis之Jedis配置"),e(a)])]),n("li",null,[n("a",F,[s("【DB系列】Redis之基本配置"),e(a)])])]),w,n("ul",null,[n("li",null,[s("工程："),n("a",D,[s("https://github.com/liuyueyi/spring-boot-demo"),e(a)])]),n("li",null,[s("项目源码: "),n("a",x,[s("https://github.com/liuyueyi/spring-boot-demo/tree/master/spring-boot/122-redis-template"),e(a)])])])])}const L=t(r,[["render",G],["__file","15.201027-SpringBoot系列教程Redis高级特性之GEO.html.vue"]]);export{L as default};
