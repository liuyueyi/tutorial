import{_ as e,V as c,W as i,X as n,Y as s,Z as a,$ as l,a0 as u,F as p}from"./framework-23f3cf9b.js";const k="/tutorial/imgs/column/quick-media/image/05181941_gJBV.jpg",r="/tutorial/imgs/column/quick-media/image/05182209_f6NC.jpg",d="/tutorial/imgs/column/quick-media/image/05182105_2smp.jpg",v="/tutorial/imgs/column/quick-media/image/05182138_My1E.png",m={},b=n("h2",{id:"背景",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#背景","aria-hidden":"true"},"#"),s(" 背景")],-1),g=u(`<ul><li>文字中包含英文字符时，分行计算问题</li><li>暂不支持竖排文字展示</li></ul><p>其中英文字符的计算已经修复，主要是通过<code>FontMetric</code>来计算字符串实际占用绘制的长度，这一块不做多讲，本篇主要集中在竖排文字的支持</p><h2 id="设计" tabindex="-1"><a class="header-anchor" href="#设计" aria-hidden="true">#</a> 设计</h2><blockquote><p>有前面的基础，在做竖排文字支持上，本以为是比较简单就能接入的，而实际的实现过程中，颇为坎坷</p></blockquote><h3 id="_1-竖排文字绘制" tabindex="-1"><a class="header-anchor" href="#_1-竖排文字绘制" aria-hidden="true">#</a> 1. 竖排文字绘制</h3><p>首先需要支持竖排文字的绘制，使用<code>Graphics2d</code>进行绘制时，暂不支持竖排绘制方式，因此我们需要自己来实现</p><p>而设计思路也比较简单，一个字一个字的绘制，x坐标不变，y坐标依次增加</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">draw</span><span class="token punctuation">(</span><span class="token class-name">Graphics2D</span> g2d<span class="token punctuation">,</span> <span class="token class-name">String</span> content<span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token class-name">FontMetrics</span> fontMetrics<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> lastY <span class="token operator">=</span> y<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> content<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        g2d<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> lastY<span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastY <span class="token operator">+=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">charWidth</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-自动换行" tabindex="-1"><a class="header-anchor" href="#_2-自动换行" aria-hidden="true">#</a> 2. 自动换行</h3><p>竖排的自动换行相比较与水平有点麻烦的是间隔问题，首先看下<code>FontMertric</code>的几个参数 <code>ascent</code>, <code>descent</code>, <code>height</code></p><figure><img src="`+k+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>举一个例子来看如何进行自动换行</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 列容量 </span>
contain <span class="token operator">=</span> <span class="token number">100</span>

<span class="token comment">// FontMetric 相关信息:</span>
fontMetric<span class="token punctuation">.</span>ascent <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
fontMetric<span class="token punctuation">.</span>descent <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
fontMetric<span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">22</span><span class="token punctuation">;</span>

<span class="token comment">// 待绘制的内容为</span>
content <span class="token operator">=</span> <span class="token string">&quot;这是一个待绘制的文本长度，期待自动换行&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>首先我们是需要获取内容的总长度，中文还比较好说，都是方块的，可以直接用 <code>fontMetrics.stringWidth(content)</code> 获取内容长度（实际为宽度），然后需要加空格(即<code>descent</code>)</p><p>所以计算最终的行数可以如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">// 72</span>
<span class="token keyword">int</span> l <span class="token operator">=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
 <span class="token comment">// 5</span>
<span class="token keyword">int</span> lineNum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fontMetrics<span class="token punctuation">.</span><span class="token function">stringWidth</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">+</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> lineLen<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据上面的计算， <code>l=72, lineNum=5;</code></p><p>然后就是一个字符一个字符的进行绘制，每次需要重新计算y坐标</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>tmpLen <span class="token operator">=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">charWidth</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其次就是需要判断是否要换行</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>lastTotal <span class="token operator">+=</span> tmpLen<span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>lastTotal <span class="token operator">&gt;</span> contain<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// 换行</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-从右到左支持" tabindex="-1"><a class="header-anchor" href="#_3-从右到左支持" aria-hidden="true">#</a> 3. 从右到左支持</h3><p>从左到右还比较好说，y坐标一直增加，当绘制的内容超过当前的图片时，直接在扩展后的图片上(0,0)位置进行绘制即可；</p><p>而从右到左则需要计算偏移量，如下图</p><figure><img src="`+r+`" alt="offset" tabindex="0" loading="lazy"><figcaption>offset</figcaption></figure><h2 id="实现" tabindex="-1"><a class="header-anchor" href="#实现" aria-hidden="true">#</a> 实现</h2><h3 id="_1-文本自动换行" tabindex="-1"><a class="header-anchor" href="#_1-文本自动换行" aria-hidden="true">#</a> 1. 文本自动换行</h3><p>实现一个公共方法，根据上面的思路用于文本的自动换行</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">splitVerticalStr</span><span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">,</span> <span class="token keyword">int</span> lineLen<span class="token punctuation">,</span> <span class="token class-name">FontMetrics</span> fontMetrics<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// 字体间距所占用的高度</span>
    <span class="token keyword">int</span> l <span class="token operator">=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// 分的行数</span>
    <span class="token keyword">int</span> lineNum <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fontMetrics<span class="token punctuation">.</span><span class="token function">stringWidth</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">+</span> l<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token keyword">float</span><span class="token punctuation">)</span> lineLen<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>lineNum <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>str<span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ans <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>lineNum<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> strLen <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> lastTotal <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> lastIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ansIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> tmpLen<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> strLen<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        tmpLen <span class="token operator">=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">charWidth</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        lastTotal <span class="token operator">+=</span> tmpLen<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>lastTotal <span class="token operator">&gt;</span> lineLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            ans<span class="token punctuation">[</span>ansIndex<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
            lastIndex <span class="token operator">=</span> i<span class="token punctuation">;</span>
            lastTotal <span class="token operator">=</span> tmpLen<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>lastIndex <span class="token operator">&lt;</span> strLen<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        ans<span class="token punctuation">[</span>ansIndex<span class="token punctuation">]</span> <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>lastIndex<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的实现，唯一需要注意的是，换行时，y坐标自增的场景下，需要计算 <code>fontMetric.descent</code> 的值，否则换行偏移会有问题</p><h3 id="_2-垂直文本的绘制" tabindex="-1"><a class="header-anchor" href="#_2-垂直文本的绘制" aria-hidden="true">#</a> 2. 垂直文本的绘制</h3><h4 id="_1-起始y坐标计算" tabindex="-1"><a class="header-anchor" href="#_1-起始y坐标计算" aria-hidden="true">#</a> 1. 起始y坐标计算</h4><p>因为我们支持集中不同的对齐方式，所以在计算起始的y坐标时，会有出入, 实现如下</p><ul><li>上对齐，则 y = 上边距</li><li>下对其， 则 y = 总高度 - 内容高度 - 下边距</li><li>居中， 则 y = (总高度 - 内容高度) / 2</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 * 垂直绘制时，根据不同的对其方式，计算起始的y坐标
 *
 * <span class="token keyword">@param</span> <span class="token parameter">topPadding</span>    上边距
 * <span class="token keyword">@param</span> <span class="token parameter">bottomPadding</span> 下边距
 * <span class="token keyword">@param</span> <span class="token parameter">height</span>        总高度
 * <span class="token keyword">@param</span> <span class="token parameter">strSize</span>       文本内容对应绘制的高度
 * <span class="token keyword">@param</span> <span class="token parameter">style</span>         对其样式
 * <span class="token keyword">@return</span>
 */</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">calOffsetY</span><span class="token punctuation">(</span><span class="token keyword">int</span> topPadding<span class="token punctuation">,</span> <span class="token keyword">int</span> bottomPadding<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">,</span> <span class="token keyword">int</span> strSize<span class="token punctuation">,</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span> style<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>style <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token constant">TOP</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> topPadding<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>style <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token constant">BOTTOM</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> height <span class="token operator">-</span> bottomPadding <span class="token operator">-</span> strSize<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">(</span>height <span class="token operator">-</span> strSize<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-实际绘制y坐标计算" tabindex="-1"><a class="header-anchor" href="#_2-实际绘制y坐标计算" aria-hidden="true">#</a> 2. 实际绘制y坐标计算</h4><p>实际绘制中，y坐标还不能直接使用上面返回值，因为这个返回是字体的最上边对应的坐标，因此需要将实际绘制y坐标，向下偏移一个字</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>realY <span class="token operator">=</span> <span class="token function">calOffsetY</span><span class="token punctuation">(</span>xxx<span class="token punctuation">)</span> <span class="token operator">+</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getAscent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//...</span>

<span class="token comment">// 每当绘制完一个文本后，下个文本的Y坐标，需要加上这个文本所占用的高度+间距</span>
realY <span class="token operator">+=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">charWidth</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-换行时-x坐标计算" tabindex="-1"><a class="header-anchor" href="#_3-换行时-x坐标计算" aria-hidden="true">#</a> 3. 换行时，x坐标计算</h4><p>绘制方式的不同，从左到右与从右到左两种场景下，自动换行后，新行的x坐标的增量计算方式也是不同的</p><ul><li>从左到右：<code>int fontWidth = 字体宽度 + 行间距</code></li><li>从右到左：<code>int fontWidth = - (字体宽度 + 行间距）</code></li></ul><h4 id="完整的实现逻辑如下" tabindex="-1"><a class="header-anchor" href="#完整的实现逻辑如下" aria-hidden="true">#</a> 完整的实现逻辑如下</h4><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code> <span class="token doc-comment comment">/**
 * 垂直文字绘制
 *
 * <span class="token keyword">@param</span> <span class="token parameter">g2d</span>
 * <span class="token keyword">@param</span> <span class="token parameter">content</span> 待绘制的内容
 * <span class="token keyword">@param</span> <span class="token parameter">x</span>       绘制的起始x坐标
 * <span class="token keyword">@param</span> <span class="token parameter">options</span> 配置项
 */</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">drawVerticalContent</span><span class="token punctuation">(</span><span class="token class-name">Graphics2D</span> g2d<span class="token punctuation">,</span>
                                       <span class="token class-name">String</span> content<span class="token punctuation">,</span>
                                       <span class="token keyword">int</span> x<span class="token punctuation">,</span>
                                       <span class="token class-name">ImgCreateOptions</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> topPadding <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> bottomPadding <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    g2d<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FontMetrics</span> fontMetrics <span class="token operator">=</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 实际填充内容的高度， 需要排除上下间距</span>
    <span class="token keyword">int</span> contentH <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token function">splitVerticalStr</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> contentH<span class="token punctuation">,</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> fontWidth <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getDrawStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>DrawStyle</span><span class="token punctuation">.</span><span class="token constant">VERTICAL_RIGHT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 从右往左绘制时，偏移量为负</span>
        fontWidth <span class="token operator">=</span> <span class="token operator">-</span>fontWidth<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getFontColor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> lastX <span class="token operator">=</span> x<span class="token punctuation">,</span> lastY<span class="token punctuation">,</span> startY<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> tmp <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        lastY <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        startY <span class="token operator">=</span> <span class="token function">calOffsetY</span><span class="token punctuation">(</span>topPadding<span class="token punctuation">,</span> bottomPadding<span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                fontMetrics<span class="token punctuation">.</span><span class="token function">stringWidth</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span> <span class="token operator">+</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>tmp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getAlignStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token operator">+</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getAscent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> tmp<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            g2d<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                    lastX<span class="token punctuation">,</span>
                    startY <span class="token operator">+</span> lastY<span class="token punctuation">)</span><span class="token punctuation">;</span>

            lastY <span class="token operator">+=</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">charWidth</span><span class="token punctuation">(</span>tmp<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDescent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        lastX <span class="token operator">+=</span> fontWidth<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-垂直图片绘制" tabindex="-1"><a class="header-anchor" href="#_3-垂直图片绘制" aria-hidden="true">#</a> 3. 垂直图片绘制</h3><p>文本绘制实现之后，再来看图片，就简单很多了，因为没有换行的问题，所以只需要计算y坐标的值即可</p><p>此外当图片大于参数指定的高度时，对图片进行按照高度进行缩放处理；当小于高度时，就原图绘制即可</p><p>实现逻辑如下</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">drawVerticalImage</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> source<span class="token punctuation">,</span>
                                        <span class="token class-name">BufferedImage</span> dest<span class="token punctuation">,</span>
                                        <span class="token keyword">int</span> x<span class="token punctuation">,</span>
                                        <span class="token class-name">ImgCreateOptions</span> options<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> <span class="token function">getG2d</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>dest<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> w <span class="token operator">=</span> h <span class="token operator">*</span> dest<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> dest<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> y <span class="token operator">=</span> <span class="token function">calOffsetY</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            h<span class="token punctuation">,</span>
            options<span class="token punctuation">.</span><span class="token function">getAlignStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">// xxx 传入的x坐标，即 contentW 实际上已经包含了行间隔，因此不需额外添加</span>
    <span class="token keyword">int</span> drawX <span class="token operator">=</span> x<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getDrawStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>DrawStyle</span><span class="token punctuation">.</span><span class="token constant">VERTICAL_RIGHT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        drawX <span class="token operator">=</span> source<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> w <span class="token operator">-</span> drawX<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    g2d<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>dest<span class="token punctuation">,</span> drawX<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> w<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-封装类的实现" tabindex="-1"><a class="header-anchor" href="#_4-封装类的实现" aria-hidden="true">#</a> 4. 封装类的实现</h3><p>正如前面一篇博文中实现的水平图文生成的逻辑一样，垂直图文生成也采用之前的思路：</p><ul><li>每次在文本绘制时，直接进行渲染；</li><li>记录实际内容绘制的宽度（这个宽度包括左or右边距）</li><li>每次绘制时，判断当前的画布是否容纳得下所有的内容 <ul><li>容的下，直接绘制即可</li><li>容不下，则需要扩充画布，生成一个更宽的画布，将原来的内容重新渲染在新画布上，然后在新画布上进行内容的填充</li></ul></li></ul><p>因为从左到右和从右到左的绘制在计算x坐标的增量时，扩充画布的重新绘制时，有些明显的区别，所以为了逻辑清晰，将两种场景分开，提供了两个方法</p><p>实现步骤:</p><ol><li>计算实际绘制内容占用的宽度</li><li>判断是否需要扩充画布（需要则扩充）</li><li>绘制文本</li><li>更新内容的宽度</li></ol><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Builder</span> <span class="token function">drawVerticalLeftContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>contentW <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 初始化边距</span>
        contentW <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FontMetrics</span> fontMetrics <span class="token operator">=</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>strs<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// empty line</span>
        strs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> fontSize <span class="token operator">=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> lineNum <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">calVerticalLineNum</span><span class="token punctuation">(</span>strs<span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontMetrics<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 计算填写内容需要占用的宽度</span>
    <span class="token keyword">int</span> width <span class="token operator">=</span> lineNum <span class="token operator">*</span> <span class="token punctuation">(</span>fontSize <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>
                <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>width <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> contentW <span class="token operator">+</span> width <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 超过原来图片宽度的上限, 则需要扩充图片长度</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>
                result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>width <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// 绘制文字</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">drawVerticalContent</span><span class="token punctuation">(</span>g2d<span class="token punctuation">,</span> str<span class="token punctuation">,</span>
                contentW <span class="token operator">+</span> <span class="token punctuation">(</span>fontSize <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>index <span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    contentW <span class="token operator">+=</span> width<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>


<span class="token keyword">private</span> <span class="token class-name">Builder</span> <span class="token function">drawVerticalRightContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>contentW <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        contentW <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">FontMetrics</span> fontMetrics <span class="token operator">=</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> strs <span class="token operator">=</span> <span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>content<span class="token punctuation">,</span> <span class="token string">&quot;\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>strs<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// empty line</span>
        strs <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        strs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> fontSize <span class="token operator">=</span> fontMetrics<span class="token punctuation">.</span><span class="token function">getFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> lineNum <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">calVerticalLineNum</span><span class="token punctuation">(</span>strs<span class="token punctuation">,</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> options<span class="token punctuation">.</span><span class="token function">getTopPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fontMetrics<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 计算填写内容需要占用的宽度</span>
    <span class="token keyword">int</span> width <span class="token operator">=</span> lineNum <span class="token operator">*</span> <span class="token punctuation">(</span>fontSize <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>
                <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>width <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> contentW <span class="token operator">+</span> width <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 超过原来图片宽度的上限, 则需要扩充图片长度</span>
        <span class="token keyword">int</span> newW <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>width <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>
                newW<span class="token punctuation">,</span>
                options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                newW <span class="token operator">-</span> result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token number">0</span><span class="token punctuation">,</span>
                result<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// 绘制文字</span>
    <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> offsetX <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> contentW<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str <span class="token operator">:</span> strs<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">drawVerticalContent</span><span class="token punctuation">(</span>g2d<span class="token punctuation">,</span> str<span class="token punctuation">,</span>
                offsetX <span class="token operator">-</span> <span class="token punctuation">(</span>fontSize <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">++</span>index<span class="token punctuation">)</span>
                <span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    contentW <span class="token operator">+=</span> width<span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对比从左到右与从右到左，区别主要是两点</p><ul><li>扩充时，在新画布上绘制原画布内容的x坐标计算，一个为0，一个为 <code>新宽度-旧宽度</code></li><li>offsetX 的计算</li></ul><p>上面是文本绘制，图片绘制比较简单，基本上和水平绘制时，没什么区别，只不过是扩充时的w，h计算不同罢了</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token class-name">Builder</span> <span class="token function">drawVerticalImage</span><span class="token punctuation">(</span><span class="token class-name">BufferedImage</span> bufferedImage<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> padding <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getDrawStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>DrawStyle</span><span class="token punctuation">.</span><span class="token constant">VERTICAL_RIGHT</span> <span class="token operator">?</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 实际绘制图片的宽度</span>
    <span class="token keyword">int</span> bfImgW <span class="token operator">=</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getHeight</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>result <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>
                <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>bfImgW <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> contentW <span class="token operator">+</span> bfImgW <span class="token operator">+</span> padding<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> realW <span class="token operator">=</span> result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span>bfImgW <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">BASE_ADD_H</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> offsetX <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getDrawStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>DrawStyle</span><span class="token punctuation">.</span><span class="token constant">VERTICAL_RIGHT</span> <span class="token operator">?</span> realW <span class="token operator">-</span> result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span>
        result <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">createImg</span><span class="token punctuation">(</span>
                realW<span class="token punctuation">,</span>
                options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                offsetX<span class="token punctuation">,</span>
                <span class="token number">0</span><span class="token punctuation">,</span>
                result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> w <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">drawVerticalImage</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> bufferedImage<span class="token punctuation">,</span> contentW<span class="token punctuation">,</span> options<span class="token punctuation">)</span><span class="token punctuation">;</span>
    contentW <span class="token operator">+=</span> w <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLinePadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-输出" tabindex="-1"><a class="header-anchor" href="#_5-输出" aria-hidden="true">#</a> 5. 输出</h3><p>上面是绘制的过程，绘制完毕之后，需要输出为图片的，因此对于这个输出需要再适配一把</p><p>再前一篇的基础上，输出新增了签名+背景的支持，这里一并说了</p><ul><li>计算生成图片的宽高</li><li>有签名时，绘制签名背景，在最下方绘制签名文本</li><li>背景图片</li><li>绘制填充内容</li></ul><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">BufferedImage</span> <span class="token function">asImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> leftPadding <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> topPadding <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> bottomPadding <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>border<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        leftPadding <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>borderLeftPadding<span class="token punctuation">;</span>
        topPadding <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>borderTopPadding<span class="token punctuation">;</span>
        bottomPadding <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>borderBottomPadding<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token keyword">int</span> x <span class="token operator">=</span> leftPadding<span class="token punctuation">;</span>
    <span class="token keyword">int</span> y <span class="token operator">=</span> topPadding<span class="token punctuation">;</span>


    <span class="token comment">// 实际生成图片的宽， 高</span>
    <span class="token keyword">int</span> realW<span class="token punctuation">,</span> realH<span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 垂直文本输出</span>
        realW <span class="token operator">=</span> contentW <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getLeftPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getRightPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        realH <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getImgH</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span> <span class="token comment">// 水平文本输出</span>
        realW <span class="token operator">=</span> options<span class="token punctuation">.</span><span class="token function">getImgW</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        realH <span class="token operator">=</span> contentH <span class="token operator">+</span> options<span class="token punctuation">.</span><span class="token function">getBottomPadding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">BufferedImage</span> bf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span><span class="token punctuation">(</span>leftPadding <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> realW<span class="token punctuation">,</span> realH <span class="token operator">+</span> topPadding <span class="token operator">+</span> bottomPadding<span class="token punctuation">,</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">.</span><span class="token constant">TYPE_INT_ARGB</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Graphics2D</span> g2d <span class="token operator">=</span> <span class="token class-name">GraphicUtil</span><span class="token punctuation">.</span><span class="token function">getG2d</span><span class="token punctuation">(</span>bf<span class="token punctuation">)</span><span class="token punctuation">;</span>


    <span class="token comment">// 绘制边框</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>border<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>borderColor <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">ColorUtil</span><span class="token punctuation">.</span><span class="token constant">OFF_WHITE</span> <span class="token operator">:</span> borderColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> realW <span class="token operator">+</span> <span class="token punctuation">(</span>leftPadding <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> realH <span class="token operator">+</span> topPadding <span class="token operator">+</span> bottomPadding<span class="token punctuation">)</span><span class="token punctuation">;</span>


        <span class="token comment">// 绘制签名</span>
        g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">GRAY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// 图片生成时间</span>
        <span class="token class-name">String</span> date <span class="token operator">=</span> <span class="token class-name">DateFormatUtils</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        borderSignText <span class="token operator">=</span> borderSignText <span class="token operator">+</span> <span class="token string">&quot;  &quot;</span> <span class="token operator">+</span> date<span class="token punctuation">;</span>

        <span class="token keyword">int</span> fSize <span class="token operator">=</span> <span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span> realW <span class="token operator">/</span> <span class="token punctuation">(</span>borderSignText<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> addY <span class="token operator">=</span> <span class="token punctuation">(</span>borderBottomPadding <span class="token operator">-</span> fSize<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
        g2d<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token class-name">ImgCreateOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_FONT</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ImgCreateOptions</span><span class="token punctuation">.</span><span class="token constant">DEFAULT_FONT</span><span class="token punctuation">.</span><span class="token function">getStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fSize<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>borderSignText<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y <span class="token operator">+</span> addY <span class="token operator">+</span> realH <span class="token operator">+</span> g2d<span class="token punctuation">.</span><span class="token function">getFontMetrics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAscent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// 绘制背景</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getBgImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        g2d<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>bgColor <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span> <span class="token operator">:</span> bgColor<span class="token punctuation">)</span><span class="token punctuation">;</span>
        g2d<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> realW<span class="token punctuation">,</span> realH<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        g2d<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getBgImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> realW<span class="token punctuation">,</span> realH<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>


    <span class="token comment">// 绘制内容</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>options<span class="token punctuation">.</span><span class="token function">getDrawStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>DrawStyle</span><span class="token punctuation">.</span><span class="token constant">VERTICAL_RIGHT</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        x <span class="token operator">=</span> bf<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> result<span class="token punctuation">.</span><span class="token function">getWidth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> x<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    g2d<span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span>result<span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    g2d<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> bf<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h2><p>测试case</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testLocalGenVerticalImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> h <span class="token operator">=</span> <span class="token number">300</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> leftPadding <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> topPadding <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> bottomPadding <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> linePadding <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token class-name">Font</span> font <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">&quot;手札体&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Font</span><span class="token punctuation">.</span><span class="token constant">PLAIN</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ImgCreateWrapper<span class="token punctuation">.</span>Builder</span> build <span class="token operator">=</span> <span class="token class-name">ImgCreateWrapper</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setImgH</span><span class="token punctuation">(</span>h<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setDrawStyle</span><span class="token punctuation">(</span><span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>DrawStyle</span><span class="token punctuation">.</span><span class="token constant">VERTICAL_LEFT</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setLeftPadding</span><span class="token punctuation">(</span>leftPadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setTopPadding</span><span class="token punctuation">(</span>topPadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBottomPadding</span><span class="token punctuation">(</span>bottomPadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setLinePadding</span><span class="token punctuation">(</span>linePadding<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setAlignStyle</span><span class="token punctuation">(</span><span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token constant">TOP</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBgColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">WHITE</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBorder</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">setBorderColor</span><span class="token punctuation">(</span><span class="token number">0xFFF7EED6</span><span class="token punctuation">)</span>
            <span class="token punctuation">;</span>


    <span class="token class-name">BufferedReader</span> reader <span class="token operator">=</span> <span class="token class-name">FileReadUtil</span><span class="token punctuation">.</span><span class="token function">createLineRead</span><span class="token punctuation">(</span><span class="token string">&quot;text/poem.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> line<span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        build<span class="token punctuation">.</span><span class="token function">drawContent</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    build<span class="token punctuation">.</span><span class="token function">setAlignStyle</span><span class="token punctuation">(</span><span class="token class-name">ImgCreateOptions<span class="token punctuation">.</span>AlignStyle</span><span class="token punctuation">.</span><span class="token constant">BOTTOM</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">drawImage</span><span class="token punctuation">(</span><span class="token string">&quot;/Users/yihui/Desktop/sina_out.jpg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    build<span class="token punctuation">.</span><span class="token function">setFontColor</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLUE</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">drawContent</span><span class="token punctuation">(</span><span class="token string">&quot;后缀签名&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">drawContent</span><span class="token punctuation">(</span><span class="token string">&quot;灰灰自动生成&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">BufferedImage</span> img <span class="token operator">=</span> build<span class="token punctuation">.</span><span class="token function">asImage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ImageIO</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">&quot;png&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;/Users/yihui/Desktop/2out.png&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>输出图片</p><figure><img src="`+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',69),f=n("img",{src:"https://static.oschina.net/uploads/img/201709/05182105_2smp.jpg",alt:"https://static.oschina.net/uploads/img/201709/05182105_2smp.jpg",tabindex:"0",loading:"lazy"},null,-1),h={href:"https://static.oschina.net/uploads/img/201709/05182105_2smp.jpg",target:"_blank",rel:"noopener noreferrer"},y=n("p",null,"再输出一个从右到左的，居中显示样式",-1),w=n("figure",null,[n("img",{src:v,alt:"",tabindex:"0",loading:"lazy"}),n("figcaption")],-1),_=n("h2",{id:"其他",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#其他","aria-hidden":"true"},"#"),s(" 其他")],-1),I={href:"https://my.oschina.net/u/566591/blog/1514644",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/liuyueyi/quick-media",target:"_blank",rel:"noopener noreferrer"};function P(S,W){const o=p("RouterLink"),t=p("ExternalLinkIcon");return c(),i("div",null,[b,n("p",null,[s("前面"),a(o,{to:"/git/quick-media/image/2.Java%E5%AE%9E%E7%8E%B0%E9%95%BF%E5%9B%BE%E6%96%87%E5%90%88%E6%88%90.html"},{default:l(()=>[s("2.Java实现长图文生成")]),_:1}),s(" 中实现了一个基本的长图文生成工具，但遗留了一些问题")]),g,n("figure",null,[f,n("figcaption",null,[n("a",h,[s("https://static.oschina.net/uploads/img/201709/05182105_2smp.jpg"),a(t)])])]),y,w,_,n("p",null,[s("相关博文："),n("a",I,[s("《Java 实现长图文生成》"),a(t)])]),n("p",null,[s("项目地址："),n("a",x,[s("https://github.com/liuyueyi/quick-media"),a(t)])])])}const L=e(m,[["render",P],["__file","3.Java实现竖排长图文生成.html.vue"]]);export{L as default};
