import{_ as o,V as n,W as p,Y as i,Z as a,$ as e,a1 as l,F as r}from"./framework-094145d2.js";const s="/tutorial/imgs/column/ai/3-1.webp",c="/tutorial/imgs/column/ai/3-2.webp",d="/tutorial/imgs/column/ai/3-3.webp",g="/tutorial/imgs/column/ai/3-4.webp",u="/tutorial/imgs/column/ai/3-5.webp",f="/tutorial/imgs/column/ai/3-6.webp",m="/tutorial/imgs/column/ai/3-7.webp",h="/tutorial/imgs/column/ai/3-8.webp",_="/tutorial/imgs/column/ai/3-9.webp",b="/tutorial/imgs/column/ai/3-10.webp",x="/tutorial/imgs/column/ai/3-11.webp",k="/tutorial/imgs/column/ai/3-12.webp",w="/tutorial/imgs/column/ai/3-13.webp",y="/tutorial/imgs/column/ai/3-14.webp",z="/tutorial/imgs/column/ai/3-15.webp",A="/tutorial/imgs/column/ai/3-16.webp",S="/tutorial/imgs/column/ai/3-17.webp",E="/tutorial/imgs/column/ai/3-18.webp",v="/tutorial/imgs/column/ai/3-19.webp",q="/tutorial/imgs/column/ai/3-20.webp",I="/tutorial/imgs/column/ai/3-21.webp",B="/tutorial/imgs/column/ai/3-22.webp",C="/tutorial/imgs/column/ai/3-23.webp",H="/tutorial/imgs/column/ai/3-24.webp",P="/tutorial/imgs/column/ai/3-25.webp",N="/tutorial/imgs/column/ai/3-26.webp",K="/tutorial/imgs/column/ai/3-27.webp",V={},D=l('<p>上一篇使用图文的方式演示了如何从0到1借助ai生成一个可运行的小游戏，接下来我将通过图文的方式，手把手教你将上面生成的小游戏，打包出来供其他人玩耍</p><p>接下来将分别介绍常见的三种打包发行方式</p><blockquote><p>接下来的动作将主要在HBuilder中执行</p></blockquote><h2 id="一、打包成h5游戏" tabindex="-1"><a class="header-anchor" href="#一、打包成h5游戏" aria-hidden="true">#</a> 一、打包成H5游戏</h2><p>h5游戏，主要用于浏览器直接访问玩耍，需要配置域名，没有域名的小伙伴，可以考虑一些云服务的PAGES服务来实现，接下来介绍下Cloudflare的托管部署方式</p><h3 id="step1-打包" tabindex="-1"><a class="header-anchor" href="#step1-打包" aria-hidden="true">#</a> Step1. 打包</h3><p>Hbuilder ，一次点击 发行 -&gt; 网站PC Web 或手机H5 如果出现下面的异常，则按照下图方式进行修正</p><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>打开项目下的 manifest.json 文件</li><li>在右边的视图中，点击重新获取按钮 <ul><li>如果没有登录的，会让你输入unicod的账号密码，登录即可</li><li>成功之后，就会得到下面3所示的AppID</li></ul></li></ul><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>上面问题修复之后，再次进行打包，正确的样式如下</p><ul><li>因为接下来的演示是基于Cloudflare进行托管，所以下面的域名可以先随便填一个</li></ul><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后进入上面的输出目录，将目录下的内容打包为zip文件，如下图操作</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step2-发行cloudflare" tabindex="-1"><a class="header-anchor" href="#step2-发行cloudflare" aria-hidden="true">#</a> Step2. 发行Cloudflare</h3><blockquote><p>没有账号的小伙伴自行注册，后续教程给出完整的注册使用流程，敬请蹲守一波😄</p></blockquote><ul><li>直接进入 Workers &amp; Pages 目录</li><li>点击create按钮，进入创建应用页面</li><li>切换Tab页到Pages -&gt; 点击Upload assets -&gt; 进入发布页面</li><li>输入项目名，此时会自动给你分配一个访问域名</li><li>接着上传zip压缩包</li><li>最后点击发布按钮</li></ul><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>发布成功的页面如下，我们可以直接点击域名，看一下效果（重点说明一下：上传的压缩包，请确保index.html在最外层）</p><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>直接点击上面的域名，就可以访问我们的小游戏啦</p>',22),F={href:"https://sheepremove.pages.dev/",target:"_blank",rel:"noopener noreferrer"},G=l('<figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step3-发行到自己的服务器或者oss托管" tabindex="-1"><a class="header-anchor" href="#step3-发行到自己的服务器或者oss托管" aria-hidden="true">#</a> Step3. 发行到自己的服务器或者OSS托管</h3><p>当然如果你有自己的服务器或者OSS，也是可以将h5游戏部署上去的，下面简单介绍下将H5游戏托管到免费的七牛云空间下</p><ol><li>首先在oss上，创建对应的目录空间，如 /app/sheepremove</li></ol><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>修改HBuilder中web打包的输出前缀</li></ol><ul><li>manifest.json 文件 -&gt; web配置 -&gt; 运行的基础路径</li><li>启用https协议这个看你自己的托管域名，支不支持https，支持就选中；不支持就取消</li><li>然后重新发行一次： 菜单发行 -&gt; 网站-PC</li></ul><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>上传文件到七牛云</li></ol><blockquote><p>注意此时是文件的形式上传，不用之前的zip压缩包了</p></blockquote><figure><img src="'+b+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li>体验一下</li></ol>',12),O={href:"http://cdn.hhui.top/app/sheepremove/index.html",target:"_blank",rel:"noopener noreferrer"},T=l('<figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、打包成微信小游戏" tabindex="-1"><a class="header-anchor" href="#二、打包成微信小游戏" aria-hidden="true">#</a> 二、打包成微信小游戏</h2><blockquote><p>接下来我们看一下将上面的垃圾小游戏生成微信小游戏来体验一下，此时我们需要借助微信开发工具</p></blockquote><h3 id="step1-微信开发者工具-生成appid" tabindex="-1"><a class="header-anchor" href="#step1-微信开发者工具-生成appid" aria-hidden="true">#</a> Step1: 微信开发者工具，生成appid</h3><ul><li>将生成的appid记录出来，后续打包时会用到</li><li>注意：这里选择小程序，如果选择小游戏时，uniapp输出到微信时会报错</li></ul><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step2-打包微信小程序" tabindex="-1"><a class="header-anchor" href="#step2-打包微信小程序" aria-hidden="true">#</a> Step2: 打包微信小程序</h3><p>配置小程序AppID</p><figure><img src="'+w+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>case1：运行小程序</strong></p><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>然后hbuilder会自动打开微信开发者工具，启动我们的 垃圾消除游戏 , 如下图</p><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><blockquote><p>说明：多平台时，可能出现各种奇怪的问题，需要针对性的进行提问解决 如：在微信小程序运行时，也出现了一个小问题，游戏区域未显示，同样将问题抛给Trae来修复</p></blockquote><figure><img src="'+A+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>case2: 发行小程序</strong></p><p>这种场景适用于我们开发完毕，准备提交给微信后台去申请上线，流程如下（由于没准备上线小程序，所以就不演示小程序上线流程了，放在后续的教程进行介绍）</p><figure><img src="'+S+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="三、打包成android-app" tabindex="-1"><a class="header-anchor" href="#三、打包成android-app" aria-hidden="true">#</a> 三、打包成Android app</h2><p>接下来我们再来演示一下如何将上面的小游戏打包成android 应用包</p><h3 id="step1-uniapp开发者后台配置签名" tabindex="-1"><a class="header-anchor" href="#step1-uniapp开发者后台配置签名" aria-hidden="true">#</a> Step1: uniapp开发者后台配置签名</h3>',21),W={href:"https://dev.dcloud.net.cn/pages/app/list",target:"_blank",rel:"noopener noreferrer"},j=l('<p>然后点击应用，进入详情：</p><ul><li>各平台信息 -&gt; 点击新增</li><li>进入编辑页，依次补齐下面几个信息</li><li>Android App</li><li>正式版/测试版 -- 都可以</li><li>包名：打包出来的签名，按照惯性约定命名即可</li><li>应用签名 SHA1, SHA256 ---&gt; 这个是基于你打包时的签名证书生成的 （后续android输出篇教程详细介绍）</li></ul><figure><img src="'+E+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>配置完毕之后，点击提交，返回应用列表</p><ul><li>点击创建离线Key，再弹窗中点击创建</li><li>然后应用列表的按钮变成查看离线key</li><li>然后保存弹窗出来的appid</li></ul><figure><img src="'+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step2-打包生成android的离线资源" tabindex="-1"><a class="header-anchor" href="#step2-打包生成android的离线资源" aria-hidden="true">#</a> Step2: 打包生成Android的离线资源</h3><ul><li>菜单点击发行</li><li>依次执行 App-Andoird/IOS-本地打包 -&gt; 生成本地打包App资源</li></ul><figure><img src="'+q+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step3-androidstudio实现apk输出" tabindex="-1"><a class="header-anchor" href="#step3-androidstudio实现apk输出" aria-hidden="true">#</a> Step3: AndroidStudio实现apk输出</h3><p>这里直接使用我已经封装好的Android基础工程，跳过基于uniapp的原始项目工程的改造过程；我们接下来看一下如何基于这个基础工程来生成我们的apk包</p><p>1.拷贝资源</p><ul><li>进入android项目的 simpleDemo/src/main/assets/apps 目录</li><li>删除目录下的文件</li><li>将上面hbuilder生成的资源拷贝进来</li></ul><figure><img src="'+I+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="2"><li>修改data/dcloud_control.xml中的appid</li></ol><p>将appid改为上面文件夹名（也可以直接在uniapp的后台查看appid)</p><figure><img src="'+B+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="3"><li>修改AndroidManifest.xml中包名和dcloud_appkey</li></ol><ul><li>package：Step2中填的包名</li><li>appKey: Step2中获取的离线key</li></ul><figure><img src="'+C+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="4"><li>修改build.gradle中的包名</li></ol><ul><li>Namespace: 上面的包名</li><li>applicationid：上面的包名</li></ul><figure><img src="'+H+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="5"><li>修改应用名和logo</li></ol><ul><li>应用名：res/values/strings.xml 文件中 app_name</li></ul><figure><img src="'+P+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>logo: res/drawable 下的 icon.9.png</li></ul><p>将前面生成的icon，拷贝到上面的drawable目录下，然后删除原来的icon.9.png</p><figure><img src="'+N+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ol start="6"><li>打包 - 步骤如下：</li></ol><ul><li>菜单，点击 Build</li><li>在下拉框中，选择 Generate Signed App Bundle/APK</li><li>选择APK</li><li>点击Next</li><li>输入打包证书地址、密码、别名等信息</li><li>选择release</li><li>点击create，等待下面打包成功的提示</li><li>在 simpleDemo/release 目录下可以看到输出的apk包</li></ul><figure><img src="'+K+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="step4-安装体验" tabindex="-1"><a class="header-anchor" href="#step4-安装体验" aria-hidden="true">#</a> Step4：安装体验</h3><p>直接用手机安装一下上面的apk，下面是实际的体验视频（在视频中你也会发现打开会有版本的弹窗提示，这个是uniapp的提醒，可以消除掉；以及android端的样式还需要调整下，这里就不详细展开了）</p><p>有兴趣体验的小伙伴，可以下载apk:（说明，这个安装包中集成了谷歌的测试广告，后续在apk打包篇中会介绍如何给应用加上广告变现）</p>',35),L={href:"http://cdn.hhui.top/app/sheepremove/%E5%9E%83%E5%9C%BE%E6%B6%88%E9%99%A4%E5%B0%8F%E6%B8%B8%E6%88%8F.apk",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://mp.weixin.qq.com/s/mu9l0y18mNE3PlI8EQhrYw",target:"_blank",rel:"noopener noreferrer"},M=i("h2",{id:"四、小结",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#四、小结","aria-hidden":"true"},"#"),a(" 四、小结")],-1),Q=i("p",null,"这个垃圾消除小游戏的开动到apk的手机完整运行，再加上完成本篇文章，总计耗时 5 小时左右，说长不长，说短不短。",-1),U=i("p",null,"上面小游戏的所有代码全部由AI生成，我主要发挥的作用就是给ai喂我的想法、以及适当的告诉它怎么解决问题（有时候ai解决问题的速度有点让人难受），一个完整的流程下来，编程小白想要完成一个自己的h5/小程序/app游戏可能有点挑战，但是耐心怼一波，也不是不可能出现奇迹",-1),Z=i("p",null,"最后我想说的一点是，AI正在飞速发展，作为一个十年的互联网的coder真心希望所有的程序员不要傲慢，你可能认为AICoding还很初级、经常制造各种垃圾，但不得不说现如今AiCoding已经对初级程序员已经发起了挑战，同时也为所有的非程序员，打开了一个实现自己想法/产品的大门。",-1),$=i("p",null,"我是一灰灰，后续我将会给大家带来更多的AICoding的系列教程，比如上面提到但是没有展开的",-1),J=i("p",null,"• 各编程工具的安装、调试、基本使用姿势介绍 • 项目开发管理的阶段性保存方案 • H5托管相关知识点：CloudFlare、GitHub Pages、自己专属服务器托管，接入Google AdSense变现 • 微信小程序的发包上线全流程 • Android的广告集成相关",-1);function R(X,ii){const t=r("ExternalLinkIcon");return n(),p("div",null,[D,i("ul",null,[i("li",null,[a("域名是： "),i("a",F,[a("https://sheepremove.pages.dev/"),e(t)])])]),G,i("blockquote",null,[i("p",null,[i("a",O,[a("http://cdn.hhui.top/app/sheepremove/index.html"),e(t)])])]),T,i("p",null,[a("首先进入开发者后台："),i("a",W,[a("https://dev.dcloud.net.cn/pages/app/list"),e(t)])]),j,i("ul",null,[i("li",null,[i("a",L,[a("APK下载地址: "),e(t)])])]),i("p",null,[a("演示视频，原文查看: - "),i("a",Y,[a("毫无技术难度：由0到1基于AI完成“垃圾消除小游戏”"),e(t)])]),M,Q,U,Z,$,J])}const ti=o(V,[["render",R],["__file","03.从0到1教你打包AI生成的小游戏.html.vue"]]);export{ti as default};
